ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_schedule.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_oo_Schedule,"ax",%progbits
  20              		.align	2
  21              		.global	EE_oo_Schedule
  22              		.thumb
  23              		.thumb_func
  24              		.type	EE_oo_Schedule, %function
  25              	EE_oo_Schedule:
  26              	.LFB59:
  27              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_schedule.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 2


  31:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * CVS: $Id: ee_schedule.c,v 1.1 2005/07/16 12:23:42 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #include "ErikaOS_1_ee_internal.inc"
  53:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  54:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** /* Schedule: 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     - the internal resource is released; 
  56:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     - no check if resources are still used by the task
  57:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     - then rescheduling takes place 
  58:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     - and then the internal resource is taken again
  59:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     - returns
  60:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       Extended status
  61:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       E_OS_CALLLEVEL if called at interrupt level 
  62:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       E_OS_RESOURCE if the calling task occupies resources
  63:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** */
  64:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #ifndef __PRIVATE_SCHEDULE__
  66:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  67:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** StatusType EE_oo_Schedule(void)
  68:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** {
  28              		.loc 1 68 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40              	.LBB60:
  41              	.LBB61:
  42              	.LBB62:
  43              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 3


   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 4


  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 5


 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 6


 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 212:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
 224:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 229:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 7


 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
  44              		.loc 2 260 0
  45              		.syntax unified
  46              	@ 260 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  47 0002 EFF31084 		mrs r4, primask
  48              	@ 0 "" 2
  49              	.LVL0:
 261:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
  50              		.loc 2 261 0
  51              	@ 261 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  52 0006 72B6     		cpsid i
  53              	@ 0 "" 2
  54              	.LVL1:
  55              		.thumb
  56              		.syntax unified
  57              	.LBE62:
  58              	.LBE61:
  59              	.LBE60:
  60              	.LBB63:
  61              	.LBB64:
  62              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 8


   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 9


  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 10


 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 11


 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 12


 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
  63              		.loc 3 240 0
  64 0008 274B     		ldr	r3, .L10
  65 000a 1D68     		ldr	r5, [r3]
  66              	.LBE64:
  67              	.LBE63:
  69:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   register EE_TID current, rq;
  70:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* Error Value */
  71:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   register StatusType ev;
  72:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* Primitive Lock Procedure */
  73:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION();
  74:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  75:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   EE_ORTI_set_service_in(EE_SERVICETRACE_SCHEDULE);
  76:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   EE_as_monitoring_the_stack();
  78:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  79:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   current = EE_stk_queryfirst();
  80:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   rq = EE_rq_queryfirst();
  68              		.loc 1 80 0
  69 000c FFF7FEFF 		bl	EE_rq_queryfirst
  70              	.LVL2:
  71              	.LBB65:
  72              	.LBB66:
  73              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Copyright (C) 2002-2009  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 13


  31:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Functions used in HAL implementations, to be included by a specific
  43:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ee_internal.h header.
  44:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Derived from pkg/cpu/pic30/inc/ee_internal.h
  45:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Author: 2009 Bernardo Dal Seno
  46:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  47:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  48:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  49:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * PSoC Port and API Generation
  50:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Carlos Fernando Meier Martinez
  51:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Hochschule Darmstadt, Germany. 2017.
  52:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  53:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  54:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifndef PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  55:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  56:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  57:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  58:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Nested Interrupts Handling
  59:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  60:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  62:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  63:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* The following variables belong to ERIKA OS section: ee_kernel_bss */
  64:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_START_SEC_VAR_NOINIT
  65:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  66:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  67:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** extern EE_UREG EE_IRQ_nesting_level;
  69:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  71:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  72:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_STOP_SEC_VAR_NOINIT
  73:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  74:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  75:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  76:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* can be called with interrupt enabled */
  77:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** __INLINE__ EE_UREG  EE_hal_get_IRQ_nesting_level(void)
  78:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** {
  79:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****     return EE_IRQ_nesting_level;
  74              		.loc 4 79 0
  75 0010 264B     		ldr	r3, .L10+4
  76 0012 1B68     		ldr	r3, [r3]
  77              	.LBE66:
  78              	.LBE65:
  81:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  82:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #ifdef EE_SERVICE_PROTECTION__
  83:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* [OS093]: If interrupts are disabled/suspended by a Task/OsIsr and the
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 14


  84:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       Task/OsIsr calls any OS service (excluding the interrupt services)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       then the Operating System shall ignore the service AND shall return
  86:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       E_OS_DISABLEDINT if the service returns a StatusType value. */
  87:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( EE_oo_check_disableint_error() ) {
  88:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OS_DISABLEDINT;
  89:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
  90:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* EE_SERVICE_PROTECTION__ */
  91:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
  92:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(EE_SERVICE_PROTECTION__))
  93:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* [OS088]: If an OS-Application makes a service call from the wrong context
  94:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       AND is currently not inside a Category 1 ISR the Operating System module
  95:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       shall not perform the requested action (the service call shall have no
  96:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       effect), and return E_OS_CALLEVEL (see [12], section 13.1) or the
  97:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       "invalid value" of  the service. (BSW11009, BSW11013) */
  98:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* check for a call at interrupt level */
  99:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( (EE_hal_get_IRQ_nesting_level() != 0U) || (current == EE_NIL)
  79              		.loc 1 99 0
  80 0014 002B     		cmp	r3, #0
  81 0016 3CD1     		bne	.L5
  82              		.loc 1 99 0 is_stmt 0 discriminator 1
  83 0018 B5F1FF3F 		cmp	r5, #-1
  84 001c 3BD0     		beq	.L6
 100:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #if !defined (EE_SERVICE_PROTECTION__)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   ) /* If EE_SERVICE_PROTECTION__ is not defined the succeeding
 102:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 	 * check is always FALSE, hence it is not needed  */
 103:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #else
 104:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   || (EE_as_get_execution_context() > TASK_Context) )
 105:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif
 106:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   {
 107:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OS_CALLEVEL;
 108:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
 109:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* __OO_EXTENDED_STATUS__ || EE_SERVICE_PROTECTION__ */
 110:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 111:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #ifdef __OO_EXTENDED_STATUS__
 112:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #ifndef __OO_NO_RESOURCES__
 113:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* check for busy resources */
 114:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( EE_th_resource_last[current] != EE_UREG_MINUS1 )
 115:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   {
 116:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OS_RESOURCE;
 117:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
 118:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* __OO_NO_RESOURCES__ */
 119:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 120:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #ifdef EE_AS_USER_SPINLOCKS__
 121:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* [OS624]: The AUTOSAR Operating System Schedule API service shall check if it
 122:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       has been called while the calling TASK has occupied a spinlock. In
 123:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       extended status an error E_OS_SPINLOCK shall be returned and the scheduler
 124:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       shall not be called. (BSW4080021) */
 125:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( EE_as_has_spinlocks_locked(current) ) {
 126:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OS_SPINLOCK;
 127:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
 128:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* EE_AS_USER_SPINLOCKS__ */
 129:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 130:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* __OO_EXTENDED_STATUS__ */
 131:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 132:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 133:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) &&	\
 134:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 15


 135:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /*  If a TASK is inside CallTrustedFunction() and TASK
 136:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       rescheduling takes place within the same OSApplication scheduling of
 137:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       other TASKs which belong to the same OS-Application as the caller needs
 138:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       to be restricted.
 139:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EG: To Assure that I CANNOT let a TASK release internal resource, if this
 140:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****         means schedule a TASK of the same OSApplication, unless the
 141:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****         OSApplication is TRUSTED. */
 142:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if (  (EE_as_active_app == EE_th_app[rq + 1]) &&
 143:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****         (EE_as_Application_RAM[EE_as_active_app].
 144:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****           TrustedFunctionCallsCounter != 0U) &&
 145:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****         (EE_as_Application_ROM[EE_as_active_app].Mode != EE_MEMPROT_TRUST_MODE )
 146:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****      )
 147:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   {
 148:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OK;
 149:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
 150:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 151:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 152:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   /* Check if there is a preemption */
 153:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( rq != EE_NIL ) {
  85              		.loc 1 153 0 is_stmt 1
  86 001e B0F1FF3F 		cmp	r0, #-1
  87 0022 3AD0     		beq	.L7
 154:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     /* The standard says that "Schedule enables a processor assignment
 155:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        to other TASKs with lower priority than the ceiling priority of
 156:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        the internal resource and higher priority than the priority of
 157:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        the calling TASK". That means that only TASKs currently in the
 158:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        ready queue with the ready priority > than the ready priority
 159:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        of the running TASK can be executed... */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     if ( EE_th_ready_prio[current] < EE_th_ready_prio[rq] ) {
  88              		.loc 1 160 0
  89 0024 224B     		ldr	r3, .L10+8
  90 0026 53F82560 		ldr	r6, [r3, r5, lsl #2]
  91 002a 53F82030 		ldr	r3, [r3, r0, lsl #2]
  92 002e 9E42     		cmp	r6, r3
  93 0030 35D2     		bcs	.L8
 161:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_oo_call_PostTaskHook();
 162:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* release the internal resource */
 163:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_sys_ceiling &= ~EE_th_dispatch_prio[current];
  94              		.loc 1 163 0
  95 0032 204A     		ldr	r2, .L10+12
  96 0034 52F82570 		ldr	r7, [r2, r5, lsl #2]
  97 0038 DFF884E0 		ldr	lr, .L10+24
  98 003c DEF80030 		ldr	r3, [lr]
  99 0040 23EA0703 		bic	r3, r3, r7
 164:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* set the ready priority bit. In that way we prevent preemption
 166:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * from all the tasks with lower priority than the current task.
 167:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        *
 168:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * NOTE: Setting the ready priority is legal because if the task
 169:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * has been scheduled it must be that the system_ceiling <
 170:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * ready_priority, and so (system_ceiling &ready_priority)=0!!!
 171:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * after a task has been put in execution, the dispatch priority
 172:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * is set. no other bits are set when this function is called
 173:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * (all the resources must be unlocked, and all the task that
 174:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        * preempts the running task must have been finished!.
 175:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****        */
 176:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_sys_ceiling |= EE_th_ready_prio[current];
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 16


 100              		.loc 1 176 0
 101 0044 3343     		orrs	r3, r3, r6
 177:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 178:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* we have to put the task in the ready status */
 179:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_th_status[current] = READY;
 102              		.loc 1 179 0
 103 0046 1C49     		ldr	r1, .L10+16
 104 0048 4FF0020C 		mov	ip, #2
 105 004c 41F825C0 		str	ip, [r1, r5, lsl #2]
 180:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* but not in the ready queue!!! 
 181:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****          the task remains into the stacked queue!
 182:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       */
 183:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 184:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* get the new internal resource */
 185:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_sys_ceiling |= EE_th_dispatch_prio[rq];
 106              		.loc 1 185 0
 107 0050 52F82020 		ldr	r2, [r2, r0, lsl #2]
 108 0054 1343     		orrs	r3, r3, r2
 109 0056 CEF80030 		str	r3, [lr]
 186:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* put the task in running state */
 187:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_th_status[rq] = RUNNING;
 110              		.loc 1 187 0
 111 005a 0023     		movs	r3, #0
 112 005c 41F82030 		str	r3, [r1, r0, lsl #2]
 113              	.LBB67:
 114              	.LBB68:
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 17


 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 18


 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 19


 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x += (EE_INT8)8;
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 20


 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_stkfirst = t;
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the ready queue */
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* put the first ready task into the stack */
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 21


 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_thread_end_instance(void);
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 22


 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __MULTI__
 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 115              		.loc 3 566 0
 116 0060 FFF7FEFF 		bl	EE_rq2stk_exchange
 117              	.LVL3:
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 118              		.loc 3 567 0
 119 0064 154B     		ldr	r3, .L10+20
 120 0066 53F82030 		ldr	r3, [r3, r0, lsl #2]
 121 006a 43B1     		cbz	r3, .L3
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 122              		.loc 3 569 0
 123 006c 0022     		movs	r2, #0
 124 006e 134B     		ldr	r3, .L10+20
 125 0070 43F82020 		str	r2, [r3, r0, lsl #2]
 126              	.LVL4:
 127              	.LBB69:
 128              	.LBB70:
 129              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 23


  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 24


  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 25


 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 130              		.loc 5 154 0
 131 0074 40F00040 		orr	r0, r0, #-2147483648
 132              	.LVL5:
 133 0078 FFF7FEFF 		bl	EE_cortex_mx_change_context
 134              	.LVL6:
 135 007c 01E0     		b	.L4
 136              	.LVL7:
 137              	.L3:
 138              	.LBE70:
 139              	.LBE69:
 140              	.LBB71:
 141              	.LBB72:
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 142              		.loc 5 167 0
 143 007e FFF7FEFF 		bl	EE_cortex_mx_change_context
 144              	.LVL8:
 145              	.L4:
 146              	.LBE72:
 147              	.LBE71:
 148              	.LBE68:
 149              	.LBE67:
 188:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 189:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_ORTI_set_th_eq_dispatch_prio(current);
 190:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_ORTI_set_th_eq_dispatch_prio(rq);
 191:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 192:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* Execute context SWITCH, this method return when we have a switch
 193:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****          back on the previous TASK contest. */
 194:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_oo_run_next_task();
 195:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 196:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* release the ready priority bit and... */
 197:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_sys_ceiling &= ~EE_th_ready_prio[current];
 150              		.loc 1 197 0
 151 0082 0F4A     		ldr	r2, .L10+24
 152 0084 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 26


 153 0086 23EA0603 		bic	r3, r3, r6
 198:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       /* ...get again the internal resource */
 199:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_sys_ceiling |= EE_th_dispatch_prio[current];
 154              		.loc 1 199 0
 155 008a 3B43     		orrs	r3, r3, r7
 156 008c 1360     		str	r3, [r2]
 157              	.LVL9:
 200:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 201:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****       EE_ORTI_set_th_eq_dispatch_prio(current);
 202:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     }
 203:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OK;
 158              		.loc 1 203 0
 159 008e 0020     		movs	r0, #0
 160 0090 06E0     		b	.L2
 161              	.LVL10:
 162              	.L5:
 107:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else
 163              		.loc 1 107 0
 164 0092 0220     		movs	r0, #2
 165              	.LVL11:
 166 0094 04E0     		b	.L2
 167              	.LVL12:
 168              	.L6:
 169 0096 0220     		movs	r0, #2
 170              	.LVL13:
 171 0098 02E0     		b	.L2
 172              	.LVL14:
 173              	.L7:
 204:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else {
 205:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     ev = E_OK;
 174              		.loc 1 205 0
 175 009a 0020     		movs	r0, #0
 176              	.LVL15:
 177 009c 00E0     		b	.L2
 178              	.LVL16:
 179              	.L8:
 203:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   } else {
 180              		.loc 1 203 0
 181 009e 0020     		movs	r0, #0
 182              	.LVL17:
 183              	.L2:
 184              	.LBB73:
 185              	.LBB74:
 186              	.LBB75:
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 187              		.loc 2 232 0
 188              		.syntax unified
 189              	@ 232 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 190 00a0 84F31088 		msr primask, r4
 191              	@ 0 "" 2
 192              	.LVL18:
 193              		.thumb
 194              		.syntax unified
 195              	.LBE75:
 196              	.LBE74:
 197              	.LBE73:
 206:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   }
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 27


 207:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 208:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   if ( ev != E_OK ) {
 209:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     EE_ORTI_set_lasterror(ev);
 210:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****     EE_oo_notify_error_service(OSServiceId_Schedule, ev);
 211:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   }
 212:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   EE_ORTI_set_service_out(EE_SERVICETRACE_SCHEDULE);
 214:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   EE_OS_EXIT_CRITICAL_SECTION();
 215:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** 
 216:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c ****   return ev;
 217:Generated_Source\PSoC5/ErikaOS_1_ee_schedule.c **** }
 198              		.loc 1 217 0
 199 00a4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 200              	.L11:
 201 00a6 00BF     		.align	2
 202              	.L10:
 203 00a8 00000000 		.word	EE_stkfirst
 204 00ac 00000000 		.word	EE_IRQ_nesting_level
 205 00b0 00000000 		.word	EE_th_ready_prio
 206 00b4 00000000 		.word	EE_th_dispatch_prio
 207 00b8 00000000 		.word	EE_th_status
 208 00bc 00000000 		.word	EE_th_waswaiting
 209 00c0 00000000 		.word	EE_sys_ceiling
 210              		.cfi_endproc
 211              	.LFE59:
 212              		.size	EE_oo_Schedule, .-EE_oo_Schedule
 213              		.text
 214              	.Letext0:
 215              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 216              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
 217              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_as_internal.inc"
 218              		.file 9 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_internal.inc"
 219              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 220              		.section	.debug_info,"",%progbits
 221              	.Ldebug_info0:
 222 0000 48050000 		.4byte	0x548
 223 0004 0400     		.2byte	0x4
 224 0006 00000000 		.4byte	.Ldebug_abbrev0
 225 000a 04       		.byte	0x4
 226 000b 01       		.uleb128 0x1
 227 000c AC040000 		.4byte	.LASF73
 228 0010 0C       		.byte	0xc
 229 0011 C6000000 		.4byte	.LASF74
 230 0015 B3050000 		.4byte	.LASF75
 231 0019 00000000 		.4byte	.Ldebug_ranges0+0
 232 001d 00000000 		.4byte	0
 233 0021 00000000 		.4byte	.Ldebug_line0
 234 0025 02       		.uleb128 0x2
 235 0026 01       		.byte	0x1
 236 0027 06       		.byte	0x6
 237 0028 8D020000 		.4byte	.LASF0
 238 002c 02       		.uleb128 0x2
 239 002d 01       		.byte	0x1
 240 002e 08       		.byte	0x8
 241 002f 3A020000 		.4byte	.LASF1
 242 0033 02       		.uleb128 0x2
 243 0034 02       		.byte	0x2
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 28


 244 0035 05       		.byte	0x5
 245 0036 6B000000 		.4byte	.LASF2
 246 003a 02       		.uleb128 0x2
 247 003b 02       		.byte	0x2
 248 003c 07       		.byte	0x7
 249 003d 40030000 		.4byte	.LASF3
 250 0041 02       		.uleb128 0x2
 251 0042 04       		.byte	0x4
 252 0043 05       		.byte	0x5
 253 0044 99010000 		.4byte	.LASF4
 254 0048 02       		.uleb128 0x2
 255 0049 04       		.byte	0x4
 256 004a 07       		.byte	0x7
 257 004b E3030000 		.4byte	.LASF5
 258 004f 02       		.uleb128 0x2
 259 0050 08       		.byte	0x8
 260 0051 05       		.byte	0x5
 261 0052 73010000 		.4byte	.LASF6
 262 0056 02       		.uleb128 0x2
 263 0057 08       		.byte	0x8
 264 0058 07       		.byte	0x7
 265 0059 99020000 		.4byte	.LASF7
 266 005d 03       		.uleb128 0x3
 267 005e 04       		.byte	0x4
 268 005f 05       		.byte	0x5
 269 0060 696E7400 		.ascii	"int\000"
 270 0064 02       		.uleb128 0x2
 271 0065 04       		.byte	0x4
 272 0066 07       		.byte	0x7
 273 0067 EC020000 		.4byte	.LASF8
 274 006b 02       		.uleb128 0x2
 275 006c 08       		.byte	0x8
 276 006d 04       		.byte	0x4
 277 006e 09020000 		.4byte	.LASF9
 278 0072 04       		.uleb128 0x4
 279 0073 28000000 		.4byte	.LASF10
 280 0077 06       		.byte	0x6
 281 0078 3E       		.byte	0x3e
 282 0079 2C000000 		.4byte	0x2c
 283 007d 04       		.uleb128 0x4
 284 007e 81010000 		.4byte	.LASF11
 285 0082 06       		.byte	0x6
 286 0083 3F       		.byte	0x3f
 287 0084 25000000 		.4byte	0x25
 288 0088 04       		.uleb128 0x4
 289 0089 68030000 		.4byte	.LASF12
 290 008d 06       		.byte	0x6
 291 008e 52       		.byte	0x52
 292 008f 3A000000 		.4byte	0x3a
 293 0093 04       		.uleb128 0x4
 294 0094 12030000 		.4byte	.LASF13
 295 0098 06       		.byte	0x6
 296 0099 53       		.byte	0x53
 297 009a 5D000000 		.4byte	0x5d
 298 009e 04       		.uleb128 0x4
 299 009f 88000000 		.4byte	.LASF14
 300 00a3 06       		.byte	0x6
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 29


 301 00a4 54       		.byte	0x54
 302 00a5 64000000 		.4byte	0x64
 303 00a9 04       		.uleb128 0x4
 304 00aa 3F000000 		.4byte	.LASF15
 305 00ae 02       		.byte	0x2
 306 00af 4D       		.byte	0x4d
 307 00b0 9E000000 		.4byte	0x9e
 308 00b4 04       		.uleb128 0x4
 309 00b5 80000000 		.4byte	.LASF16
 310 00b9 02       		.byte	0x2
 311 00ba 4F       		.byte	0x4f
 312 00bb 9E000000 		.4byte	0x9e
 313 00bf 04       		.uleb128 0x4
 314 00c0 F5030000 		.4byte	.LASF17
 315 00c4 02       		.byte	0x2
 316 00c5 54       		.byte	0x54
 317 00c6 A9000000 		.4byte	0xa9
 318 00ca 04       		.uleb128 0x4
 319 00cb B0000000 		.4byte	.LASF18
 320 00cf 02       		.byte	0x2
 321 00d0 78       		.byte	0x78
 322 00d1 93000000 		.4byte	0x93
 323 00d5 05       		.uleb128 0x5
 324 00d6 89010000 		.4byte	.LASF19
 325 00da 07       		.byte	0x7
 326 00db 1101     		.2byte	0x111
 327 00dd 88000000 		.4byte	0x88
 328 00e1 05       		.uleb128 0x5
 329 00e2 31020000 		.4byte	.LASF20
 330 00e6 07       		.byte	0x7
 331 00e7 F701     		.2byte	0x1f7
 332 00e9 CA000000 		.4byte	0xca
 333 00ed 05       		.uleb128 0x5
 334 00ee 75000000 		.4byte	.LASF21
 335 00f2 07       		.byte	0x7
 336 00f3 2103     		.2byte	0x321
 337 00f5 2C000000 		.4byte	0x2c
 338 00f9 06       		.uleb128 0x6
 339 00fa 01       		.byte	0x1
 340 00fb 2C000000 		.4byte	0x2c
 341 00ff 07       		.byte	0x7
 342 0100 5904     		.2byte	0x459
 343 0102 49010000 		.4byte	0x149
 344 0106 07       		.uleb128 0x7
 345 0107 19000000 		.4byte	.LASF22
 346 010b 00       		.byte	0
 347 010c 07       		.uleb128 0x7
 348 010d 33030000 		.4byte	.LASF23
 349 0111 01       		.byte	0x1
 350 0112 07       		.uleb128 0x7
 351 0113 A3000000 		.4byte	.LASF24
 352 0117 02       		.byte	0x2
 353 0118 07       		.uleb128 0x7
 354 0119 10010000 		.4byte	.LASF25
 355 011d 03       		.byte	0x3
 356 011e 07       		.uleb128 0x7
 357 011f 0D040000 		.4byte	.LASF26
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 30


 358 0123 04       		.byte	0x4
 359 0124 07       		.uleb128 0x7
 360 0125 55040000 		.4byte	.LASF27
 361 0129 05       		.byte	0x5
 362 012a 07       		.uleb128 0x7
 363 012b 69040000 		.4byte	.LASF28
 364 012f 06       		.byte	0x6
 365 0130 07       		.uleb128 0x7
 366 0131 69050000 		.4byte	.LASF29
 367 0135 07       		.byte	0x7
 368 0136 07       		.uleb128 0x7
 369 0137 53030000 		.4byte	.LASF30
 370 013b 08       		.byte	0x8
 371 013c 07       		.uleb128 0x7
 372 013d 72030000 		.4byte	.LASF31
 373 0141 09       		.byte	0x9
 374 0142 07       		.uleb128 0x7
 375 0143 66010000 		.4byte	.LASF32
 376 0147 0A       		.byte	0xa
 377 0148 00       		.byte	0
 378 0149 05       		.uleb128 0x5
 379 014a B7000000 		.4byte	.LASF33
 380 014e 07       		.byte	0x7
 381 014f 6504     		.2byte	0x465
 382 0151 F9000000 		.4byte	0xf9
 383 0155 08       		.uleb128 0x8
 384 0156 64020000 		.4byte	.LASF76
 385 015a 02       		.byte	0x2
 386 015b F1       		.byte	0xf1
 387 015c B4000000 		.4byte	0xb4
 388 0160 03       		.byte	0x3
 389 0161 71010000 		.4byte	0x171
 390 0165 09       		.uleb128 0x9
 391 0166 F5000000 		.4byte	.LASF50
 392 016a 02       		.byte	0x2
 393 016b F4       		.byte	0xf4
 394 016c B4000000 		.4byte	0xb4
 395 0170 00       		.byte	0
 396 0171 0A       		.uleb128 0xa
 397 0172 B9030000 		.4byte	.LASF34
 398 0176 02       		.byte	0x2
 399 0177 DC       		.byte	0xdc
 400 0178 03       		.byte	0x3
 401 0179 87010000 		.4byte	0x187
 402 017d 0B       		.uleb128 0xb
 403 017e 6600     		.ascii	"f\000"
 404 0180 02       		.byte	0x2
 405 0181 DC       		.byte	0xdc
 406 0182 B4000000 		.4byte	0xb4
 407 0186 00       		.byte	0
 408 0187 0C       		.uleb128 0xc
 409 0188 A2010000 		.4byte	.LASF35
 410 018c 07       		.byte	0x7
 411 018d 9703     		.2byte	0x397
 412 018f 03       		.byte	0x3
 413 0190 A1010000 		.4byte	0x1a1
 414 0194 0D       		.uleb128 0xd
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 31


 415 0195 73727600 		.ascii	"srv\000"
 416 0199 07       		.byte	0x7
 417 019a 9703     		.2byte	0x397
 418 019c 72000000 		.4byte	0x72
 419 01a0 00       		.byte	0
 420 01a1 0C       		.uleb128 0xc
 421 01a2 B6010000 		.4byte	.LASF36
 422 01a6 07       		.byte	0x7
 423 01a7 8404     		.2byte	0x484
 424 01a9 03       		.byte	0x3
 425 01aa BB010000 		.4byte	0x1bb
 426 01ae 0D       		.uleb128 0xd
 427 01af 63747800 		.ascii	"ctx\000"
 428 01b3 07       		.byte	0x7
 429 01b4 8504     		.2byte	0x485
 430 01b6 49010000 		.4byte	0x149
 431 01ba 00       		.byte	0
 432 01bb 0A       		.uleb128 0xa
 433 01bc 7C020000 		.4byte	.LASF37
 434 01c0 05       		.byte	0x5
 435 01c1 98       		.byte	0x98
 436 01c2 03       		.byte	0x3
 437 01c3 D3010000 		.4byte	0x1d3
 438 01c7 0B       		.uleb128 0xb
 439 01c8 74696400 		.ascii	"tid\000"
 440 01cc 05       		.byte	0x5
 441 01cd 98       		.byte	0x98
 442 01ce CA000000 		.4byte	0xca
 443 01d2 00       		.byte	0
 444 01d3 0E       		.uleb128 0xe
 445 01d4 52050000 		.4byte	.LASF41
 446 01d8 03       		.byte	0x3
 447 01d9 8D01     		.2byte	0x18d
 448 01db 03       		.byte	0x3
 449 01dc 0A       		.uleb128 0xa
 450 01dd D2010000 		.4byte	.LASF38
 451 01e1 05       		.byte	0x5
 452 01e2 A5       		.byte	0xa5
 453 01e3 03       		.byte	0x3
 454 01e4 F4010000 		.4byte	0x1f4
 455 01e8 0B       		.uleb128 0xb
 456 01e9 74696400 		.ascii	"tid\000"
 457 01ed 05       		.byte	0x5
 458 01ee A5       		.byte	0xa5
 459 01ef CA000000 		.4byte	0xca
 460 01f3 00       		.byte	0
 461 01f4 0F       		.uleb128 0xf
 462 01f5 24040000 		.4byte	.LASF39
 463 01f9 04       		.byte	0x4
 464 01fa 4D       		.byte	0x4d
 465 01fb A9000000 		.4byte	0xa9
 466 01ff 03       		.byte	0x3
 467 0200 0F       		.uleb128 0xf
 468 0201 DA020000 		.4byte	.LASF40
 469 0205 03       		.byte	0x3
 470 0206 EE       		.byte	0xee
 471 0207 CA000000 		.4byte	0xca
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 32


 472 020b 03       		.byte	0x3
 473 020c 0E       		.uleb128 0xe
 474 020d B0020000 		.4byte	.LASF42
 475 0211 08       		.byte	0x8
 476 0212 AB01     		.2byte	0x1ab
 477 0214 03       		.byte	0x3
 478 0215 0C       		.uleb128 0xc
 479 0216 22010000 		.4byte	.LASF43
 480 021a 07       		.byte	0x7
 481 021b A303     		.2byte	0x3a3
 482 021d 03       		.byte	0x3
 483 021e 2E020000 		.4byte	0x22e
 484 0222 0D       		.uleb128 0xd
 485 0223 696400   		.ascii	"id\000"
 486 0226 07       		.byte	0x7
 487 0227 A303     		.2byte	0x3a3
 488 0229 72000000 		.4byte	0x72
 489 022d 00       		.byte	0
 490 022e 0F       		.uleb128 0xf
 491 022f 95050000 		.4byte	.LASF44
 492 0233 09       		.byte	0x9
 493 0234 60       		.byte	0x60
 494 0235 B4000000 		.4byte	0xb4
 495 0239 03       		.byte	0x3
 496 023a 0C       		.uleb128 0xc
 497 023b 88030000 		.4byte	.LASF45
 498 023f 07       		.byte	0x7
 499 0240 D203     		.2byte	0x3d2
 500 0242 03       		.byte	0x3
 501 0243 54020000 		.4byte	0x254
 502 0247 0D       		.uleb128 0xd
 503 0248 746D7000 		.ascii	"tmp\000"
 504 024c 07       		.byte	0x7
 505 024d D203     		.2byte	0x3d2
 506 024f CA000000 		.4byte	0xca
 507 0253 00       		.byte	0
 508 0254 0E       		.uleb128 0xe
 509 0255 1B030000 		.4byte	.LASF46
 510 0259 03       		.byte	0x3
 511 025a 9A01     		.2byte	0x19a
 512 025c 03       		.byte	0x3
 513 025d 0A       		.uleb128 0xa
 514 025e 48020000 		.4byte	.LASF47
 515 0262 09       		.byte	0x9
 516 0263 68       		.byte	0x68
 517 0264 03       		.byte	0x3
 518 0265 73020000 		.4byte	0x273
 519 0269 0B       		.uleb128 0xb
 520 026a 6600     		.ascii	"f\000"
 521 026c 09       		.byte	0x9
 522 026d 68       		.byte	0x68
 523 026e B4000000 		.4byte	0xb4
 524 0272 00       		.byte	0
 525 0273 0C       		.uleb128 0xc
 526 0274 7D050000 		.4byte	.LASF48
 527 0278 07       		.byte	0x7
 528 0279 A803     		.2byte	0x3a8
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 33


 529 027b 03       		.byte	0x3
 530 027c 8C020000 		.4byte	0x28c
 531 0280 0D       		.uleb128 0xd
 532 0281 696400   		.ascii	"id\000"
 533 0284 07       		.byte	0x7
 534 0285 A803     		.2byte	0x3a8
 535 0287 72000000 		.4byte	0x72
 536 028b 00       		.byte	0
 537 028c 0C       		.uleb128 0xc
 538 028d 52010000 		.4byte	.LASF49
 539 0291 03       		.byte	0x3
 540 0292 3202     		.2byte	0x232
 541 0294 03       		.byte	0x3
 542 0295 A6020000 		.4byte	0x2a6
 543 0299 10       		.uleb128 0x10
 544 029a 746D7000 		.ascii	"tmp\000"
 545 029e 03       		.byte	0x3
 546 029f 3402     		.2byte	0x234
 547 02a1 E1000000 		.4byte	0xe1
 548 02a5 00       		.byte	0
 549 02a6 11       		.uleb128 0x11
 550 02a7 CB020000 		.4byte	.LASF77
 551 02ab 01       		.byte	0x1
 552 02ac 43       		.byte	0x43
 553 02ad ED000000 		.4byte	0xed
 554 02b1 00000000 		.4byte	.LFB59
 555 02b5 C4000000 		.4byte	.LFE59-.LFB59
 556 02b9 01       		.uleb128 0x1
 557 02ba 9C       		.byte	0x9c
 558 02bb 04040000 		.4byte	0x404
 559 02bf 09       		.uleb128 0x9
 560 02c0 94040000 		.4byte	.LASF51
 561 02c4 01       		.byte	0x1
 562 02c5 45       		.byte	0x45
 563 02c6 CA000000 		.4byte	0xca
 564 02ca 12       		.uleb128 0x12
 565 02cb 727100   		.ascii	"rq\000"
 566 02ce 01       		.byte	0x1
 567 02cf 45       		.byte	0x45
 568 02d0 CA000000 		.4byte	0xca
 569 02d4 00000000 		.4byte	.LLST0
 570 02d8 13       		.uleb128 0x13
 571 02d9 657600   		.ascii	"ev\000"
 572 02dc 01       		.byte	0x1
 573 02dd 47       		.byte	0x47
 574 02de ED000000 		.4byte	0xed
 575 02e2 01       		.uleb128 0x1
 576 02e3 50       		.byte	0x50
 577 02e4 14       		.uleb128 0x14
 578 02e5 9C040000 		.4byte	.LASF52
 579 02e9 01       		.byte	0x1
 580 02ea 49       		.byte	0x49
 581 02eb B4000000 		.4byte	0xb4
 582 02ef 01       		.uleb128 0x1
 583 02f0 54       		.byte	0x54
 584 02f1 15       		.uleb128 0x15
 585 02f2 2E020000 		.4byte	0x22e
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 34


 586 02f6 02000000 		.4byte	.LBB60
 587 02fa 06000000 		.4byte	.LBE60-.LBB60
 588 02fe 01       		.byte	0x1
 589 02ff 49       		.byte	0x49
 590 0300 28030000 		.4byte	0x328
 591 0304 16       		.uleb128 0x16
 592 0305 55010000 		.4byte	0x155
 593 0309 02000000 		.4byte	.LBB61
 594 030d 06000000 		.4byte	.LBE61-.LBB61
 595 0311 09       		.byte	0x9
 596 0312 62       		.byte	0x62
 597 0313 17       		.uleb128 0x17
 598 0314 02000000 		.4byte	.LBB62
 599 0318 06000000 		.4byte	.LBE62-.LBB62
 600 031c 18       		.uleb128 0x18
 601 031d 65010000 		.4byte	0x165
 602 0321 3F000000 		.4byte	.LLST1
 603 0325 00       		.byte	0
 604 0326 00       		.byte	0
 605 0327 00       		.byte	0
 606 0328 19       		.uleb128 0x19
 607 0329 00020000 		.4byte	0x200
 608 032d 08000000 		.4byte	.LBB63
 609 0331 04000000 		.4byte	.LBE63-.LBB63
 610 0335 01       		.byte	0x1
 611 0336 4F       		.byte	0x4f
 612 0337 19       		.uleb128 0x19
 613 0338 F4010000 		.4byte	0x1f4
 614 033c 10000000 		.4byte	.LBB65
 615 0340 04000000 		.4byte	.LBE65-.LBB65
 616 0344 01       		.byte	0x1
 617 0345 63       		.byte	0x63
 618 0346 15       		.uleb128 0x15
 619 0347 8C020000 		.4byte	0x28c
 620 034b 60000000 		.4byte	.LBB67
 621 034f 22000000 		.4byte	.LBE67-.LBB67
 622 0353 01       		.byte	0x1
 623 0354 C2       		.byte	0xc2
 624 0355 C4030000 		.4byte	0x3c4
 625 0359 17       		.uleb128 0x17
 626 035a 60000000 		.4byte	.LBB68
 627 035e 22000000 		.4byte	.LBE68-.LBB68
 628 0362 18       		.uleb128 0x18
 629 0363 99020000 		.4byte	0x299
 630 0367 52000000 		.4byte	.LLST2
 631 036b 1A       		.uleb128 0x1a
 632 036c BB010000 		.4byte	0x1bb
 633 0370 74000000 		.4byte	.LBB69
 634 0374 0A000000 		.4byte	.LBE69-.LBB69
 635 0378 03       		.byte	0x3
 636 0379 3C02     		.2byte	0x23c
 637 037b 92030000 		.4byte	0x392
 638 037f 1B       		.uleb128 0x1b
 639 0380 C7010000 		.4byte	0x1c7
 640 0384 70000000 		.4byte	.LLST3
 641 0388 1C       		.uleb128 0x1c
 642 0389 7C000000 		.4byte	.LVL6
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 35


 643 038d 28050000 		.4byte	0x528
 644 0391 00       		.byte	0
 645 0392 1A       		.uleb128 0x1a
 646 0393 DC010000 		.4byte	0x1dc
 647 0397 7E000000 		.4byte	.LBB71
 648 039b 04000000 		.4byte	.LBE71-.LBB71
 649 039f 03       		.byte	0x3
 650 03a0 3F02     		.2byte	0x23f
 651 03a2 B9030000 		.4byte	0x3b9
 652 03a6 1B       		.uleb128 0x1b
 653 03a7 E8010000 		.4byte	0x1e8
 654 03ab 83000000 		.4byte	.LLST4
 655 03af 1C       		.uleb128 0x1c
 656 03b0 82000000 		.4byte	.LVL8
 657 03b4 28050000 		.4byte	0x528
 658 03b8 00       		.byte	0
 659 03b9 1C       		.uleb128 0x1c
 660 03ba 64000000 		.4byte	.LVL3
 661 03be 33050000 		.4byte	0x533
 662 03c2 00       		.byte	0
 663 03c3 00       		.byte	0
 664 03c4 15       		.uleb128 0x15
 665 03c5 5D020000 		.4byte	0x25d
 666 03c9 A0000000 		.4byte	.LBB73
 667 03cd 04000000 		.4byte	.LBE73-.LBB73
 668 03d1 01       		.byte	0x1
 669 03d2 D6       		.byte	0xd6
 670 03d3 FA030000 		.4byte	0x3fa
 671 03d7 1B       		.uleb128 0x1b
 672 03d8 69020000 		.4byte	0x269
 673 03dc 96000000 		.4byte	.LLST5
 674 03e0 16       		.uleb128 0x16
 675 03e1 71010000 		.4byte	0x171
 676 03e5 A0000000 		.4byte	.LBB74
 677 03e9 04000000 		.4byte	.LBE74-.LBB74
 678 03ed 09       		.byte	0x9
 679 03ee 6A       		.byte	0x6a
 680 03ef 1B       		.uleb128 0x1b
 681 03f0 7D010000 		.4byte	0x17d
 682 03f4 96000000 		.4byte	.LLST5
 683 03f8 00       		.byte	0
 684 03f9 00       		.byte	0
 685 03fa 1C       		.uleb128 0x1c
 686 03fb 10000000 		.4byte	.LVL2
 687 03ff 3F050000 		.4byte	0x53f
 688 0403 00       		.byte	0
 689 0404 1D       		.uleb128 0x1d
 690 0405 FB000000 		.4byte	.LASF53
 691 0409 04       		.byte	0x4
 692 040a 44       		.byte	0x44
 693 040b A9000000 		.4byte	0xa9
 694 040f 1D       		.uleb128 0x1d
 695 0410 00000000 		.4byte	.LASF54
 696 0414 05       		.byte	0x5
 697 0415 48       		.byte	0x48
 698 0416 CA000000 		.4byte	0xca
 699 041a 1E       		.uleb128 0x1e
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 36


 700 041b 31040000 		.4byte	0x431
 701 041f 2A040000 		.4byte	0x42a
 702 0423 1F       		.uleb128 0x1f
 703 0424 2A040000 		.4byte	0x42a
 704 0428 02       		.byte	0x2
 705 0429 00       		.byte	0
 706 042a 02       		.uleb128 0x2
 707 042b 04       		.byte	0x4
 708 042c 07       		.byte	0x7
 709 042d 7E040000 		.4byte	.LASF55
 710 0431 20       		.uleb128 0x20
 711 0432 A9000000 		.4byte	0xa9
 712 0436 1D       		.uleb128 0x1d
 713 0437 92000000 		.4byte	.LASF56
 714 043b 07       		.byte	0x7
 715 043c B2       		.byte	0xb2
 716 043d 41040000 		.4byte	0x441
 717 0441 20       		.uleb128 0x20
 718 0442 1A040000 		.4byte	0x41a
 719 0446 1D       		.uleb128 0x1d
 720 0447 41040000 		.4byte	.LASF57
 721 044b 07       		.byte	0x7
 722 044c B3       		.byte	0xb3
 723 044d 51040000 		.4byte	0x451
 724 0451 20       		.uleb128 0x20
 725 0452 1A040000 		.4byte	0x41a
 726 0456 1E       		.uleb128 0x1e
 727 0457 A9000000 		.4byte	0xa9
 728 045b 66040000 		.4byte	0x466
 729 045f 1F       		.uleb128 0x1f
 730 0460 2A040000 		.4byte	0x42a
 731 0464 02       		.byte	0x2
 732 0465 00       		.byte	0
 733 0466 1D       		.uleb128 0x1d
 734 0467 F9020000 		.4byte	.LASF58
 735 046b 07       		.byte	0x7
 736 046c CA       		.byte	0xca
 737 046d 56040000 		.4byte	0x456
 738 0471 1E       		.uleb128 0x1e
 739 0472 CA000000 		.4byte	0xca
 740 0476 81040000 		.4byte	0x481
 741 047a 1F       		.uleb128 0x1f
 742 047b 2A040000 		.4byte	0x42a
 743 047f 02       		.byte	0x2
 744 0480 00       		.byte	0
 745 0481 1D       		.uleb128 0x1d
 746 0482 A1040000 		.4byte	.LASF59
 747 0486 07       		.byte	0x7
 748 0487 D2       		.byte	0xd2
 749 0488 71040000 		.4byte	0x471
 750 048c 1D       		.uleb128 0x1d
 751 048d 06030000 		.4byte	.LASF60
 752 0491 07       		.byte	0x7
 753 0492 DA       		.byte	0xda
 754 0493 56040000 		.4byte	0x456
 755 0497 1D       		.uleb128 0x1d
 756 0498 01040000 		.4byte	.LASF61
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 37


 757 049c 07       		.byte	0x7
 758 049d E2       		.byte	0xe2
 759 049e CA000000 		.4byte	0xca
 760 04a2 1D       		.uleb128 0x1d
 761 04a3 E7010000 		.4byte	.LASF62
 762 04a7 07       		.byte	0x7
 763 04a8 F7       		.byte	0xf7
 764 04a9 A9000000 		.4byte	0xa9
 765 04ad 21       		.uleb128 0x21
 766 04ae 31000000 		.4byte	.LASF63
 767 04b2 07       		.byte	0x7
 768 04b3 3F01     		.2byte	0x13f
 769 04b5 D5000000 		.4byte	0xd5
 770 04b9 21       		.uleb128 0x21
 771 04ba 47000000 		.4byte	.LASF64
 772 04be 07       		.byte	0x7
 773 04bf 5C01     		.2byte	0x15c
 774 04c1 56040000 		.4byte	0x456
 775 04c5 1E       		.uleb128 0x1e
 776 04c6 BF000000 		.4byte	0xbf
 777 04ca D5040000 		.4byte	0x4d5
 778 04ce 1F       		.uleb128 0x1f
 779 04cf 2A040000 		.4byte	0x42a
 780 04d3 02       		.byte	0x2
 781 04d4 00       		.byte	0
 782 04d5 21       		.uleb128 0x21
 783 04d6 5A000000 		.4byte	.LASF65
 784 04da 07       		.byte	0x7
 785 04db 6701     		.2byte	0x167
 786 04dd C5040000 		.4byte	0x4c5
 787 04e1 1D       		.uleb128 0x1d
 788 04e2 3A050000 		.4byte	.LASF66
 789 04e6 0A       		.byte	0xa
 790 04e7 40       		.byte	0x40
 791 04e8 A9000000 		.4byte	0xa9
 792 04ec 1D       		.uleb128 0x1d
 793 04ed 39010000 		.4byte	.LASF67
 794 04f1 0A       		.byte	0xa
 795 04f2 47       		.byte	0x47
 796 04f3 B4000000 		.4byte	0xb4
 797 04f7 1D       		.uleb128 0x1d
 798 04f8 D0030000 		.4byte	.LASF68
 799 04fc 0A       		.byte	0xa
 800 04fd 4A       		.byte	0x4a
 801 04fe A9000000 		.4byte	0xa9
 802 0502 1E       		.uleb128 0x1e
 803 0503 12050000 		.4byte	0x512
 804 0507 12050000 		.4byte	0x512
 805 050b 1F       		.uleb128 0x1f
 806 050c 2A040000 		.4byte	0x42a
 807 0510 FF       		.byte	0xff
 808 0511 00       		.byte	0
 809 0512 20       		.uleb128 0x20
 810 0513 7D000000 		.4byte	0x7d
 811 0517 21       		.uleb128 0x21
 812 0518 87040000 		.4byte	.LASF69
 813 051c 03       		.byte	0x3
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 38


 814 051d AB01     		.2byte	0x1ab
 815 051f 23050000 		.4byte	0x523
 816 0523 20       		.uleb128 0x20
 817 0524 02050000 		.4byte	0x502
 818 0528 22       		.uleb128 0x22
 819 0529 15020000 		.4byte	.LASF70
 820 052d 15020000 		.4byte	.LASF70
 821 0531 05       		.byte	0x5
 822 0532 4F       		.byte	0x4f
 823 0533 23       		.uleb128 0x23
 824 0534 F6010000 		.4byte	.LASF71
 825 0538 F6010000 		.4byte	.LASF71
 826 053c 03       		.byte	0x3
 827 053d E901     		.2byte	0x1e9
 828 053f 23       		.uleb128 0x23
 829 0540 A8030000 		.4byte	.LASF72
 830 0544 A8030000 		.4byte	.LASF72
 831 0548 03       		.byte	0x3
 832 0549 CB01     		.2byte	0x1cb
 833 054b 00       		.byte	0
 834              		.section	.debug_abbrev,"",%progbits
 835              	.Ldebug_abbrev0:
 836 0000 01       		.uleb128 0x1
 837 0001 11       		.uleb128 0x11
 838 0002 01       		.byte	0x1
 839 0003 25       		.uleb128 0x25
 840 0004 0E       		.uleb128 0xe
 841 0005 13       		.uleb128 0x13
 842 0006 0B       		.uleb128 0xb
 843 0007 03       		.uleb128 0x3
 844 0008 0E       		.uleb128 0xe
 845 0009 1B       		.uleb128 0x1b
 846 000a 0E       		.uleb128 0xe
 847 000b 55       		.uleb128 0x55
 848 000c 17       		.uleb128 0x17
 849 000d 11       		.uleb128 0x11
 850 000e 01       		.uleb128 0x1
 851 000f 10       		.uleb128 0x10
 852 0010 17       		.uleb128 0x17
 853 0011 00       		.byte	0
 854 0012 00       		.byte	0
 855 0013 02       		.uleb128 0x2
 856 0014 24       		.uleb128 0x24
 857 0015 00       		.byte	0
 858 0016 0B       		.uleb128 0xb
 859 0017 0B       		.uleb128 0xb
 860 0018 3E       		.uleb128 0x3e
 861 0019 0B       		.uleb128 0xb
 862 001a 03       		.uleb128 0x3
 863 001b 0E       		.uleb128 0xe
 864 001c 00       		.byte	0
 865 001d 00       		.byte	0
 866 001e 03       		.uleb128 0x3
 867 001f 24       		.uleb128 0x24
 868 0020 00       		.byte	0
 869 0021 0B       		.uleb128 0xb
 870 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 39


 871 0023 3E       		.uleb128 0x3e
 872 0024 0B       		.uleb128 0xb
 873 0025 03       		.uleb128 0x3
 874 0026 08       		.uleb128 0x8
 875 0027 00       		.byte	0
 876 0028 00       		.byte	0
 877 0029 04       		.uleb128 0x4
 878 002a 16       		.uleb128 0x16
 879 002b 00       		.byte	0
 880 002c 03       		.uleb128 0x3
 881 002d 0E       		.uleb128 0xe
 882 002e 3A       		.uleb128 0x3a
 883 002f 0B       		.uleb128 0xb
 884 0030 3B       		.uleb128 0x3b
 885 0031 0B       		.uleb128 0xb
 886 0032 49       		.uleb128 0x49
 887 0033 13       		.uleb128 0x13
 888 0034 00       		.byte	0
 889 0035 00       		.byte	0
 890 0036 05       		.uleb128 0x5
 891 0037 16       		.uleb128 0x16
 892 0038 00       		.byte	0
 893 0039 03       		.uleb128 0x3
 894 003a 0E       		.uleb128 0xe
 895 003b 3A       		.uleb128 0x3a
 896 003c 0B       		.uleb128 0xb
 897 003d 3B       		.uleb128 0x3b
 898 003e 05       		.uleb128 0x5
 899 003f 49       		.uleb128 0x49
 900 0040 13       		.uleb128 0x13
 901 0041 00       		.byte	0
 902 0042 00       		.byte	0
 903 0043 06       		.uleb128 0x6
 904 0044 04       		.uleb128 0x4
 905 0045 01       		.byte	0x1
 906 0046 0B       		.uleb128 0xb
 907 0047 0B       		.uleb128 0xb
 908 0048 49       		.uleb128 0x49
 909 0049 13       		.uleb128 0x13
 910 004a 3A       		.uleb128 0x3a
 911 004b 0B       		.uleb128 0xb
 912 004c 3B       		.uleb128 0x3b
 913 004d 05       		.uleb128 0x5
 914 004e 01       		.uleb128 0x1
 915 004f 13       		.uleb128 0x13
 916 0050 00       		.byte	0
 917 0051 00       		.byte	0
 918 0052 07       		.uleb128 0x7
 919 0053 28       		.uleb128 0x28
 920 0054 00       		.byte	0
 921 0055 03       		.uleb128 0x3
 922 0056 0E       		.uleb128 0xe
 923 0057 1C       		.uleb128 0x1c
 924 0058 0B       		.uleb128 0xb
 925 0059 00       		.byte	0
 926 005a 00       		.byte	0
 927 005b 08       		.uleb128 0x8
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 40


 928 005c 2E       		.uleb128 0x2e
 929 005d 01       		.byte	0x1
 930 005e 03       		.uleb128 0x3
 931 005f 0E       		.uleb128 0xe
 932 0060 3A       		.uleb128 0x3a
 933 0061 0B       		.uleb128 0xb
 934 0062 3B       		.uleb128 0x3b
 935 0063 0B       		.uleb128 0xb
 936 0064 27       		.uleb128 0x27
 937 0065 19       		.uleb128 0x19
 938 0066 49       		.uleb128 0x49
 939 0067 13       		.uleb128 0x13
 940 0068 20       		.uleb128 0x20
 941 0069 0B       		.uleb128 0xb
 942 006a 01       		.uleb128 0x1
 943 006b 13       		.uleb128 0x13
 944 006c 00       		.byte	0
 945 006d 00       		.byte	0
 946 006e 09       		.uleb128 0x9
 947 006f 34       		.uleb128 0x34
 948 0070 00       		.byte	0
 949 0071 03       		.uleb128 0x3
 950 0072 0E       		.uleb128 0xe
 951 0073 3A       		.uleb128 0x3a
 952 0074 0B       		.uleb128 0xb
 953 0075 3B       		.uleb128 0x3b
 954 0076 0B       		.uleb128 0xb
 955 0077 49       		.uleb128 0x49
 956 0078 13       		.uleb128 0x13
 957 0079 00       		.byte	0
 958 007a 00       		.byte	0
 959 007b 0A       		.uleb128 0xa
 960 007c 2E       		.uleb128 0x2e
 961 007d 01       		.byte	0x1
 962 007e 03       		.uleb128 0x3
 963 007f 0E       		.uleb128 0xe
 964 0080 3A       		.uleb128 0x3a
 965 0081 0B       		.uleb128 0xb
 966 0082 3B       		.uleb128 0x3b
 967 0083 0B       		.uleb128 0xb
 968 0084 27       		.uleb128 0x27
 969 0085 19       		.uleb128 0x19
 970 0086 20       		.uleb128 0x20
 971 0087 0B       		.uleb128 0xb
 972 0088 01       		.uleb128 0x1
 973 0089 13       		.uleb128 0x13
 974 008a 00       		.byte	0
 975 008b 00       		.byte	0
 976 008c 0B       		.uleb128 0xb
 977 008d 05       		.uleb128 0x5
 978 008e 00       		.byte	0
 979 008f 03       		.uleb128 0x3
 980 0090 08       		.uleb128 0x8
 981 0091 3A       		.uleb128 0x3a
 982 0092 0B       		.uleb128 0xb
 983 0093 3B       		.uleb128 0x3b
 984 0094 0B       		.uleb128 0xb
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 41


 985 0095 49       		.uleb128 0x49
 986 0096 13       		.uleb128 0x13
 987 0097 00       		.byte	0
 988 0098 00       		.byte	0
 989 0099 0C       		.uleb128 0xc
 990 009a 2E       		.uleb128 0x2e
 991 009b 01       		.byte	0x1
 992 009c 03       		.uleb128 0x3
 993 009d 0E       		.uleb128 0xe
 994 009e 3A       		.uleb128 0x3a
 995 009f 0B       		.uleb128 0xb
 996 00a0 3B       		.uleb128 0x3b
 997 00a1 05       		.uleb128 0x5
 998 00a2 27       		.uleb128 0x27
 999 00a3 19       		.uleb128 0x19
 1000 00a4 20       		.uleb128 0x20
 1001 00a5 0B       		.uleb128 0xb
 1002 00a6 01       		.uleb128 0x1
 1003 00a7 13       		.uleb128 0x13
 1004 00a8 00       		.byte	0
 1005 00a9 00       		.byte	0
 1006 00aa 0D       		.uleb128 0xd
 1007 00ab 05       		.uleb128 0x5
 1008 00ac 00       		.byte	0
 1009 00ad 03       		.uleb128 0x3
 1010 00ae 08       		.uleb128 0x8
 1011 00af 3A       		.uleb128 0x3a
 1012 00b0 0B       		.uleb128 0xb
 1013 00b1 3B       		.uleb128 0x3b
 1014 00b2 05       		.uleb128 0x5
 1015 00b3 49       		.uleb128 0x49
 1016 00b4 13       		.uleb128 0x13
 1017 00b5 00       		.byte	0
 1018 00b6 00       		.byte	0
 1019 00b7 0E       		.uleb128 0xe
 1020 00b8 2E       		.uleb128 0x2e
 1021 00b9 00       		.byte	0
 1022 00ba 03       		.uleb128 0x3
 1023 00bb 0E       		.uleb128 0xe
 1024 00bc 3A       		.uleb128 0x3a
 1025 00bd 0B       		.uleb128 0xb
 1026 00be 3B       		.uleb128 0x3b
 1027 00bf 05       		.uleb128 0x5
 1028 00c0 27       		.uleb128 0x27
 1029 00c1 19       		.uleb128 0x19
 1030 00c2 20       		.uleb128 0x20
 1031 00c3 0B       		.uleb128 0xb
 1032 00c4 00       		.byte	0
 1033 00c5 00       		.byte	0
 1034 00c6 0F       		.uleb128 0xf
 1035 00c7 2E       		.uleb128 0x2e
 1036 00c8 00       		.byte	0
 1037 00c9 03       		.uleb128 0x3
 1038 00ca 0E       		.uleb128 0xe
 1039 00cb 3A       		.uleb128 0x3a
 1040 00cc 0B       		.uleb128 0xb
 1041 00cd 3B       		.uleb128 0x3b
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 42


 1042 00ce 0B       		.uleb128 0xb
 1043 00cf 27       		.uleb128 0x27
 1044 00d0 19       		.uleb128 0x19
 1045 00d1 49       		.uleb128 0x49
 1046 00d2 13       		.uleb128 0x13
 1047 00d3 20       		.uleb128 0x20
 1048 00d4 0B       		.uleb128 0xb
 1049 00d5 00       		.byte	0
 1050 00d6 00       		.byte	0
 1051 00d7 10       		.uleb128 0x10
 1052 00d8 34       		.uleb128 0x34
 1053 00d9 00       		.byte	0
 1054 00da 03       		.uleb128 0x3
 1055 00db 08       		.uleb128 0x8
 1056 00dc 3A       		.uleb128 0x3a
 1057 00dd 0B       		.uleb128 0xb
 1058 00de 3B       		.uleb128 0x3b
 1059 00df 05       		.uleb128 0x5
 1060 00e0 49       		.uleb128 0x49
 1061 00e1 13       		.uleb128 0x13
 1062 00e2 00       		.byte	0
 1063 00e3 00       		.byte	0
 1064 00e4 11       		.uleb128 0x11
 1065 00e5 2E       		.uleb128 0x2e
 1066 00e6 01       		.byte	0x1
 1067 00e7 3F       		.uleb128 0x3f
 1068 00e8 19       		.uleb128 0x19
 1069 00e9 03       		.uleb128 0x3
 1070 00ea 0E       		.uleb128 0xe
 1071 00eb 3A       		.uleb128 0x3a
 1072 00ec 0B       		.uleb128 0xb
 1073 00ed 3B       		.uleb128 0x3b
 1074 00ee 0B       		.uleb128 0xb
 1075 00ef 27       		.uleb128 0x27
 1076 00f0 19       		.uleb128 0x19
 1077 00f1 49       		.uleb128 0x49
 1078 00f2 13       		.uleb128 0x13
 1079 00f3 11       		.uleb128 0x11
 1080 00f4 01       		.uleb128 0x1
 1081 00f5 12       		.uleb128 0x12
 1082 00f6 06       		.uleb128 0x6
 1083 00f7 40       		.uleb128 0x40
 1084 00f8 18       		.uleb128 0x18
 1085 00f9 9742     		.uleb128 0x2117
 1086 00fb 19       		.uleb128 0x19
 1087 00fc 01       		.uleb128 0x1
 1088 00fd 13       		.uleb128 0x13
 1089 00fe 00       		.byte	0
 1090 00ff 00       		.byte	0
 1091 0100 12       		.uleb128 0x12
 1092 0101 34       		.uleb128 0x34
 1093 0102 00       		.byte	0
 1094 0103 03       		.uleb128 0x3
 1095 0104 08       		.uleb128 0x8
 1096 0105 3A       		.uleb128 0x3a
 1097 0106 0B       		.uleb128 0xb
 1098 0107 3B       		.uleb128 0x3b
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 43


 1099 0108 0B       		.uleb128 0xb
 1100 0109 49       		.uleb128 0x49
 1101 010a 13       		.uleb128 0x13
 1102 010b 02       		.uleb128 0x2
 1103 010c 17       		.uleb128 0x17
 1104 010d 00       		.byte	0
 1105 010e 00       		.byte	0
 1106 010f 13       		.uleb128 0x13
 1107 0110 34       		.uleb128 0x34
 1108 0111 00       		.byte	0
 1109 0112 03       		.uleb128 0x3
 1110 0113 08       		.uleb128 0x8
 1111 0114 3A       		.uleb128 0x3a
 1112 0115 0B       		.uleb128 0xb
 1113 0116 3B       		.uleb128 0x3b
 1114 0117 0B       		.uleb128 0xb
 1115 0118 49       		.uleb128 0x49
 1116 0119 13       		.uleb128 0x13
 1117 011a 02       		.uleb128 0x2
 1118 011b 18       		.uleb128 0x18
 1119 011c 00       		.byte	0
 1120 011d 00       		.byte	0
 1121 011e 14       		.uleb128 0x14
 1122 011f 34       		.uleb128 0x34
 1123 0120 00       		.byte	0
 1124 0121 03       		.uleb128 0x3
 1125 0122 0E       		.uleb128 0xe
 1126 0123 3A       		.uleb128 0x3a
 1127 0124 0B       		.uleb128 0xb
 1128 0125 3B       		.uleb128 0x3b
 1129 0126 0B       		.uleb128 0xb
 1130 0127 49       		.uleb128 0x49
 1131 0128 13       		.uleb128 0x13
 1132 0129 02       		.uleb128 0x2
 1133 012a 18       		.uleb128 0x18
 1134 012b 00       		.byte	0
 1135 012c 00       		.byte	0
 1136 012d 15       		.uleb128 0x15
 1137 012e 1D       		.uleb128 0x1d
 1138 012f 01       		.byte	0x1
 1139 0130 31       		.uleb128 0x31
 1140 0131 13       		.uleb128 0x13
 1141 0132 11       		.uleb128 0x11
 1142 0133 01       		.uleb128 0x1
 1143 0134 12       		.uleb128 0x12
 1144 0135 06       		.uleb128 0x6
 1145 0136 58       		.uleb128 0x58
 1146 0137 0B       		.uleb128 0xb
 1147 0138 59       		.uleb128 0x59
 1148 0139 0B       		.uleb128 0xb
 1149 013a 01       		.uleb128 0x1
 1150 013b 13       		.uleb128 0x13
 1151 013c 00       		.byte	0
 1152 013d 00       		.byte	0
 1153 013e 16       		.uleb128 0x16
 1154 013f 1D       		.uleb128 0x1d
 1155 0140 01       		.byte	0x1
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 44


 1156 0141 31       		.uleb128 0x31
 1157 0142 13       		.uleb128 0x13
 1158 0143 11       		.uleb128 0x11
 1159 0144 01       		.uleb128 0x1
 1160 0145 12       		.uleb128 0x12
 1161 0146 06       		.uleb128 0x6
 1162 0147 58       		.uleb128 0x58
 1163 0148 0B       		.uleb128 0xb
 1164 0149 59       		.uleb128 0x59
 1165 014a 0B       		.uleb128 0xb
 1166 014b 00       		.byte	0
 1167 014c 00       		.byte	0
 1168 014d 17       		.uleb128 0x17
 1169 014e 0B       		.uleb128 0xb
 1170 014f 01       		.byte	0x1
 1171 0150 11       		.uleb128 0x11
 1172 0151 01       		.uleb128 0x1
 1173 0152 12       		.uleb128 0x12
 1174 0153 06       		.uleb128 0x6
 1175 0154 00       		.byte	0
 1176 0155 00       		.byte	0
 1177 0156 18       		.uleb128 0x18
 1178 0157 34       		.uleb128 0x34
 1179 0158 00       		.byte	0
 1180 0159 31       		.uleb128 0x31
 1181 015a 13       		.uleb128 0x13
 1182 015b 02       		.uleb128 0x2
 1183 015c 17       		.uleb128 0x17
 1184 015d 00       		.byte	0
 1185 015e 00       		.byte	0
 1186 015f 19       		.uleb128 0x19
 1187 0160 1D       		.uleb128 0x1d
 1188 0161 00       		.byte	0
 1189 0162 31       		.uleb128 0x31
 1190 0163 13       		.uleb128 0x13
 1191 0164 11       		.uleb128 0x11
 1192 0165 01       		.uleb128 0x1
 1193 0166 12       		.uleb128 0x12
 1194 0167 06       		.uleb128 0x6
 1195 0168 58       		.uleb128 0x58
 1196 0169 0B       		.uleb128 0xb
 1197 016a 59       		.uleb128 0x59
 1198 016b 0B       		.uleb128 0xb
 1199 016c 00       		.byte	0
 1200 016d 00       		.byte	0
 1201 016e 1A       		.uleb128 0x1a
 1202 016f 1D       		.uleb128 0x1d
 1203 0170 01       		.byte	0x1
 1204 0171 31       		.uleb128 0x31
 1205 0172 13       		.uleb128 0x13
 1206 0173 11       		.uleb128 0x11
 1207 0174 01       		.uleb128 0x1
 1208 0175 12       		.uleb128 0x12
 1209 0176 06       		.uleb128 0x6
 1210 0177 58       		.uleb128 0x58
 1211 0178 0B       		.uleb128 0xb
 1212 0179 59       		.uleb128 0x59
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 45


 1213 017a 05       		.uleb128 0x5
 1214 017b 01       		.uleb128 0x1
 1215 017c 13       		.uleb128 0x13
 1216 017d 00       		.byte	0
 1217 017e 00       		.byte	0
 1218 017f 1B       		.uleb128 0x1b
 1219 0180 05       		.uleb128 0x5
 1220 0181 00       		.byte	0
 1221 0182 31       		.uleb128 0x31
 1222 0183 13       		.uleb128 0x13
 1223 0184 02       		.uleb128 0x2
 1224 0185 17       		.uleb128 0x17
 1225 0186 00       		.byte	0
 1226 0187 00       		.byte	0
 1227 0188 1C       		.uleb128 0x1c
 1228 0189 898201   		.uleb128 0x4109
 1229 018c 00       		.byte	0
 1230 018d 11       		.uleb128 0x11
 1231 018e 01       		.uleb128 0x1
 1232 018f 31       		.uleb128 0x31
 1233 0190 13       		.uleb128 0x13
 1234 0191 00       		.byte	0
 1235 0192 00       		.byte	0
 1236 0193 1D       		.uleb128 0x1d
 1237 0194 34       		.uleb128 0x34
 1238 0195 00       		.byte	0
 1239 0196 03       		.uleb128 0x3
 1240 0197 0E       		.uleb128 0xe
 1241 0198 3A       		.uleb128 0x3a
 1242 0199 0B       		.uleb128 0xb
 1243 019a 3B       		.uleb128 0x3b
 1244 019b 0B       		.uleb128 0xb
 1245 019c 49       		.uleb128 0x49
 1246 019d 13       		.uleb128 0x13
 1247 019e 3F       		.uleb128 0x3f
 1248 019f 19       		.uleb128 0x19
 1249 01a0 3C       		.uleb128 0x3c
 1250 01a1 19       		.uleb128 0x19
 1251 01a2 00       		.byte	0
 1252 01a3 00       		.byte	0
 1253 01a4 1E       		.uleb128 0x1e
 1254 01a5 01       		.uleb128 0x1
 1255 01a6 01       		.byte	0x1
 1256 01a7 49       		.uleb128 0x49
 1257 01a8 13       		.uleb128 0x13
 1258 01a9 01       		.uleb128 0x1
 1259 01aa 13       		.uleb128 0x13
 1260 01ab 00       		.byte	0
 1261 01ac 00       		.byte	0
 1262 01ad 1F       		.uleb128 0x1f
 1263 01ae 21       		.uleb128 0x21
 1264 01af 00       		.byte	0
 1265 01b0 49       		.uleb128 0x49
 1266 01b1 13       		.uleb128 0x13
 1267 01b2 2F       		.uleb128 0x2f
 1268 01b3 0B       		.uleb128 0xb
 1269 01b4 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 46


 1270 01b5 00       		.byte	0
 1271 01b6 20       		.uleb128 0x20
 1272 01b7 26       		.uleb128 0x26
 1273 01b8 00       		.byte	0
 1274 01b9 49       		.uleb128 0x49
 1275 01ba 13       		.uleb128 0x13
 1276 01bb 00       		.byte	0
 1277 01bc 00       		.byte	0
 1278 01bd 21       		.uleb128 0x21
 1279 01be 34       		.uleb128 0x34
 1280 01bf 00       		.byte	0
 1281 01c0 03       		.uleb128 0x3
 1282 01c1 0E       		.uleb128 0xe
 1283 01c2 3A       		.uleb128 0x3a
 1284 01c3 0B       		.uleb128 0xb
 1285 01c4 3B       		.uleb128 0x3b
 1286 01c5 05       		.uleb128 0x5
 1287 01c6 49       		.uleb128 0x49
 1288 01c7 13       		.uleb128 0x13
 1289 01c8 3F       		.uleb128 0x3f
 1290 01c9 19       		.uleb128 0x19
 1291 01ca 3C       		.uleb128 0x3c
 1292 01cb 19       		.uleb128 0x19
 1293 01cc 00       		.byte	0
 1294 01cd 00       		.byte	0
 1295 01ce 22       		.uleb128 0x22
 1296 01cf 2E       		.uleb128 0x2e
 1297 01d0 00       		.byte	0
 1298 01d1 3F       		.uleb128 0x3f
 1299 01d2 19       		.uleb128 0x19
 1300 01d3 3C       		.uleb128 0x3c
 1301 01d4 19       		.uleb128 0x19
 1302 01d5 6E       		.uleb128 0x6e
 1303 01d6 0E       		.uleb128 0xe
 1304 01d7 03       		.uleb128 0x3
 1305 01d8 0E       		.uleb128 0xe
 1306 01d9 3A       		.uleb128 0x3a
 1307 01da 0B       		.uleb128 0xb
 1308 01db 3B       		.uleb128 0x3b
 1309 01dc 0B       		.uleb128 0xb
 1310 01dd 00       		.byte	0
 1311 01de 00       		.byte	0
 1312 01df 23       		.uleb128 0x23
 1313 01e0 2E       		.uleb128 0x2e
 1314 01e1 00       		.byte	0
 1315 01e2 3F       		.uleb128 0x3f
 1316 01e3 19       		.uleb128 0x19
 1317 01e4 3C       		.uleb128 0x3c
 1318 01e5 19       		.uleb128 0x19
 1319 01e6 6E       		.uleb128 0x6e
 1320 01e7 0E       		.uleb128 0xe
 1321 01e8 03       		.uleb128 0x3
 1322 01e9 0E       		.uleb128 0xe
 1323 01ea 3A       		.uleb128 0x3a
 1324 01eb 0B       		.uleb128 0xb
 1325 01ec 3B       		.uleb128 0x3b
 1326 01ed 05       		.uleb128 0x5
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 47


 1327 01ee 00       		.byte	0
 1328 01ef 00       		.byte	0
 1329 01f0 00       		.byte	0
 1330              		.section	.debug_loc,"",%progbits
 1331              	.Ldebug_loc0:
 1332              	.LLST0:
 1333 0000 10000000 		.4byte	.LVL2
 1334 0004 63000000 		.4byte	.LVL3-1
 1335 0008 0100     		.2byte	0x1
 1336 000a 50       		.byte	0x50
 1337 000b 92000000 		.4byte	.LVL10
 1338 000f 94000000 		.4byte	.LVL11
 1339 0013 0100     		.2byte	0x1
 1340 0015 50       		.byte	0x50
 1341 0016 96000000 		.4byte	.LVL12
 1342 001a 98000000 		.4byte	.LVL13
 1343 001e 0100     		.2byte	0x1
 1344 0020 50       		.byte	0x50
 1345 0021 9A000000 		.4byte	.LVL14
 1346 0025 9C000000 		.4byte	.LVL15
 1347 0029 0100     		.2byte	0x1
 1348 002b 50       		.byte	0x50
 1349 002c 9E000000 		.4byte	.LVL16
 1350 0030 A0000000 		.4byte	.LVL17
 1351 0034 0100     		.2byte	0x1
 1352 0036 50       		.byte	0x50
 1353 0037 00000000 		.4byte	0
 1354 003b 00000000 		.4byte	0
 1355              	.LLST1:
 1356 003f 06000000 		.4byte	.LVL0
 1357 0043 08000000 		.4byte	.LVL1
 1358 0047 0100     		.2byte	0x1
 1359 0049 54       		.byte	0x54
 1360 004a 00000000 		.4byte	0
 1361 004e 00000000 		.4byte	0
 1362              	.LLST2:
 1363 0052 64000000 		.4byte	.LVL3
 1364 0056 78000000 		.4byte	.LVL5
 1365 005a 0100     		.2byte	0x1
 1366 005c 50       		.byte	0x50
 1367 005d 7E000000 		.4byte	.LVL7
 1368 0061 81000000 		.4byte	.LVL8-1
 1369 0065 0100     		.2byte	0x1
 1370 0067 50       		.byte	0x50
 1371 0068 00000000 		.4byte	0
 1372 006c 00000000 		.4byte	0
 1373              	.LLST3:
 1374 0070 74000000 		.4byte	.LVL4
 1375 0074 78000000 		.4byte	.LVL5
 1376 0078 0100     		.2byte	0x1
 1377 007a 50       		.byte	0x50
 1378 007b 00000000 		.4byte	0
 1379 007f 00000000 		.4byte	0
 1380              	.LLST4:
 1381 0083 7E000000 		.4byte	.LVL7
 1382 0087 81000000 		.4byte	.LVL8-1
 1383 008b 0100     		.2byte	0x1
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 48


 1384 008d 50       		.byte	0x50
 1385 008e 00000000 		.4byte	0
 1386 0092 00000000 		.4byte	0
 1387              	.LLST5:
 1388 0096 A0000000 		.4byte	.LVL17
 1389 009a A4000000 		.4byte	.LVL18
 1390 009e 0100     		.2byte	0x1
 1391 00a0 54       		.byte	0x54
 1392 00a1 00000000 		.4byte	0
 1393 00a5 00000000 		.4byte	0
 1394              		.section	.debug_aranges,"",%progbits
 1395 0000 1C000000 		.4byte	0x1c
 1396 0004 0200     		.2byte	0x2
 1397 0006 00000000 		.4byte	.Ldebug_info0
 1398 000a 04       		.byte	0x4
 1399 000b 00       		.byte	0
 1400 000c 0000     		.2byte	0
 1401 000e 0000     		.2byte	0
 1402 0010 00000000 		.4byte	.LFB59
 1403 0014 C4000000 		.4byte	.LFE59-.LFB59
 1404 0018 00000000 		.4byte	0
 1405 001c 00000000 		.4byte	0
 1406              		.section	.debug_ranges,"",%progbits
 1407              	.Ldebug_ranges0:
 1408 0000 00000000 		.4byte	.LFB59
 1409 0004 C4000000 		.4byte	.LFE59
 1410 0008 00000000 		.4byte	0
 1411 000c 00000000 		.4byte	0
 1412              		.section	.debug_line,"",%progbits
 1413              	.Ldebug_line0:
 1414 0000 E5010000 		.section	.debug_str,"MS",%progbits,1
 1414      02007801 
 1414      00000201 
 1414      FB0E0D00 
 1414      01010101 
 1415              	.LASF54:
 1416 0000 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1416      74645F65 
 1416      6E646379 
 1416      636C655F 
 1416      6E657874 
 1417              	.LASF22:
 1418 0019 4B65726E 		.ascii	"Kernel_Context\000"
 1418      656C5F43 
 1418      6F6E7465 
 1418      787400
 1419              	.LASF10:
 1420 0028 45455F55 		.ascii	"EE_UINT8\000"
 1420      494E5438 
 1420      00
 1421              	.LASF63:
 1422 0031 45455F72 		.ascii	"EE_rq_bitmask\000"
 1422      715F6269 
 1422      746D6173 
 1422      6B00
 1423              	.LASF15:
 1424 003f 45455F55 		.ascii	"EE_UREG\000"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 49


 1424      52454700 
 1425              	.LASF64:
 1426 0047 45455F74 		.ascii	"EE_th_event_active\000"
 1426      685F6576 
 1426      656E745F 
 1426      61637469 
 1426      766500
 1427              	.LASF65:
 1428 005a 45455F74 		.ascii	"EE_th_waswaiting\000"
 1428      685F7761 
 1428      73776169 
 1428      74696E67 
 1428      00
 1429              	.LASF2:
 1430 006b 73686F72 		.ascii	"short int\000"
 1430      7420696E 
 1430      7400
 1431              	.LASF21:
 1432 0075 53746174 		.ascii	"StatusType\000"
 1432      75735479 
 1432      706500
 1433              	.LASF16:
 1434 0080 45455F46 		.ascii	"EE_FREG\000"
 1434      52454700 
 1435              	.LASF14:
 1436 0088 45455F55 		.ascii	"EE_UINT32\000"
 1436      494E5433 
 1436      3200
 1437              	.LASF56:
 1438 0092 45455F74 		.ascii	"EE_th_ready_prio\000"
 1438      685F7265 
 1438      6164795F 
 1438      7072696F 
 1438      00
 1439              	.LASF24:
 1440 00a3 49535232 		.ascii	"ISR2_Context\000"
 1440      5F436F6E 
 1440      74657874 
 1440      00
 1441              	.LASF18:
 1442 00b0 45455F54 		.ascii	"EE_TID\000"
 1442      494400
 1443              	.LASF33:
 1444 00b7 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 1444      59504543 
 1444      4F4E5445 
 1444      585400
 1445              	.LASF74:
 1446 00c6 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_schedule.c\000"
 1446      72617465 
 1446      645F536F 
 1446      75726365 
 1446      5C50536F 
 1447              	.LASF50:
 1448 00f5 69737461 		.ascii	"istat\000"
 1448      7400
 1449              	.LASF53:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 50


 1450 00fb 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1450      52515F6E 
 1450      65737469 
 1450      6E675F6C 
 1450      6576656C 
 1451              	.LASF25:
 1452 0110 4572726F 		.ascii	"ErrorHook_Context\000"
 1452      72486F6F 
 1452      6B5F436F 
 1452      6E746578 
 1452      7400
 1453              	.LASF43:
 1454 0122 45455F4F 		.ascii	"EE_ORTI_set_service_in\000"
 1454      5254495F 
 1454      7365745F 
 1454      73657276 
 1454      6963655F 
 1455              	.LASF67:
 1456 0139 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1456      6F5F4952 
 1456      515F7375 
 1456      7370656E 
 1456      645F7374 
 1457              	.LASF49:
 1458 0152 45455F6F 		.ascii	"EE_oo_run_next_task\000"
 1458      6F5F7275 
 1458      6E5F6E65 
 1458      78745F74 
 1458      61736B00 
 1459              	.LASF32:
 1460 0166 49646C65 		.ascii	"Idle_Context\000"
 1460      5F436F6E 
 1460      74657874 
 1460      00
 1461              	.LASF6:
 1462 0173 6C6F6E67 		.ascii	"long long int\000"
 1462      206C6F6E 
 1462      6720696E 
 1462      7400
 1463              	.LASF11:
 1464 0181 45455F49 		.ascii	"EE_INT8\000"
 1464      4E543800 
 1465              	.LASF19:
 1466 0189 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 1466      5950455F 
 1466      52515F4D 
 1466      41534B00 
 1467              	.LASF4:
 1468 0199 6C6F6E67 		.ascii	"long int\000"
 1468      20696E74 
 1468      00
 1469              	.LASF35:
 1470 01a2 45455F4F 		.ascii	"EE_ORTI_set_service\000"
 1470      5254495F 
 1470      7365745F 
 1470      73657276 
 1470      69636500 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 51


 1471              	.LASF36:
 1472 01b6 45455F61 		.ascii	"EE_as_set_execution_context\000"
 1472      735F7365 
 1472      745F6578 
 1472      65637574 
 1472      696F6E5F 
 1473              	.LASF38:
 1474 01d2 45455F68 		.ascii	"EE_hal_ready2stacked\000"
 1474      616C5F72 
 1474      65616479 
 1474      32737461 
 1474      636B6564 
 1475              	.LASF62:
 1476 01e7 45455F73 		.ascii	"EE_sys_ceiling\000"
 1476      79735F63 
 1476      65696C69 
 1476      6E6700
 1477              	.LASF71:
 1478 01f6 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 1478      71327374 
 1478      6B5F6578 
 1478      6368616E 
 1478      676500
 1479              	.LASF9:
 1480 0209 6C6F6E67 		.ascii	"long double\000"
 1480      20646F75 
 1480      626C6500 
 1481              	.LASF70:
 1482 0215 45455F63 		.ascii	"EE_cortex_mx_change_context\000"
 1482      6F727465 
 1482      785F6D78 
 1482      5F636861 
 1482      6E67655F 
 1483              	.LASF20:
 1484 0231 5461736B 		.ascii	"TaskType\000"
 1484      54797065 
 1484      00
 1485              	.LASF1:
 1486 023a 756E7369 		.ascii	"unsigned char\000"
 1486      676E6564 
 1486      20636861 
 1486      7200
 1487              	.LASF47:
 1488 0248 45455F68 		.ascii	"EE_hal_end_nested_primitive\000"
 1488      616C5F65 
 1488      6E645F6E 
 1488      65737465 
 1488      645F7072 
 1489              	.LASF76:
 1490 0264 45455F63 		.ascii	"EE_cortex_mx_suspendIRQ\000"
 1490      6F727465 
 1490      785F6D78 
 1490      5F737573 
 1490      70656E64 
 1491              	.LASF37:
 1492 027c 45455F68 		.ascii	"EE_hal_stkchange\000"
 1492      616C5F73 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 52


 1492      746B6368 
 1492      616E6765 
 1492      00
 1493              	.LASF0:
 1494 028d 7369676E 		.ascii	"signed char\000"
 1494      65642063 
 1494      68617200 
 1495              	.LASF7:
 1496 0299 6C6F6E67 		.ascii	"long long unsigned int\000"
 1496      206C6F6E 
 1496      6720756E 
 1496      7369676E 
 1496      65642069 
 1497              	.LASF42:
 1498 02b0 45455F61 		.ascii	"EE_as_monitoring_the_stack\000"
 1498      735F6D6F 
 1498      6E69746F 
 1498      72696E67 
 1498      5F746865 
 1499              	.LASF77:
 1500 02cb 45455F6F 		.ascii	"EE_oo_Schedule\000"
 1500      6F5F5363 
 1500      68656475 
 1500      6C6500
 1501              	.LASF40:
 1502 02da 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1502      746B5F71 
 1502      75657279 
 1502      66697273 
 1502      7400
 1503              	.LASF8:
 1504 02ec 756E7369 		.ascii	"unsigned int\000"
 1504      676E6564 
 1504      20696E74 
 1504      00
 1505              	.LASF58:
 1506 02f9 45455F74 		.ascii	"EE_th_status\000"
 1506      685F7374 
 1506      61747573 
 1506      00
 1507              	.LASF60:
 1508 0306 45455F74 		.ascii	"EE_th_rnact\000"
 1508      685F726E 
 1508      61637400 
 1509              	.LASF13:
 1510 0312 45455F49 		.ascii	"EE_INT32\000"
 1510      4E543332 
 1510      00
 1511              	.LASF46:
 1512 031b 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 1512      6F5F6361 
 1512      6C6C5F50 
 1512      6F737454 
 1512      61736B48 
 1513              	.LASF23:
 1514 0333 5441534B 		.ascii	"TASK_Context\000"
 1514      5F436F6E 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 53


 1514      74657874 
 1514      00
 1515              	.LASF3:
 1516 0340 73686F72 		.ascii	"short unsigned int\000"
 1516      7420756E 
 1516      7369676E 
 1516      65642069 
 1516      6E7400
 1517              	.LASF30:
 1518 0353 53687574 		.ascii	"ShutdownHook_Context\000"
 1518      646F776E 
 1518      486F6F6B 
 1518      5F436F6E 
 1518      74657874 
 1519              	.LASF12:
 1520 0368 45455F55 		.ascii	"EE_UINT16\000"
 1520      494E5431 
 1520      3600
 1521              	.LASF31:
 1522 0372 416C6172 		.ascii	"AlarmCallback_Context\000"
 1522      6D43616C 
 1522      6C626163 
 1522      6B5F436F 
 1522      6E746578 
 1523              	.LASF45:
 1524 0388 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 1524      5254495F 
 1524      7365745F 
 1524      74685F65 
 1524      715F6469 
 1525              	.LASF72:
 1526 03a8 45455F72 		.ascii	"EE_rq_queryfirst\000"
 1526      715F7175 
 1526      65727966 
 1526      69727374 
 1526      00
 1527              	.LASF34:
 1528 03b9 45455F63 		.ascii	"EE_cortex_mx_resumeIRQ\000"
 1528      6F727465 
 1528      785F6D78 
 1528      5F726573 
 1528      756D6549 
 1529              	.LASF68:
 1530 03d0 45455F41 		.ascii	"EE_ApplicationMode\000"
 1530      70706C69 
 1530      63617469 
 1530      6F6E4D6F 
 1530      646500
 1531              	.LASF5:
 1532 03e3 6C6F6E67 		.ascii	"long unsigned int\000"
 1532      20756E73 
 1532      69676E65 
 1532      6420696E 
 1532      7400
 1533              	.LASF17:
 1534 03f5 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1534      59504542 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 54


 1534      4F4F4C00 
 1535              	.LASF61:
 1536 0401 45455F73 		.ascii	"EE_stkfirst\000"
 1536      746B6669 
 1536      72737400 
 1537              	.LASF26:
 1538 040d 50726F74 		.ascii	"ProtectionHook_Context\000"
 1538      65637469 
 1538      6F6E486F 
 1538      6F6B5F43 
 1538      6F6E7465 
 1539              	.LASF39:
 1540 0424 45455F68 		.ascii	"EE_hal_get_IRQ_nesting_level\000"
 1540      616C5F67 
 1540      65745F49 
 1540      52515F6E 
 1540      65737469 
 1541              	.LASF57:
 1542 0441 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1542      685F6469 
 1542      73706174 
 1542      63685F70 
 1542      72696F00 
 1543              	.LASF27:
 1544 0455 50726554 		.ascii	"PreTaskHook_Context\000"
 1544      61736B48 
 1544      6F6F6B5F 
 1544      436F6E74 
 1544      65787400 
 1545              	.LASF28:
 1546 0469 506F7374 		.ascii	"PostTaskHook_Context\000"
 1546      5461736B 
 1546      486F6F6B 
 1546      5F436F6E 
 1546      74657874 
 1547              	.LASF55:
 1548 047e 73697A65 		.ascii	"sizetype\000"
 1548      74797065 
 1548      00
 1549              	.LASF69:
 1550 0487 45455F72 		.ascii	"EE_rq_lookup\000"
 1550      715F6C6F 
 1550      6F6B7570 
 1550      00
 1551              	.LASF51:
 1552 0494 63757272 		.ascii	"current\000"
 1552      656E7400 
 1553              	.LASF52:
 1554 049c 666C6167 		.ascii	"flag\000"
 1554      00
 1555              	.LASF59:
 1556 04a1 45455F74 		.ascii	"EE_th_next\000"
 1556      685F6E65 
 1556      787400
 1557              	.LASF73:
 1558 04ac 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1558      43313120 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc2PEbAF.s 			page 55


 1558      352E342E 
 1558      31203230 
 1558      31363036 
 1559 04df 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1559      20726576 
 1559      6973696F 
 1559      6E203233 
 1559      37373135 
 1560 0512 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1560      66756E63 
 1560      74696F6E 
 1560      2D736563 
 1560      74696F6E 
 1561              	.LASF66:
 1562 053a 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1562      6F5F4952 
 1562      515F6469 
 1562      7361626C 
 1562      655F636F 
 1563              	.LASF41:
 1564 0552 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 1564      6F5F6361 
 1564      6C6C5F50 
 1564      72655461 
 1564      736B486F 
 1565              	.LASF29:
 1566 0569 53746172 		.ascii	"StartupHook_Context\000"
 1566      74757048 
 1566      6F6F6B5F 
 1566      436F6E74 
 1566      65787400 
 1567              	.LASF48:
 1568 057d 45455F4F 		.ascii	"EE_ORTI_set_service_out\000"
 1568      5254495F 
 1568      7365745F 
 1568      73657276 
 1568      6963655F 
 1569              	.LASF44:
 1570 0595 45455F68 		.ascii	"EE_hal_begin_nested_primitive\000"
 1570      616C5F62 
 1570      6567696E 
 1570      5F6E6573 
 1570      7465645F 
 1571              	.LASF75:
 1572 05b3 433A5C55 		.ascii	"C:\\Users\\zakis\\Documents\\EOS_Assignment_Two\\JS"
 1572      73657273 
 1572      5C7A616B 
 1572      69735C44 
 1572      6F63756D 
 1573 05e1 4F4E5F50 		.ascii	"ON_Parser\\EOS_Assignment_Two\\JSON_Parser.cydsn\000"
 1573      61727365 
 1573      725C454F 
 1573      535F4173 
 1573      7369676E 
 1574              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
