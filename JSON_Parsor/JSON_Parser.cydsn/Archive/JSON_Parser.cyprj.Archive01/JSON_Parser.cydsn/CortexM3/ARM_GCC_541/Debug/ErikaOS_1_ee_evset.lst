ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_evset.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_oo_SetEvent,"ax",%progbits
  20              		.align	2
  21              		.global	EE_oo_SetEvent
  22              		.thumb
  23              		.thumb_func
  24              		.type	EE_oo_SetEvent, %function
  25              	EE_oo_SetEvent:
  26              	.LFB59:
  27              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_evset.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 2


  31:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * CVS: $Id: ee_evset.c,v 1.4 2005/11/03 09:39:48 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #include "ErikaOS_1_ee_tracing.h"
  52:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  53:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #include "ErikaOS_1_ee_internal.inc"
  54:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  55:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #include "trcKernelPort.h"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #endif
  57:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** /* SetEvent:
  58:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****    - can be called from ISR and from task level
  59:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****    - if the task was waiting for one of the events -> wake up it!
  60:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****    - returns (only extended state)
  61:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        E_OS_ID     if task id is invalid
  62:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        E_OS_ACCESS if the referenced task is not an extended task
  63:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        E_OS_STATE  events cannot be set because the task is in the
  64:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****                    suspended state
  65:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  66:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****    Note: The implementation of this function can be a little bit
  67:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****    optimized.  That is, we should check in which queue the task really
  68:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****    goes, then eventually inserting it into the ready queue...
  69:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****    Note: part of this code is present also in altick.c!
  71:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** */
  72:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  74:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
  75:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #ifndef __PRIVATE_SETEVENT__
  76:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** StatusType EE_oo_SetEvent(TaskType TaskID, EventMaskType Mask)
  78:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** {
  28              		.loc 1 78 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 3


  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LBB58:
  40              	.LBB59:
  41              	.LBB60:
  42              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 4


  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** return temp;
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 5


 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 6


 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 212:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 7


 223:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
 224:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 229:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
  43              		.loc 2 260 0
  44              		.syntax unified
  45              	@ 260 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  46 0002 EFF31084 		mrs r4, primask
  47              	@ 0 "" 2
  48              	.LVL1:
 261:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
  49              		.loc 2 261 0
  50              	@ 261 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  51 0006 72B6     		cpsid i
  52              	@ 0 "" 2
  53              	.LVL2:
  54              		.thumb
  55              		.syntax unified
  56              	.LBE60:
  57              	.LBE59:
  58              	.LBE58:
  79:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   /* Error Value */
  80:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   register StatusType ev;
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 8


  81:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   /* Primitive Lock Procedure */
  82:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION();
  83:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  84:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     if ( EE_hal_get_IRQ_nesting_level() == 0U ) 
  86:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     {
  87:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****         traceTASK_SET_EVENT(TaskID, Mask)
  88:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     }
  89:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     else
  90:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     {
  91:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****         traceTASK_SET_EVENT_FROM_ISR(TaskID, Mask)
  92:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     }
  93:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #endif
  94:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  95:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   EE_ORTI_set_service_in(EE_SERVICETRACE_SETEVENT);
  96:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   EE_as_monitoring_the_stack();
  98:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #ifdef EE_SERVICE_PROTECTION__
 100:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   /* [OS093]: If interrupts are disabled/suspended by a Task/OsIsr and the
 101:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       Task/OsIsr calls any OS service (excluding the interrupt services)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       then the Operating System shall ignore the service AND shall return
 103:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       E_OS_DISABLEDINT if the service returns a StatusType value. */
 104:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   /* [OS088]: If an OS-Application makes a service call from the wrong context
 105:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       AND is currently not inside a Category 1 ISR the Operating System module
 106:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       shall not perform the requested action (the service call shall have no
 107:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       effect), and return E_OS_CALLEVEL (see [12], section 13.1) or the
 108:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       "invalid value" of  the service. (BSW11009, BSW11013) */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   /* SetEvent is callable by Task and ISR2 */
 110:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   if ( EE_as_execution_context > ISR2_Context ) {
 111:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     ev = E_OS_CALLEVEL;
 112:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   } else if ( EE_oo_check_disableint_error() ) {
 113:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     ev = E_OS_DISABLEDINT;
 114:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   } else
 115:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #endif /* EE_SERVICE_PROTECTION__ */
 116:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 117:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #if (defined(__RN_EVENT__)) || (defined(EE_AS_RPC__))
 118:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   if ( EE_IS_TID_REMOTE(TaskID) )
 119:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   {
 120:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #ifdef EE_AS_RPC__
 121:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     /* Tmp Tid (introduced to meet MISRA requirements) */
 122:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     EE_TID tmp_tid;
 123:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     EE_os_param unmarked_tid;
 125:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     EE_os_param as_mask;
 126:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     /* Two steps macro assignment to meet MISRA 10.3 required rule */
 128:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     tmp_tid = EE_UNMARK_REMOTE_TID(TaskID);
 129:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     unmarked_tid.value_param = (EE_UREG)tmp_tid;
 130:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     as_mask.value_param      = Mask;
 131:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 132:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     /* Forward the request to another CPU in synchronous way */
 133:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     ev = EE_as_rpc(OSServiceId_SetEvent, unmarked_tid, as_mask,
 134:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       EE_OS_INVALID_PARAM);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #else /* EE_AS_RPC__ */
 136:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     /* Forward the request to another CPU when the task does
 137:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        not belong to the current CPU */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 9


 138:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     register EE_TYPERN_PARAM par;
 139:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     par.ev = Mask;
 140:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     (void)EE_rn_send((EE_SREG)EE_MARK_REMOTE_TID(TaskID),
 141:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       EE_RN_EVENT, par);
 142:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     ev = E_OK;
 143:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #endif /* EE_AS_RPC__ */
 144:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   } else {
 145:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #endif /* __RN_EVENT__ || EE_AS_RPC__ */
 146:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 147:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(EE_SERVICE_PROTECTION__))
 148:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     /* check if the task Id is valid */
 149:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     if ( (TaskID < 0) || (TaskID >= EE_MAX_TASK) ) {
 150:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       ev = E_OS_ID;
 151:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     } else if ( EE_TASK_ACCESS_ERR(TaskID, EE_as_active_app) ) {
 152:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       ev = E_OS_ACCESS;
 153:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     } else
 154:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #elif defined(__OO_EXTENDED_STATUS__)
 155:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     /* Check if the TASK Id is valid */
 156:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     if ( (TaskID < 0) || (TaskID >= EE_MAX_TASK) ) {
  59              		.loc 1 156 0
  60 0008 0228     		cmp	r0, #2
  61 000a 53D8     		bhi	.L5
 157:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       ev = E_OS_ID;
 158:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     } else
 159:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #endif /* EE_AS_OSAPPLICATIONS__ || E_SERVICE_PROTECTION__ ||
 160:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** __OO_EXTENDED_STATUS__ */
 161:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #if defined(__OO_EXTENDED_STATUS__)
 162:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     if ( EE_th_is_extended[TaskID] == EE_FALSE ) {
  62              		.loc 1 162 0
  63 000c 324B     		ldr	r3, .L14
  64 000e 53F82030 		ldr	r3, [r3, r0, lsl #2]
  65 0012 002B     		cmp	r3, #0
  66 0014 50D0     		beq	.L6
 163:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       ev = E_OS_ACCESS;
 164:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     } else if ( EE_th_status[TaskID] == SUSPENDED ) {
  67              		.loc 1 164 0
  68 0016 314B     		ldr	r3, .L14+4
  69 0018 53F82030 		ldr	r3, [r3, r0, lsl #2]
  70 001c 032B     		cmp	r3, #3
  71 001e 4DD0     		beq	.L7
 165:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       ev = E_OS_STATE;
 166:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     } else 
 167:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #endif /* __OO_EXTENDED_STATUS__ */
 168:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     {
 169:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       /* Set the event mask only if the task is not suspended */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       EE_th_event_active[TaskID] |= Mask;
  72              		.loc 1 170 0
  73 0020 2F4D     		ldr	r5, .L14+8
  74 0022 55F82020 		ldr	r2, [r5, r0, lsl #2]
  75 0026 0A43     		orrs	r2, r2, r1
  76 0028 45F82020 		str	r2, [r5, r0, lsl #2]
 171:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       /* Check if the TASK was waiting for an event we just set
 173:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        *
 174:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        * WARNING:
 175:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        * the test with status==WAITING is FUNDAMENTAL to avoid double
 176:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        * insertion of the task in the ready queue!!! Example, when I call
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 10


 177:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        * two times the same setevent... the first time the task must go in
 178:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        * the ready queue, the second time NOT!!!
 179:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        */
 180:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       if ( ((EE_th_event_waitmask[TaskID] & Mask) != 0U) &&
  77              		.loc 1 180 0
  78 002c 2D4A     		ldr	r2, .L14+12
  79 002e 52F82020 		ldr	r2, [r2, r0, lsl #2]
  80 0032 1142     		tst	r1, r2
  81 0034 44D0     		beq	.L8
  82              		.loc 1 180 0 is_stmt 0 discriminator 1
  83 0036 012B     		cmp	r3, #1
  84 0038 44D1     		bne	.L9
 181:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****         (EE_th_status[TaskID] == WAITING) )
 182:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       {
 183:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****         /* [SWS_Os_00472] The Operating System module shall start an
 184:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             OsTaskTimeFrame when a task is released successfully.
 185:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             (SRS_Os_11008) */
 186:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****         /* [SWS_Os_00467] If an attempt is made to release a task before
 187:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             the end of an OsTaskTimeFrame then the Operating System module
 188:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             shall not perform the release AND shall call the
 189:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             ProtectionHook() with E_OS_PROTECTION_ARRIVAL AND the EVENT
 190:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             SHALL BE SET. */
 191:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****         if ( EE_as_tp_handle_interarrival(EE_AS_TP_ID_FROM_TASK(TaskID)) ) {
 192:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****           /* If yes, the task must go back into the READY state */
 193:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****           EE_th_status[TaskID] = READY;
  85              		.loc 1 193 0 is_stmt 1
  86 003a 0222     		movs	r2, #2
  87 003c 274B     		ldr	r3, .L14+4
  88 003e 43F82020 		str	r2, [r3, r0, lsl #2]
 194:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****           /* Insert the task in the ready queue... */
 195:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****           EE_rq_insert(TaskID);
  89              		.loc 1 195 0
  90 0042 FFF7FEFF 		bl	EE_rq_insert
  91              	.LVL3:
  92              	.LBB61:
  93              	.LBB62:
  94              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Copyright (C) 2002-2009  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * executable, regardless of the license terms of these independent
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 11


  21:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Functions used in HAL implementations, to be included by a specific
  43:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ee_internal.h header.
  44:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Derived from pkg/cpu/pic30/inc/ee_internal.h
  45:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Author: 2009 Bernardo Dal Seno
  46:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  47:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  48:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  49:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * PSoC Port and API Generation
  50:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Carlos Fernando Meier Martinez
  51:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Hochschule Darmstadt, Germany. 2017.
  52:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  53:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  54:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifndef PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  55:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  56:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  57:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  58:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Nested Interrupts Handling
  59:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  60:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  62:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  63:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* The following variables belong to ERIKA OS section: ee_kernel_bss */
  64:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_START_SEC_VAR_NOINIT
  65:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  66:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  67:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** extern EE_UREG EE_IRQ_nesting_level;
  69:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  71:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  72:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_STOP_SEC_VAR_NOINIT
  73:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  74:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  75:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  76:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* can be called with interrupt enabled */
  77:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** __INLINE__ EE_UREG  EE_hal_get_IRQ_nesting_level(void)
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 12


  78:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** {
  79:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****     return EE_IRQ_nesting_level;
  95              		.loc 3 79 0
  96 0046 284B     		ldr	r3, .L14+16
  97 0048 1B68     		ldr	r3, [r3]
  98              	.LBE62:
  99              	.LBE61:
 196:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****           /* If I am at task level, check for preemption... */
 198:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****           if ( EE_hal_get_IRQ_nesting_level() == 0U ) {
 100              		.loc 1 198 0
 101 004a 002B     		cmp	r3, #0
 102 004c 3CD1     		bne	.L10
 103              	.LBB63:
 104              	.LBB64:
 105              	.LBB65:
 106              	.LBB66:
 107              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 13


  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 14


  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 15


 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 16


 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
 108              		.loc 4 240 0
 109 004e 274B     		ldr	r3, .L14+20
 110 0050 1D68     		ldr	r5, [r3]
 111              	.LBE66:
 112              	.LBE65:
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 17


 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 18


 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 19


 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 20


 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x += (EE_INT8)8;
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_stkfirst = t;
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the ready queue */
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* put the first ready task into the stack */
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 21


 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_thread_end_instance(void);
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 22


 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __MULTI__
 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 570:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 571:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 572:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_stkchange(tmp);
 573:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } else {
 574:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* the next task have to be started */
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_ready2stacked(tmp);
 576:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 577:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 578:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 579:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 580:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 581:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 582:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 583:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __MULTI__ */
 584:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 585:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_reset_th_event_active(TaskID)    ((void) 0)
 586:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 587:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 588:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 589:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 590:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 591:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 592:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 593:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 594:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_ECC1__) || defined(__OO_ECC2__) */
 595:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 596:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 597:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 598:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 599:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method.
 600:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC2/ECC2 it can be that it is ready or 
 601:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     running. in that case we have to check and queue it anyway
 602:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 603:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType TaskID)
 604:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 23


 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if (EE_th_status[TaskID] == SUSPENDED) {
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[TaskID] = READY;
 607:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_reset_th_event_active(TaskID);
 608:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 609:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 610:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 611:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 612:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method
 613:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC1/ECC1 it can be here only because
 614:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     it had rnact=1 before the call, and so it is in suspended state
 615:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 616:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType tready)
 617:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 618:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_status[tready] = READY;
 619:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_reset_th_event_active(tready);
 620:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 621:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_BCC2__) || defined(__OO_ECC2__) */
 622:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 623:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_task_in_ready_queue( TaskType tid )
 624:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 625:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Decrement the residual number activation */
 626:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   --EE_th_rnact[tid];
 627:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the status READY handling multiple activations */
 628:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_set_th_status_ready(tid);
 629:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* insert the task in the ready queue */
 630:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_rq_insert(tid);
 631:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 632:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 633:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Execute a preemption */
 634:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_PREEMPTION_POINTS__
 635:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 636:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   Moved preemption check implementation into an outside method because the
 637:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   behaviour is common to EE_ActivateTask, EE_oo_ForceSchedule,
 638:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_IncrementCounter, EE_oo_ReleaseResource, EE_oo_PostSem
 639:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 640:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_preemption_point(void)
 641:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 642:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID current, rq;
 643:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 644:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* check if there is a preemption */
 645:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_stk_queryfirst();
 646:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   rq      = EE_rq_queryfirst();
 113              		.loc 4 646 0
 114 0052 FFF7FEFF 		bl	EE_rq_queryfirst
 115              	.LVL4:
 647:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 648:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 649:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 650:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 651:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reaction to timing protection can be defined to terminate the
 652:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      OSApplication. If a task is inside CallTrustedFunction() and task
 653:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      rescheduling takes place within the same OSApplication,
 654:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the newly running higher priority task may cause timing protection and
 655:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      terminate the OSApplication, thus indirectly aborting the trusted
 656:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      function. To avoid this, the scheduling of other Tasks which belong to
 657:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the same OS-Application as the caller needs to be restricted, as well as
 658:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the availability of interrupts of the same OS-Application. */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 24


 659:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* [SWS_Os_00563]: The OperatingSystem shall not schedule any other Tasks
 660:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       which belong to the same OS-Application as the non-trusted caller of the
 661:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       service. Also interrupts of Category 2 which belong to the same
 662:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       OS-Application shall be disabled during the execution of the service. */
 663:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (  (EE_as_active_app != EE_th_app[rq + 1]) ||
 664:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_RAM[EE_as_active_app].
 665:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           TrustedFunctionCallsCounter == 0U) ||
 666:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_ROM[EE_as_active_app].Mode == EE_MEMPROT_TRUST_MODE)
 667:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      )
 668:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 669:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 670:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 671:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( rq != EE_NIL ) {
 116              		.loc 4 671 0
 117 0056 B0F1FF3F 		cmp	r0, #-1
 118 005a 37D0     		beq	.L11
 672:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* We check if the system ceiling is greater or not the first task
 673:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****          in the ready queue */
 674:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       if ( EE_sys_ceiling < EE_th_ready_prio[rq] ) {
 119              		.loc 4 674 0
 120 005c 244B     		ldr	r3, .L14+24
 121 005e 53F82020 		ldr	r2, [r3, r0, lsl #2]
 122 0062 244B     		ldr	r3, .L14+28
 123 0064 1B68     		ldr	r3, [r3]
 124 0066 9A42     		cmp	r2, r3
 125 0068 32D9     		bls	.L12
 675:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 676:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         if ( current != EE_NIL ) {
 126              		.loc 4 676 0
 127 006a B5F1FF3F 		cmp	r5, #-1
 128 006e 03D0     		beq	.L3
 677:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_oo_call_PostTaskHook();
 678:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* We have to put the task in the READY status */
 679:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_th_status[current] = READY;
 129              		.loc 4 679 0
 130 0070 0221     		movs	r1, #2
 131 0072 1A4A     		ldr	r2, .L14+4
 132 0074 42F82510 		str	r1, [r2, r5, lsl #2]
 133              	.L3:
 680:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* !!! BUT NOT IN THE READY QUEUE !!!
 681:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****              The task remains into the Stacked Queue! */
 682:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         }
 683:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 684:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Get the new internal resource */
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_sys_ceiling |= EE_th_dispatch_prio[rq];
 134              		.loc 4 685 0
 135 0078 1F4A     		ldr	r2, .L14+32
 136 007a 52F82020 		ldr	r2, [r2, r0, lsl #2]
 137 007e 1343     		orrs	r3, r3, r2
 138 0080 1C4A     		ldr	r2, .L14+28
 139 0082 1360     		str	r3, [r2]
 686:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Put the task in running state */
 687:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[rq] = RUNNING;
 140              		.loc 4 687 0
 141 0084 0022     		movs	r2, #0
 142 0086 154B     		ldr	r3, .L14+4
 143 0088 43F82020 		str	r2, [r3, r0, lsl #2]
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 25


 144              	.LBB67:
 145              	.LBB68:
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 146              		.loc 4 566 0
 147 008c FFF7FEFF 		bl	EE_rq2stk_exchange
 148              	.LVL5:
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 149              		.loc 4 567 0
 150 0090 1A4B     		ldr	r3, .L14+36
 151 0092 53F82030 		ldr	r3, [r3, r0, lsl #2]
 152 0096 4BB1     		cbz	r3, .L4
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 153              		.loc 4 569 0
 154 0098 0025     		movs	r5, #0
 155 009a 184B     		ldr	r3, .L14+36
 156 009c 43F82050 		str	r5, [r3, r0, lsl #2]
 157              	.LVL6:
 158              	.LBB69:
 159              	.LBB70:
 160              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 26


  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 27


  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 28


 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 161              		.loc 5 154 0
 162 00a0 40F00040 		orr	r0, r0, #-2147483648
 163              	.LVL7:
 164 00a4 FFF7FEFF 		bl	EE_cortex_mx_change_context
 165              	.LVL8:
 166              	.LBE70:
 167              	.LBE69:
 168              	.LBE68:
 169              	.LBE67:
 170              	.LBE64:
 171              	.LBE63:
 199:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             /* We are inside a task */
 200:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             EE_oo_preemption_point();
 201:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****           }
 202:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****         }
 203:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       }
 204:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       ev = E_OK;
 172              		.loc 1 204 0
 173 00a8 2846     		mov	r0, r5
 174 00aa 12E0     		b	.L2
 175              	.LVL9:
 176              	.L4:
 177              	.LBB76:
 178              	.LBB75:
 179              	.LBB74:
 180              	.LBB73:
 181              	.LBB71:
 182              	.LBB72:
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 183              		.loc 5 167 0
 184 00ac FFF7FEFF 		bl	EE_cortex_mx_change_context
 185              	.LVL10:
 186              	.LBE72:
 187              	.LBE71:
 188              	.LBE73:
 189              	.LBE74:
 190              	.LBE75:
 191              	.LBE76:
 192              		.loc 1 204 0
 193 00b0 0020     		movs	r0, #0
 194 00b2 0EE0     		b	.L2
 195              	.LVL11:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 29


 196              	.L5:
 157:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     } else
 197              		.loc 1 157 0
 198 00b4 0320     		movs	r0, #3
 199              	.LVL12:
 200 00b6 0CE0     		b	.L2
 201              	.LVL13:
 202              	.L6:
 163:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     } else if ( EE_th_status[TaskID] == SUSPENDED ) {
 203              		.loc 1 163 0
 204 00b8 0120     		movs	r0, #1
 205              	.LVL14:
 206 00ba 0AE0     		b	.L2
 207              	.LVL15:
 208              	.L7:
 165:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     } else 
 209              		.loc 1 165 0
 210 00bc 0720     		movs	r0, #7
 211              	.LVL16:
 212 00be 08E0     		b	.L2
 213              	.LVL17:
 214              	.L8:
 215              		.loc 1 204 0
 216 00c0 0020     		movs	r0, #0
 217              	.LVL18:
 218 00c2 06E0     		b	.L2
 219              	.LVL19:
 220              	.L9:
 221 00c4 0020     		movs	r0, #0
 222              	.LVL20:
 223 00c6 04E0     		b	.L2
 224              	.LVL21:
 225              	.L10:
 226 00c8 0020     		movs	r0, #0
 227 00ca 02E0     		b	.L2
 228              	.LVL22:
 229              	.L11:
 230 00cc 0020     		movs	r0, #0
 231              	.LVL23:
 232 00ce 00E0     		b	.L2
 233              	.LVL24:
 234              	.L12:
 235 00d0 0020     		movs	r0, #0
 236              	.LVL25:
 237              	.L2:
 238              	.LBB77:
 239              	.LBB78:
 240              	.LBB79:
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 241              		.loc 2 232 0
 242              		.syntax unified
 243              	@ 232 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 244 00d2 84F31088 		msr primask, r4
 245              	@ 0 "" 2
 246              	.LVL26:
 247              		.thumb
 248              		.syntax unified
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 30


 249              	.LBE79:
 250              	.LBE78:
 251              	.LBE77:
 205:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     }
 206:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #if (defined(__RN_EVENT__)) || (defined(EE_AS_RPC__))
 207:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   }
 208:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #endif /* __RN_EVENT__ || EE_AS_RPC__ */
 209:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 210:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   if ( ev != E_OK ) {
 211:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     EE_ORTI_set_lasterror(ev);
 212:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     EE_oo_notify_error_SetEvent(TaskID, Mask, ev);
 213:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   }
 214:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 215:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   EE_ORTI_set_service_out(EE_SERVICETRACE_SETEVENT);
 216:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   EE_OS_EXIT_CRITICAL_SECTION();
 217:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 218:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   return ev;
 219:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** }
 252              		.loc 1 219 0
 253 00d6 38BD     		pop	{r3, r4, r5, pc}
 254              	.L15:
 255              		.align	2
 256              	.L14:
 257 00d8 00000000 		.word	EE_th_is_extended
 258 00dc 00000000 		.word	EE_th_status
 259 00e0 00000000 		.word	EE_th_event_active
 260 00e4 00000000 		.word	EE_th_event_waitmask
 261 00e8 00000000 		.word	EE_IRQ_nesting_level
 262 00ec 00000000 		.word	EE_stkfirst
 263 00f0 00000000 		.word	EE_th_ready_prio
 264 00f4 00000000 		.word	EE_sys_ceiling
 265 00f8 00000000 		.word	EE_th_dispatch_prio
 266 00fc 00000000 		.word	EE_th_waswaiting
 267              		.cfi_endproc
 268              	.LFE59:
 269              		.size	EE_oo_SetEvent, .-EE_oo_SetEvent
 270              		.text
 271              	.Letext0:
 272              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 273              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
 274              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_as_internal.inc"
 275              		.file 9 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_internal.inc"
 276              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 277              		.section	.debug_info,"",%progbits
 278              	.Ldebug_info0:
 279 0000 F3050000 		.4byte	0x5f3
 280 0004 0400     		.2byte	0x4
 281 0006 00000000 		.4byte	.Ldebug_abbrev0
 282 000a 04       		.byte	0x4
 283 000b 01       		.uleb128 0x1
 284 000c 0E050000 		.4byte	.LASF80
 285 0010 0C       		.byte	0xc
 286 0011 A1030000 		.4byte	.LASF81
 287 0015 15060000 		.4byte	.LASF82
 288 0019 30000000 		.4byte	.Ldebug_ranges0+0x30
 289 001d 00000000 		.4byte	0
 290 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 31


 291 0025 02       		.uleb128 0x2
 292 0026 01       		.byte	0x1
 293 0027 06       		.byte	0x6
 294 0028 90020000 		.4byte	.LASF0
 295 002c 02       		.uleb128 0x2
 296 002d 01       		.byte	0x1
 297 002e 08       		.byte	0x8
 298 002f 3D020000 		.4byte	.LASF1
 299 0033 02       		.uleb128 0x2
 300 0034 02       		.byte	0x2
 301 0035 05       		.byte	0x5
 302 0036 73000000 		.4byte	.LASF2
 303 003a 02       		.uleb128 0x2
 304 003b 02       		.byte	0x2
 305 003c 07       		.byte	0x7
 306 003d 39030000 		.4byte	.LASF3
 307 0041 02       		.uleb128 0x2
 308 0042 04       		.byte	0x4
 309 0043 05       		.byte	0x5
 310 0044 72010000 		.4byte	.LASF4
 311 0048 02       		.uleb128 0x2
 312 0049 04       		.byte	0x4
 313 004a 07       		.byte	0x7
 314 004b F7030000 		.4byte	.LASF5
 315 004f 02       		.uleb128 0x2
 316 0050 08       		.byte	0x8
 317 0051 05       		.byte	0x5
 318 0052 4C010000 		.4byte	.LASF6
 319 0056 02       		.uleb128 0x2
 320 0057 08       		.byte	0x8
 321 0058 07       		.byte	0x7
 322 0059 A1020000 		.4byte	.LASF7
 323 005d 03       		.uleb128 0x3
 324 005e 04       		.byte	0x4
 325 005f 05       		.byte	0x5
 326 0060 696E7400 		.ascii	"int\000"
 327 0064 02       		.uleb128 0x2
 328 0065 04       		.byte	0x4
 329 0066 07       		.byte	0x7
 330 0067 E5020000 		.4byte	.LASF8
 331 006b 02       		.uleb128 0x2
 332 006c 08       		.byte	0x8
 333 006d 04       		.byte	0x4
 334 006e 0C020000 		.4byte	.LASF9
 335 0072 04       		.uleb128 0x4
 336 0073 28000000 		.4byte	.LASF10
 337 0077 06       		.byte	0x6
 338 0078 3E       		.byte	0x3e
 339 0079 2C000000 		.4byte	0x2c
 340 007d 04       		.uleb128 0x4
 341 007e 5A010000 		.4byte	.LASF11
 342 0082 06       		.byte	0x6
 343 0083 3F       		.byte	0x3f
 344 0084 25000000 		.4byte	0x25
 345 0088 04       		.uleb128 0x4
 346 0089 61030000 		.4byte	.LASF12
 347 008d 06       		.byte	0x6
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 32


 348 008e 52       		.byte	0x52
 349 008f 3A000000 		.4byte	0x3a
 350 0093 04       		.uleb128 0x4
 351 0094 0B030000 		.4byte	.LASF13
 352 0098 06       		.byte	0x6
 353 0099 53       		.byte	0x53
 354 009a 5D000000 		.4byte	0x5d
 355 009e 04       		.uleb128 0x4
 356 009f 90000000 		.4byte	.LASF14
 357 00a3 06       		.byte	0x6
 358 00a4 54       		.byte	0x54
 359 00a5 64000000 		.4byte	0x64
 360 00a9 04       		.uleb128 0x4
 361 00aa 3F000000 		.4byte	.LASF15
 362 00ae 02       		.byte	0x2
 363 00af 4D       		.byte	0x4d
 364 00b0 9E000000 		.4byte	0x9e
 365 00b4 04       		.uleb128 0x4
 366 00b5 88000000 		.4byte	.LASF16
 367 00b9 02       		.byte	0x2
 368 00ba 4F       		.byte	0x4f
 369 00bb 9E000000 		.4byte	0x9e
 370 00bf 04       		.uleb128 0x4
 371 00c0 1C040000 		.4byte	.LASF17
 372 00c4 02       		.byte	0x2
 373 00c5 54       		.byte	0x54
 374 00c6 A9000000 		.4byte	0xa9
 375 00ca 04       		.uleb128 0x4
 376 00cb B8000000 		.4byte	.LASF18
 377 00cf 02       		.byte	0x2
 378 00d0 78       		.byte	0x78
 379 00d1 93000000 		.4byte	0x93
 380 00d5 05       		.uleb128 0x5
 381 00d6 62010000 		.4byte	.LASF19
 382 00da 07       		.byte	0x7
 383 00db 1101     		.2byte	0x111
 384 00dd 88000000 		.4byte	0x88
 385 00e1 05       		.uleb128 0x5
 386 00e2 34020000 		.4byte	.LASF20
 387 00e6 07       		.byte	0x7
 388 00e7 F701     		.2byte	0x1f7
 389 00e9 CA000000 		.4byte	0xca
 390 00ed 05       		.uleb128 0x5
 391 00ee 54000000 		.4byte	.LASF21
 392 00f2 07       		.byte	0x7
 393 00f3 2C02     		.2byte	0x22c
 394 00f5 A9000000 		.4byte	0xa9
 395 00f9 05       		.uleb128 0x5
 396 00fa 7D000000 		.4byte	.LASF22
 397 00fe 07       		.byte	0x7
 398 00ff 2103     		.2byte	0x321
 399 0101 2C000000 		.4byte	0x2c
 400 0105 06       		.uleb128 0x6
 401 0106 01       		.byte	0x1
 402 0107 2C000000 		.4byte	0x2c
 403 010b 07       		.byte	0x7
 404 010c 5904     		.2byte	0x459
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 33


 405 010e 55010000 		.4byte	0x155
 406 0112 07       		.uleb128 0x7
 407 0113 19000000 		.4byte	.LASF23
 408 0117 00       		.byte	0
 409 0118 07       		.uleb128 0x7
 410 0119 2C030000 		.4byte	.LASF24
 411 011d 01       		.byte	0x1
 412 011e 07       		.uleb128 0x7
 413 011f AB000000 		.4byte	.LASF25
 414 0123 02       		.byte	0x2
 415 0124 07       		.uleb128 0x7
 416 0125 E9000000 		.4byte	.LASF26
 417 0129 03       		.byte	0x3
 418 012a 07       		.uleb128 0x7
 419 012b 34040000 		.4byte	.LASF27
 420 012f 04       		.byte	0x4
 421 0130 07       		.uleb128 0x7
 422 0131 7C040000 		.4byte	.LASF28
 423 0135 05       		.byte	0x5
 424 0136 07       		.uleb128 0x7
 425 0137 BC040000 		.4byte	.LASF29
 426 013b 06       		.byte	0x6
 427 013c 07       		.uleb128 0x7
 428 013d CB050000 		.4byte	.LASF30
 429 0141 07       		.byte	0x7
 430 0142 07       		.uleb128 0x7
 431 0143 4C030000 		.4byte	.LASF31
 432 0147 08       		.byte	0x8
 433 0148 07       		.uleb128 0x7
 434 0149 6B030000 		.4byte	.LASF32
 435 014d 09       		.byte	0x9
 436 014e 07       		.uleb128 0x7
 437 014f 3F010000 		.4byte	.LASF33
 438 0153 0A       		.byte	0xa
 439 0154 00       		.byte	0
 440 0155 05       		.uleb128 0x5
 441 0156 BF000000 		.4byte	.LASF34
 442 015a 07       		.byte	0x7
 443 015b 6504     		.2byte	0x465
 444 015d 05010000 		.4byte	0x105
 445 0161 08       		.uleb128 0x8
 446 0162 67020000 		.4byte	.LASF83
 447 0166 02       		.byte	0x2
 448 0167 F1       		.byte	0xf1
 449 0168 B4000000 		.4byte	0xb4
 450 016c 03       		.byte	0x3
 451 016d 7D010000 		.4byte	0x17d
 452 0171 09       		.uleb128 0x9
 453 0172 CE000000 		.4byte	.LASF51
 454 0176 02       		.byte	0x2
 455 0177 F4       		.byte	0xf4
 456 0178 B4000000 		.4byte	0xb4
 457 017c 00       		.byte	0
 458 017d 0A       		.uleb128 0xa
 459 017e CD030000 		.4byte	.LASF35
 460 0182 02       		.byte	0x2
 461 0183 DC       		.byte	0xdc
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 34


 462 0184 03       		.byte	0x3
 463 0185 93010000 		.4byte	0x193
 464 0189 0B       		.uleb128 0xb
 465 018a 6600     		.ascii	"f\000"
 466 018c 02       		.byte	0x2
 467 018d DC       		.byte	0xdc
 468 018e B4000000 		.4byte	0xb4
 469 0192 00       		.byte	0
 470 0193 0C       		.uleb128 0xc
 471 0194 7B010000 		.4byte	.LASF36
 472 0198 07       		.byte	0x7
 473 0199 9703     		.2byte	0x397
 474 019b 03       		.byte	0x3
 475 019c AD010000 		.4byte	0x1ad
 476 01a0 0D       		.uleb128 0xd
 477 01a1 73727600 		.ascii	"srv\000"
 478 01a5 07       		.byte	0x7
 479 01a6 9703     		.2byte	0x397
 480 01a8 72000000 		.4byte	0x72
 481 01ac 00       		.byte	0
 482 01ad 0C       		.uleb128 0xc
 483 01ae A1010000 		.4byte	.LASF37
 484 01b2 07       		.byte	0x7
 485 01b3 8404     		.2byte	0x484
 486 01b5 03       		.byte	0x3
 487 01b6 C7010000 		.4byte	0x1c7
 488 01ba 0D       		.uleb128 0xd
 489 01bb 63747800 		.ascii	"ctx\000"
 490 01bf 07       		.byte	0x7
 491 01c0 8504     		.2byte	0x485
 492 01c2 55010000 		.4byte	0x155
 493 01c6 00       		.byte	0
 494 01c7 0A       		.uleb128 0xa
 495 01c8 7F020000 		.4byte	.LASF38
 496 01cc 05       		.byte	0x5
 497 01cd 98       		.byte	0x98
 498 01ce 03       		.byte	0x3
 499 01cf DF010000 		.4byte	0x1df
 500 01d3 0B       		.uleb128 0xb
 501 01d4 74696400 		.ascii	"tid\000"
 502 01d8 05       		.byte	0x5
 503 01d9 98       		.byte	0x98
 504 01da CA000000 		.4byte	0xca
 505 01de 00       		.byte	0
 506 01df 0E       		.uleb128 0xe
 507 01e0 B4050000 		.4byte	.LASF40
 508 01e4 04       		.byte	0x4
 509 01e5 8D01     		.2byte	0x18d
 510 01e7 03       		.byte	0x3
 511 01e8 0A       		.uleb128 0xa
 512 01e9 BD010000 		.4byte	.LASF39
 513 01ed 05       		.byte	0x5
 514 01ee A5       		.byte	0xa5
 515 01ef 03       		.byte	0x3
 516 01f0 00020000 		.4byte	0x200
 517 01f4 0B       		.uleb128 0xb
 518 01f5 74696400 		.ascii	"tid\000"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 35


 519 01f9 05       		.byte	0x5
 520 01fa A5       		.byte	0xa5
 521 01fb CA000000 		.4byte	0xca
 522 01ff 00       		.byte	0
 523 0200 0F       		.uleb128 0xf
 524 0201 D3020000 		.4byte	.LASF45
 525 0205 04       		.byte	0x4
 526 0206 EE       		.byte	0xee
 527 0207 CA000000 		.4byte	0xca
 528 020b 03       		.byte	0x3
 529 020c 0E       		.uleb128 0xe
 530 020d 14030000 		.4byte	.LASF41
 531 0211 04       		.byte	0x4
 532 0212 9A01     		.2byte	0x19a
 533 0214 03       		.byte	0x3
 534 0215 0C       		.uleb128 0xc
 535 0216 81030000 		.4byte	.LASF42
 536 021a 07       		.byte	0x7
 537 021b D203     		.2byte	0x3d2
 538 021d 03       		.byte	0x3
 539 021e 2F020000 		.4byte	0x22f
 540 0222 0D       		.uleb128 0xd
 541 0223 746D7000 		.ascii	"tmp\000"
 542 0227 07       		.byte	0x7
 543 0228 D203     		.2byte	0x3d2
 544 022a CA000000 		.4byte	0xca
 545 022e 00       		.byte	0
 546 022f 0E       		.uleb128 0xe
 547 0230 B8020000 		.4byte	.LASF43
 548 0234 08       		.byte	0x8
 549 0235 AB01     		.2byte	0x1ab
 550 0237 03       		.byte	0x3
 551 0238 0C       		.uleb128 0xc
 552 0239 FB000000 		.4byte	.LASF44
 553 023d 07       		.byte	0x7
 554 023e A303     		.2byte	0x3a3
 555 0240 03       		.byte	0x3
 556 0241 51020000 		.4byte	0x251
 557 0245 0D       		.uleb128 0xd
 558 0246 696400   		.ascii	"id\000"
 559 0249 07       		.byte	0x7
 560 024a A303     		.2byte	0x3a3
 561 024c 72000000 		.4byte	0x72
 562 0250 00       		.byte	0
 563 0251 0F       		.uleb128 0xf
 564 0252 F7050000 		.4byte	.LASF46
 565 0256 09       		.byte	0x9
 566 0257 60       		.byte	0x60
 567 0258 B4000000 		.4byte	0xb4
 568 025c 03       		.byte	0x3
 569 025d 0F       		.uleb128 0xf
 570 025e 4B040000 		.4byte	.LASF47
 571 0262 03       		.byte	0x3
 572 0263 4D       		.byte	0x4d
 573 0264 A9000000 		.4byte	0xa9
 574 0268 03       		.byte	0x3
 575 0269 0A       		.uleb128 0xa
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 36


 576 026a 4B020000 		.4byte	.LASF48
 577 026e 09       		.byte	0x9
 578 026f 68       		.byte	0x68
 579 0270 03       		.byte	0x3
 580 0271 7F020000 		.4byte	0x27f
 581 0275 0B       		.uleb128 0xb
 582 0276 6600     		.ascii	"f\000"
 583 0278 09       		.byte	0x9
 584 0279 68       		.byte	0x68
 585 027a B4000000 		.4byte	0xb4
 586 027e 00       		.byte	0
 587 027f 0C       		.uleb128 0xc
 588 0280 DF050000 		.4byte	.LASF49
 589 0284 07       		.byte	0x7
 590 0285 A803     		.2byte	0x3a8
 591 0287 03       		.byte	0x3
 592 0288 98020000 		.4byte	0x298
 593 028c 0D       		.uleb128 0xd
 594 028d 696400   		.ascii	"id\000"
 595 0290 07       		.byte	0x7
 596 0291 A803     		.2byte	0x3a8
 597 0293 72000000 		.4byte	0x72
 598 0297 00       		.byte	0
 599 0298 0C       		.uleb128 0xc
 600 0299 90040000 		.4byte	.LASF50
 601 029d 04       		.byte	0x4
 602 029e 8002     		.2byte	0x280
 603 02a0 03       		.byte	0x3
 604 02a1 BD020000 		.4byte	0x2bd
 605 02a5 10       		.uleb128 0x10
 606 02a6 E7040000 		.4byte	.LASF52
 607 02aa 04       		.byte	0x4
 608 02ab 8202     		.2byte	0x282
 609 02ad CA000000 		.4byte	0xca
 610 02b1 11       		.uleb128 0x11
 611 02b2 727100   		.ascii	"rq\000"
 612 02b5 04       		.byte	0x4
 613 02b6 8202     		.2byte	0x282
 614 02b8 CA000000 		.4byte	0xca
 615 02bc 00       		.byte	0
 616 02bd 0C       		.uleb128 0xc
 617 02be 2B010000 		.4byte	.LASF53
 618 02c2 04       		.byte	0x4
 619 02c3 3202     		.2byte	0x232
 620 02c5 03       		.byte	0x3
 621 02c6 D7020000 		.4byte	0x2d7
 622 02ca 11       		.uleb128 0x11
 623 02cb 746D7000 		.ascii	"tmp\000"
 624 02cf 04       		.byte	0x4
 625 02d0 3402     		.2byte	0x234
 626 02d2 E1000000 		.4byte	0xe1
 627 02d6 00       		.byte	0
 628 02d7 12       		.uleb128 0x12
 629 02d8 F4040000 		.4byte	.LASF84
 630 02dc 01       		.byte	0x1
 631 02dd 4D       		.byte	0x4d
 632 02de F9000000 		.4byte	0xf9
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 37


 633 02e2 00000000 		.4byte	.LFB59
 634 02e6 00010000 		.4byte	.LFE59-.LFB59
 635 02ea 01       		.uleb128 0x1
 636 02eb 9C       		.byte	0x9c
 637 02ec 71040000 		.4byte	0x471
 638 02f0 13       		.uleb128 0x13
 639 02f1 D2010000 		.4byte	.LASF54
 640 02f5 01       		.byte	0x1
 641 02f6 4D       		.byte	0x4d
 642 02f7 E1000000 		.4byte	0xe1
 643 02fb 00000000 		.4byte	.LLST0
 644 02ff 13       		.uleb128 0x13
 645 0300 9C020000 		.4byte	.LASF55
 646 0304 01       		.byte	0x1
 647 0305 4D       		.byte	0x4d
 648 0306 ED000000 		.4byte	0xed
 649 030a 9E000000 		.4byte	.LLST1
 650 030e 14       		.uleb128 0x14
 651 030f 657600   		.ascii	"ev\000"
 652 0312 01       		.byte	0x1
 653 0313 50       		.byte	0x50
 654 0314 F9000000 		.4byte	0xf9
 655 0318 01       		.uleb128 0x1
 656 0319 50       		.byte	0x50
 657 031a 15       		.uleb128 0x15
 658 031b EF040000 		.4byte	.LASF56
 659 031f 01       		.byte	0x1
 660 0320 52       		.byte	0x52
 661 0321 B4000000 		.4byte	0xb4
 662 0325 01       		.uleb128 0x1
 663 0326 54       		.byte	0x54
 664 0327 16       		.uleb128 0x16
 665 0328 51020000 		.4byte	0x251
 666 032c 02000000 		.4byte	.LBB58
 667 0330 06000000 		.4byte	.LBE58-.LBB58
 668 0334 01       		.byte	0x1
 669 0335 52       		.byte	0x52
 670 0336 5E030000 		.4byte	0x35e
 671 033a 17       		.uleb128 0x17
 672 033b 61010000 		.4byte	0x161
 673 033f 02000000 		.4byte	.LBB59
 674 0343 06000000 		.4byte	.LBE59-.LBB59
 675 0347 09       		.byte	0x9
 676 0348 62       		.byte	0x62
 677 0349 18       		.uleb128 0x18
 678 034a 02000000 		.4byte	.LBB60
 679 034e 06000000 		.4byte	.LBE60-.LBB60
 680 0352 19       		.uleb128 0x19
 681 0353 71010000 		.4byte	0x171
 682 0357 D8000000 		.4byte	.LLST2
 683 035b 00       		.byte	0
 684 035c 00       		.byte	0
 685 035d 00       		.byte	0
 686 035e 1A       		.uleb128 0x1a
 687 035f 5D020000 		.4byte	0x25d
 688 0363 46000000 		.4byte	.LBB61
 689 0367 04000000 		.4byte	.LBE61-.LBB61
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 38


 690 036b 01       		.byte	0x1
 691 036c C6       		.byte	0xc6
 692 036d 1B       		.uleb128 0x1b
 693 036e 98020000 		.4byte	0x298
 694 0372 4E000000 		.4byte	.LBB63
 695 0376 00000000 		.4byte	.Ldebug_ranges0+0
 696 037a 01       		.byte	0x1
 697 037b C8       		.byte	0xc8
 698 037c 29040000 		.4byte	0x429
 699 0380 1C       		.uleb128 0x1c
 700 0381 00000000 		.4byte	.Ldebug_ranges0+0
 701 0385 1D       		.uleb128 0x1d
 702 0386 A5020000 		.4byte	0x2a5
 703 038a 19       		.uleb128 0x19
 704 038b B1020000 		.4byte	0x2b1
 705 038f EB000000 		.4byte	.LLST3
 706 0393 1E       		.uleb128 0x1e
 707 0394 00020000 		.4byte	0x200
 708 0398 4E000000 		.4byte	.LBB65
 709 039c 04000000 		.4byte	.LBE65-.LBB65
 710 03a0 04       		.byte	0x4
 711 03a1 8502     		.2byte	0x285
 712 03a3 1F       		.uleb128 0x1f
 713 03a4 BD020000 		.4byte	0x2bd
 714 03a8 8C000000 		.4byte	.LBB67
 715 03ac 18000000 		.4byte	.Ldebug_ranges0+0x18
 716 03b0 04       		.byte	0x4
 717 03b1 B802     		.2byte	0x2b8
 718 03b3 1E040000 		.4byte	0x41e
 719 03b7 1C       		.uleb128 0x1c
 720 03b8 18000000 		.4byte	.Ldebug_ranges0+0x18
 721 03bc 19       		.uleb128 0x19
 722 03bd CA020000 		.4byte	0x2ca
 723 03c1 14010000 		.4byte	.LLST4
 724 03c5 20       		.uleb128 0x20
 725 03c6 C7010000 		.4byte	0x1c7
 726 03ca A0000000 		.4byte	.LBB69
 727 03ce 08000000 		.4byte	.LBE69-.LBB69
 728 03d2 04       		.byte	0x4
 729 03d3 3C02     		.2byte	0x23c
 730 03d5 EC030000 		.4byte	0x3ec
 731 03d9 21       		.uleb128 0x21
 732 03da D3010000 		.4byte	0x1d3
 733 03de 32010000 		.4byte	.LLST5
 734 03e2 22       		.uleb128 0x22
 735 03e3 A8000000 		.4byte	.LVL8
 736 03e7 C7050000 		.4byte	0x5c7
 737 03eb 00       		.byte	0
 738 03ec 20       		.uleb128 0x20
 739 03ed E8010000 		.4byte	0x1e8
 740 03f1 AC000000 		.4byte	.LBB71
 741 03f5 04000000 		.4byte	.LBE71-.LBB71
 742 03f9 04       		.byte	0x4
 743 03fa 3F02     		.2byte	0x23f
 744 03fc 13040000 		.4byte	0x413
 745 0400 21       		.uleb128 0x21
 746 0401 F4010000 		.4byte	0x1f4
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 39


 747 0405 45010000 		.4byte	.LLST6
 748 0409 22       		.uleb128 0x22
 749 040a B0000000 		.4byte	.LVL10
 750 040e C7050000 		.4byte	0x5c7
 751 0412 00       		.byte	0
 752 0413 22       		.uleb128 0x22
 753 0414 90000000 		.4byte	.LVL5
 754 0418 D2050000 		.4byte	0x5d2
 755 041c 00       		.byte	0
 756 041d 00       		.byte	0
 757 041e 22       		.uleb128 0x22
 758 041f 56000000 		.4byte	.LVL4
 759 0423 DE050000 		.4byte	0x5de
 760 0427 00       		.byte	0
 761 0428 00       		.byte	0
 762 0429 16       		.uleb128 0x16
 763 042a 69020000 		.4byte	0x269
 764 042e D2000000 		.4byte	.LBB77
 765 0432 04000000 		.4byte	.LBE77-.LBB77
 766 0436 01       		.byte	0x1
 767 0437 D8       		.byte	0xd8
 768 0438 5F040000 		.4byte	0x45f
 769 043c 21       		.uleb128 0x21
 770 043d 75020000 		.4byte	0x275
 771 0441 58010000 		.4byte	.LLST7
 772 0445 17       		.uleb128 0x17
 773 0446 7D010000 		.4byte	0x17d
 774 044a D2000000 		.4byte	.LBB78
 775 044e 04000000 		.4byte	.LBE78-.LBB78
 776 0452 09       		.byte	0x9
 777 0453 6A       		.byte	0x6a
 778 0454 21       		.uleb128 0x21
 779 0455 89010000 		.4byte	0x189
 780 0459 58010000 		.4byte	.LLST7
 781 045d 00       		.byte	0
 782 045e 00       		.byte	0
 783 045f 23       		.uleb128 0x23
 784 0460 46000000 		.4byte	.LVL3
 785 0464 EA050000 		.4byte	0x5ea
 786 0468 24       		.uleb128 0x24
 787 0469 01       		.uleb128 0x1
 788 046a 50       		.byte	0x50
 789 046b 03       		.uleb128 0x3
 790 046c F3       		.byte	0xf3
 791 046d 01       		.uleb128 0x1
 792 046e 50       		.byte	0x50
 793 046f 00       		.byte	0
 794 0470 00       		.byte	0
 795 0471 25       		.uleb128 0x25
 796 0472 D4000000 		.4byte	.LASF57
 797 0476 03       		.byte	0x3
 798 0477 44       		.byte	0x44
 799 0478 A9000000 		.4byte	0xa9
 800 047c 25       		.uleb128 0x25
 801 047d 00000000 		.4byte	.LASF58
 802 0481 05       		.byte	0x5
 803 0482 48       		.byte	0x48
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 40


 804 0483 CA000000 		.4byte	0xca
 805 0487 26       		.uleb128 0x26
 806 0488 9E040000 		.4byte	0x49e
 807 048c 97040000 		.4byte	0x497
 808 0490 27       		.uleb128 0x27
 809 0491 97040000 		.4byte	0x497
 810 0495 02       		.byte	0x2
 811 0496 00       		.byte	0
 812 0497 02       		.uleb128 0x2
 813 0498 04       		.byte	0x4
 814 0499 07       		.byte	0x7
 815 049a D1040000 		.4byte	.LASF59
 816 049e 28       		.uleb128 0x28
 817 049f A9000000 		.4byte	0xa9
 818 04a3 25       		.uleb128 0x25
 819 04a4 9A000000 		.4byte	.LASF60
 820 04a8 07       		.byte	0x7
 821 04a9 B2       		.byte	0xb2
 822 04aa AE040000 		.4byte	0x4ae
 823 04ae 28       		.uleb128 0x28
 824 04af 87040000 		.4byte	0x487
 825 04b3 25       		.uleb128 0x25
 826 04b4 68040000 		.4byte	.LASF61
 827 04b8 07       		.byte	0x7
 828 04b9 B3       		.byte	0xb3
 829 04ba BE040000 		.4byte	0x4be
 830 04be 28       		.uleb128 0x28
 831 04bf 87040000 		.4byte	0x487
 832 04c3 26       		.uleb128 0x26
 833 04c4 A9000000 		.4byte	0xa9
 834 04c8 D3040000 		.4byte	0x4d3
 835 04cc 27       		.uleb128 0x27
 836 04cd 97040000 		.4byte	0x497
 837 04d1 02       		.byte	0x2
 838 04d2 00       		.byte	0
 839 04d3 25       		.uleb128 0x25
 840 04d4 F2020000 		.4byte	.LASF62
 841 04d8 07       		.byte	0x7
 842 04d9 CA       		.byte	0xca
 843 04da C3040000 		.4byte	0x4c3
 844 04de 26       		.uleb128 0x26
 845 04df CA000000 		.4byte	0xca
 846 04e3 EE040000 		.4byte	0x4ee
 847 04e7 27       		.uleb128 0x27
 848 04e8 97040000 		.4byte	0x497
 849 04ec 02       		.byte	0x2
 850 04ed 00       		.byte	0
 851 04ee 25       		.uleb128 0x25
 852 04ef 03050000 		.4byte	.LASF63
 853 04f3 07       		.byte	0x7
 854 04f4 D2       		.byte	0xd2
 855 04f5 DE040000 		.4byte	0x4de
 856 04f9 25       		.uleb128 0x25
 857 04fa FF020000 		.4byte	.LASF64
 858 04fe 07       		.byte	0x7
 859 04ff DA       		.byte	0xda
 860 0500 C3040000 		.4byte	0x4c3
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 41


 861 0504 25       		.uleb128 0x25
 862 0505 28040000 		.4byte	.LASF65
 863 0509 07       		.byte	0x7
 864 050a E2       		.byte	0xe2
 865 050b CA000000 		.4byte	0xca
 866 050f 25       		.uleb128 0x25
 867 0510 D9010000 		.4byte	.LASF66
 868 0514 07       		.byte	0x7
 869 0515 F7       		.byte	0xf7
 870 0516 A9000000 		.4byte	0xa9
 871 051a 29       		.uleb128 0x29
 872 051b 31000000 		.4byte	.LASF67
 873 051f 07       		.byte	0x7
 874 0520 3F01     		.2byte	0x13f
 875 0522 D5000000 		.4byte	0xd5
 876 0526 29       		.uleb128 0x29
 877 0527 09040000 		.4byte	.LASF68
 878 052b 07       		.byte	0x7
 879 052c 5C01     		.2byte	0x15c
 880 052e C3040000 		.4byte	0x4c3
 881 0532 29       		.uleb128 0x29
 882 0533 A7040000 		.4byte	.LASF69
 883 0537 07       		.byte	0x7
 884 0538 6101     		.2byte	0x161
 885 053a C3040000 		.4byte	0x4c3
 886 053e 26       		.uleb128 0x26
 887 053f BF000000 		.4byte	0xbf
 888 0543 4E050000 		.4byte	0x54e
 889 0547 27       		.uleb128 0x27
 890 0548 97040000 		.4byte	0x497
 891 054c 02       		.byte	0x2
 892 054d 00       		.byte	0
 893 054e 29       		.uleb128 0x29
 894 054f 62000000 		.4byte	.LASF70
 895 0553 07       		.byte	0x7
 896 0554 6701     		.2byte	0x167
 897 0556 3E050000 		.4byte	0x53e
 898 055a 26       		.uleb128 0x26
 899 055b 6A050000 		.4byte	0x56a
 900 055f 6A050000 		.4byte	0x56a
 901 0563 27       		.uleb128 0x27
 902 0564 97040000 		.4byte	0x497
 903 0568 02       		.byte	0x2
 904 0569 00       		.byte	0
 905 056a 28       		.uleb128 0x28
 906 056b BF000000 		.4byte	0xbf
 907 056f 29       		.uleb128 0x29
 908 0570 8F010000 		.4byte	.LASF71
 909 0574 07       		.byte	0x7
 910 0575 7401     		.2byte	0x174
 911 0577 7B050000 		.4byte	0x57b
 912 057b 28       		.uleb128 0x28
 913 057c 5A050000 		.4byte	0x55a
 914 0580 25       		.uleb128 0x25
 915 0581 9C050000 		.4byte	.LASF72
 916 0585 0A       		.byte	0xa
 917 0586 40       		.byte	0x40
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 42


 918 0587 A9000000 		.4byte	0xa9
 919 058b 25       		.uleb128 0x25
 920 058c 12010000 		.4byte	.LASF73
 921 0590 0A       		.byte	0xa
 922 0591 47       		.byte	0x47
 923 0592 B4000000 		.4byte	0xb4
 924 0596 25       		.uleb128 0x25
 925 0597 E4030000 		.4byte	.LASF74
 926 059b 0A       		.byte	0xa
 927 059c 4A       		.byte	0x4a
 928 059d A9000000 		.4byte	0xa9
 929 05a1 26       		.uleb128 0x26
 930 05a2 B1050000 		.4byte	0x5b1
 931 05a6 B1050000 		.4byte	0x5b1
 932 05aa 27       		.uleb128 0x27
 933 05ab 97040000 		.4byte	0x497
 934 05af FF       		.byte	0xff
 935 05b0 00       		.byte	0
 936 05b1 28       		.uleb128 0x28
 937 05b2 7D000000 		.4byte	0x7d
 938 05b6 29       		.uleb128 0x29
 939 05b7 DA040000 		.4byte	.LASF75
 940 05bb 04       		.byte	0x4
 941 05bc AB01     		.2byte	0x1ab
 942 05be C2050000 		.4byte	0x5c2
 943 05c2 28       		.uleb128 0x28
 944 05c3 A1050000 		.4byte	0x5a1
 945 05c7 2A       		.uleb128 0x2a
 946 05c8 18020000 		.4byte	.LASF76
 947 05cc 18020000 		.4byte	.LASF76
 948 05d0 05       		.byte	0x5
 949 05d1 4F       		.byte	0x4f
 950 05d2 2B       		.uleb128 0x2b
 951 05d3 E8010000 		.4byte	.LASF77
 952 05d7 E8010000 		.4byte	.LASF77
 953 05db 04       		.byte	0x4
 954 05dc E901     		.2byte	0x1e9
 955 05de 2B       		.uleb128 0x2b
 956 05df FB010000 		.4byte	.LASF78
 957 05e3 FB010000 		.4byte	.LASF78
 958 05e7 04       		.byte	0x4
 959 05e8 CB01     		.2byte	0x1cb
 960 05ea 2B       		.uleb128 0x2b
 961 05eb 47000000 		.4byte	.LASF79
 962 05ef 47000000 		.4byte	.LASF79
 963 05f3 04       		.byte	0x4
 964 05f4 E401     		.2byte	0x1e4
 965 05f6 00       		.byte	0
 966              		.section	.debug_abbrev,"",%progbits
 967              	.Ldebug_abbrev0:
 968 0000 01       		.uleb128 0x1
 969 0001 11       		.uleb128 0x11
 970 0002 01       		.byte	0x1
 971 0003 25       		.uleb128 0x25
 972 0004 0E       		.uleb128 0xe
 973 0005 13       		.uleb128 0x13
 974 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 43


 975 0007 03       		.uleb128 0x3
 976 0008 0E       		.uleb128 0xe
 977 0009 1B       		.uleb128 0x1b
 978 000a 0E       		.uleb128 0xe
 979 000b 55       		.uleb128 0x55
 980 000c 17       		.uleb128 0x17
 981 000d 11       		.uleb128 0x11
 982 000e 01       		.uleb128 0x1
 983 000f 10       		.uleb128 0x10
 984 0010 17       		.uleb128 0x17
 985 0011 00       		.byte	0
 986 0012 00       		.byte	0
 987 0013 02       		.uleb128 0x2
 988 0014 24       		.uleb128 0x24
 989 0015 00       		.byte	0
 990 0016 0B       		.uleb128 0xb
 991 0017 0B       		.uleb128 0xb
 992 0018 3E       		.uleb128 0x3e
 993 0019 0B       		.uleb128 0xb
 994 001a 03       		.uleb128 0x3
 995 001b 0E       		.uleb128 0xe
 996 001c 00       		.byte	0
 997 001d 00       		.byte	0
 998 001e 03       		.uleb128 0x3
 999 001f 24       		.uleb128 0x24
 1000 0020 00       		.byte	0
 1001 0021 0B       		.uleb128 0xb
 1002 0022 0B       		.uleb128 0xb
 1003 0023 3E       		.uleb128 0x3e
 1004 0024 0B       		.uleb128 0xb
 1005 0025 03       		.uleb128 0x3
 1006 0026 08       		.uleb128 0x8
 1007 0027 00       		.byte	0
 1008 0028 00       		.byte	0
 1009 0029 04       		.uleb128 0x4
 1010 002a 16       		.uleb128 0x16
 1011 002b 00       		.byte	0
 1012 002c 03       		.uleb128 0x3
 1013 002d 0E       		.uleb128 0xe
 1014 002e 3A       		.uleb128 0x3a
 1015 002f 0B       		.uleb128 0xb
 1016 0030 3B       		.uleb128 0x3b
 1017 0031 0B       		.uleb128 0xb
 1018 0032 49       		.uleb128 0x49
 1019 0033 13       		.uleb128 0x13
 1020 0034 00       		.byte	0
 1021 0035 00       		.byte	0
 1022 0036 05       		.uleb128 0x5
 1023 0037 16       		.uleb128 0x16
 1024 0038 00       		.byte	0
 1025 0039 03       		.uleb128 0x3
 1026 003a 0E       		.uleb128 0xe
 1027 003b 3A       		.uleb128 0x3a
 1028 003c 0B       		.uleb128 0xb
 1029 003d 3B       		.uleb128 0x3b
 1030 003e 05       		.uleb128 0x5
 1031 003f 49       		.uleb128 0x49
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 44


 1032 0040 13       		.uleb128 0x13
 1033 0041 00       		.byte	0
 1034 0042 00       		.byte	0
 1035 0043 06       		.uleb128 0x6
 1036 0044 04       		.uleb128 0x4
 1037 0045 01       		.byte	0x1
 1038 0046 0B       		.uleb128 0xb
 1039 0047 0B       		.uleb128 0xb
 1040 0048 49       		.uleb128 0x49
 1041 0049 13       		.uleb128 0x13
 1042 004a 3A       		.uleb128 0x3a
 1043 004b 0B       		.uleb128 0xb
 1044 004c 3B       		.uleb128 0x3b
 1045 004d 05       		.uleb128 0x5
 1046 004e 01       		.uleb128 0x1
 1047 004f 13       		.uleb128 0x13
 1048 0050 00       		.byte	0
 1049 0051 00       		.byte	0
 1050 0052 07       		.uleb128 0x7
 1051 0053 28       		.uleb128 0x28
 1052 0054 00       		.byte	0
 1053 0055 03       		.uleb128 0x3
 1054 0056 0E       		.uleb128 0xe
 1055 0057 1C       		.uleb128 0x1c
 1056 0058 0B       		.uleb128 0xb
 1057 0059 00       		.byte	0
 1058 005a 00       		.byte	0
 1059 005b 08       		.uleb128 0x8
 1060 005c 2E       		.uleb128 0x2e
 1061 005d 01       		.byte	0x1
 1062 005e 03       		.uleb128 0x3
 1063 005f 0E       		.uleb128 0xe
 1064 0060 3A       		.uleb128 0x3a
 1065 0061 0B       		.uleb128 0xb
 1066 0062 3B       		.uleb128 0x3b
 1067 0063 0B       		.uleb128 0xb
 1068 0064 27       		.uleb128 0x27
 1069 0065 19       		.uleb128 0x19
 1070 0066 49       		.uleb128 0x49
 1071 0067 13       		.uleb128 0x13
 1072 0068 20       		.uleb128 0x20
 1073 0069 0B       		.uleb128 0xb
 1074 006a 01       		.uleb128 0x1
 1075 006b 13       		.uleb128 0x13
 1076 006c 00       		.byte	0
 1077 006d 00       		.byte	0
 1078 006e 09       		.uleb128 0x9
 1079 006f 34       		.uleb128 0x34
 1080 0070 00       		.byte	0
 1081 0071 03       		.uleb128 0x3
 1082 0072 0E       		.uleb128 0xe
 1083 0073 3A       		.uleb128 0x3a
 1084 0074 0B       		.uleb128 0xb
 1085 0075 3B       		.uleb128 0x3b
 1086 0076 0B       		.uleb128 0xb
 1087 0077 49       		.uleb128 0x49
 1088 0078 13       		.uleb128 0x13
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 45


 1089 0079 00       		.byte	0
 1090 007a 00       		.byte	0
 1091 007b 0A       		.uleb128 0xa
 1092 007c 2E       		.uleb128 0x2e
 1093 007d 01       		.byte	0x1
 1094 007e 03       		.uleb128 0x3
 1095 007f 0E       		.uleb128 0xe
 1096 0080 3A       		.uleb128 0x3a
 1097 0081 0B       		.uleb128 0xb
 1098 0082 3B       		.uleb128 0x3b
 1099 0083 0B       		.uleb128 0xb
 1100 0084 27       		.uleb128 0x27
 1101 0085 19       		.uleb128 0x19
 1102 0086 20       		.uleb128 0x20
 1103 0087 0B       		.uleb128 0xb
 1104 0088 01       		.uleb128 0x1
 1105 0089 13       		.uleb128 0x13
 1106 008a 00       		.byte	0
 1107 008b 00       		.byte	0
 1108 008c 0B       		.uleb128 0xb
 1109 008d 05       		.uleb128 0x5
 1110 008e 00       		.byte	0
 1111 008f 03       		.uleb128 0x3
 1112 0090 08       		.uleb128 0x8
 1113 0091 3A       		.uleb128 0x3a
 1114 0092 0B       		.uleb128 0xb
 1115 0093 3B       		.uleb128 0x3b
 1116 0094 0B       		.uleb128 0xb
 1117 0095 49       		.uleb128 0x49
 1118 0096 13       		.uleb128 0x13
 1119 0097 00       		.byte	0
 1120 0098 00       		.byte	0
 1121 0099 0C       		.uleb128 0xc
 1122 009a 2E       		.uleb128 0x2e
 1123 009b 01       		.byte	0x1
 1124 009c 03       		.uleb128 0x3
 1125 009d 0E       		.uleb128 0xe
 1126 009e 3A       		.uleb128 0x3a
 1127 009f 0B       		.uleb128 0xb
 1128 00a0 3B       		.uleb128 0x3b
 1129 00a1 05       		.uleb128 0x5
 1130 00a2 27       		.uleb128 0x27
 1131 00a3 19       		.uleb128 0x19
 1132 00a4 20       		.uleb128 0x20
 1133 00a5 0B       		.uleb128 0xb
 1134 00a6 01       		.uleb128 0x1
 1135 00a7 13       		.uleb128 0x13
 1136 00a8 00       		.byte	0
 1137 00a9 00       		.byte	0
 1138 00aa 0D       		.uleb128 0xd
 1139 00ab 05       		.uleb128 0x5
 1140 00ac 00       		.byte	0
 1141 00ad 03       		.uleb128 0x3
 1142 00ae 08       		.uleb128 0x8
 1143 00af 3A       		.uleb128 0x3a
 1144 00b0 0B       		.uleb128 0xb
 1145 00b1 3B       		.uleb128 0x3b
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 46


 1146 00b2 05       		.uleb128 0x5
 1147 00b3 49       		.uleb128 0x49
 1148 00b4 13       		.uleb128 0x13
 1149 00b5 00       		.byte	0
 1150 00b6 00       		.byte	0
 1151 00b7 0E       		.uleb128 0xe
 1152 00b8 2E       		.uleb128 0x2e
 1153 00b9 00       		.byte	0
 1154 00ba 03       		.uleb128 0x3
 1155 00bb 0E       		.uleb128 0xe
 1156 00bc 3A       		.uleb128 0x3a
 1157 00bd 0B       		.uleb128 0xb
 1158 00be 3B       		.uleb128 0x3b
 1159 00bf 05       		.uleb128 0x5
 1160 00c0 27       		.uleb128 0x27
 1161 00c1 19       		.uleb128 0x19
 1162 00c2 20       		.uleb128 0x20
 1163 00c3 0B       		.uleb128 0xb
 1164 00c4 00       		.byte	0
 1165 00c5 00       		.byte	0
 1166 00c6 0F       		.uleb128 0xf
 1167 00c7 2E       		.uleb128 0x2e
 1168 00c8 00       		.byte	0
 1169 00c9 03       		.uleb128 0x3
 1170 00ca 0E       		.uleb128 0xe
 1171 00cb 3A       		.uleb128 0x3a
 1172 00cc 0B       		.uleb128 0xb
 1173 00cd 3B       		.uleb128 0x3b
 1174 00ce 0B       		.uleb128 0xb
 1175 00cf 27       		.uleb128 0x27
 1176 00d0 19       		.uleb128 0x19
 1177 00d1 49       		.uleb128 0x49
 1178 00d2 13       		.uleb128 0x13
 1179 00d3 20       		.uleb128 0x20
 1180 00d4 0B       		.uleb128 0xb
 1181 00d5 00       		.byte	0
 1182 00d6 00       		.byte	0
 1183 00d7 10       		.uleb128 0x10
 1184 00d8 34       		.uleb128 0x34
 1185 00d9 00       		.byte	0
 1186 00da 03       		.uleb128 0x3
 1187 00db 0E       		.uleb128 0xe
 1188 00dc 3A       		.uleb128 0x3a
 1189 00dd 0B       		.uleb128 0xb
 1190 00de 3B       		.uleb128 0x3b
 1191 00df 05       		.uleb128 0x5
 1192 00e0 49       		.uleb128 0x49
 1193 00e1 13       		.uleb128 0x13
 1194 00e2 00       		.byte	0
 1195 00e3 00       		.byte	0
 1196 00e4 11       		.uleb128 0x11
 1197 00e5 34       		.uleb128 0x34
 1198 00e6 00       		.byte	0
 1199 00e7 03       		.uleb128 0x3
 1200 00e8 08       		.uleb128 0x8
 1201 00e9 3A       		.uleb128 0x3a
 1202 00ea 0B       		.uleb128 0xb
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 47


 1203 00eb 3B       		.uleb128 0x3b
 1204 00ec 05       		.uleb128 0x5
 1205 00ed 49       		.uleb128 0x49
 1206 00ee 13       		.uleb128 0x13
 1207 00ef 00       		.byte	0
 1208 00f0 00       		.byte	0
 1209 00f1 12       		.uleb128 0x12
 1210 00f2 2E       		.uleb128 0x2e
 1211 00f3 01       		.byte	0x1
 1212 00f4 3F       		.uleb128 0x3f
 1213 00f5 19       		.uleb128 0x19
 1214 00f6 03       		.uleb128 0x3
 1215 00f7 0E       		.uleb128 0xe
 1216 00f8 3A       		.uleb128 0x3a
 1217 00f9 0B       		.uleb128 0xb
 1218 00fa 3B       		.uleb128 0x3b
 1219 00fb 0B       		.uleb128 0xb
 1220 00fc 27       		.uleb128 0x27
 1221 00fd 19       		.uleb128 0x19
 1222 00fe 49       		.uleb128 0x49
 1223 00ff 13       		.uleb128 0x13
 1224 0100 11       		.uleb128 0x11
 1225 0101 01       		.uleb128 0x1
 1226 0102 12       		.uleb128 0x12
 1227 0103 06       		.uleb128 0x6
 1228 0104 40       		.uleb128 0x40
 1229 0105 18       		.uleb128 0x18
 1230 0106 9742     		.uleb128 0x2117
 1231 0108 19       		.uleb128 0x19
 1232 0109 01       		.uleb128 0x1
 1233 010a 13       		.uleb128 0x13
 1234 010b 00       		.byte	0
 1235 010c 00       		.byte	0
 1236 010d 13       		.uleb128 0x13
 1237 010e 05       		.uleb128 0x5
 1238 010f 00       		.byte	0
 1239 0110 03       		.uleb128 0x3
 1240 0111 0E       		.uleb128 0xe
 1241 0112 3A       		.uleb128 0x3a
 1242 0113 0B       		.uleb128 0xb
 1243 0114 3B       		.uleb128 0x3b
 1244 0115 0B       		.uleb128 0xb
 1245 0116 49       		.uleb128 0x49
 1246 0117 13       		.uleb128 0x13
 1247 0118 02       		.uleb128 0x2
 1248 0119 17       		.uleb128 0x17
 1249 011a 00       		.byte	0
 1250 011b 00       		.byte	0
 1251 011c 14       		.uleb128 0x14
 1252 011d 34       		.uleb128 0x34
 1253 011e 00       		.byte	0
 1254 011f 03       		.uleb128 0x3
 1255 0120 08       		.uleb128 0x8
 1256 0121 3A       		.uleb128 0x3a
 1257 0122 0B       		.uleb128 0xb
 1258 0123 3B       		.uleb128 0x3b
 1259 0124 0B       		.uleb128 0xb
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 48


 1260 0125 49       		.uleb128 0x49
 1261 0126 13       		.uleb128 0x13
 1262 0127 02       		.uleb128 0x2
 1263 0128 18       		.uleb128 0x18
 1264 0129 00       		.byte	0
 1265 012a 00       		.byte	0
 1266 012b 15       		.uleb128 0x15
 1267 012c 34       		.uleb128 0x34
 1268 012d 00       		.byte	0
 1269 012e 03       		.uleb128 0x3
 1270 012f 0E       		.uleb128 0xe
 1271 0130 3A       		.uleb128 0x3a
 1272 0131 0B       		.uleb128 0xb
 1273 0132 3B       		.uleb128 0x3b
 1274 0133 0B       		.uleb128 0xb
 1275 0134 49       		.uleb128 0x49
 1276 0135 13       		.uleb128 0x13
 1277 0136 02       		.uleb128 0x2
 1278 0137 18       		.uleb128 0x18
 1279 0138 00       		.byte	0
 1280 0139 00       		.byte	0
 1281 013a 16       		.uleb128 0x16
 1282 013b 1D       		.uleb128 0x1d
 1283 013c 01       		.byte	0x1
 1284 013d 31       		.uleb128 0x31
 1285 013e 13       		.uleb128 0x13
 1286 013f 11       		.uleb128 0x11
 1287 0140 01       		.uleb128 0x1
 1288 0141 12       		.uleb128 0x12
 1289 0142 06       		.uleb128 0x6
 1290 0143 58       		.uleb128 0x58
 1291 0144 0B       		.uleb128 0xb
 1292 0145 59       		.uleb128 0x59
 1293 0146 0B       		.uleb128 0xb
 1294 0147 01       		.uleb128 0x1
 1295 0148 13       		.uleb128 0x13
 1296 0149 00       		.byte	0
 1297 014a 00       		.byte	0
 1298 014b 17       		.uleb128 0x17
 1299 014c 1D       		.uleb128 0x1d
 1300 014d 01       		.byte	0x1
 1301 014e 31       		.uleb128 0x31
 1302 014f 13       		.uleb128 0x13
 1303 0150 11       		.uleb128 0x11
 1304 0151 01       		.uleb128 0x1
 1305 0152 12       		.uleb128 0x12
 1306 0153 06       		.uleb128 0x6
 1307 0154 58       		.uleb128 0x58
 1308 0155 0B       		.uleb128 0xb
 1309 0156 59       		.uleb128 0x59
 1310 0157 0B       		.uleb128 0xb
 1311 0158 00       		.byte	0
 1312 0159 00       		.byte	0
 1313 015a 18       		.uleb128 0x18
 1314 015b 0B       		.uleb128 0xb
 1315 015c 01       		.byte	0x1
 1316 015d 11       		.uleb128 0x11
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 49


 1317 015e 01       		.uleb128 0x1
 1318 015f 12       		.uleb128 0x12
 1319 0160 06       		.uleb128 0x6
 1320 0161 00       		.byte	0
 1321 0162 00       		.byte	0
 1322 0163 19       		.uleb128 0x19
 1323 0164 34       		.uleb128 0x34
 1324 0165 00       		.byte	0
 1325 0166 31       		.uleb128 0x31
 1326 0167 13       		.uleb128 0x13
 1327 0168 02       		.uleb128 0x2
 1328 0169 17       		.uleb128 0x17
 1329 016a 00       		.byte	0
 1330 016b 00       		.byte	0
 1331 016c 1A       		.uleb128 0x1a
 1332 016d 1D       		.uleb128 0x1d
 1333 016e 00       		.byte	0
 1334 016f 31       		.uleb128 0x31
 1335 0170 13       		.uleb128 0x13
 1336 0171 11       		.uleb128 0x11
 1337 0172 01       		.uleb128 0x1
 1338 0173 12       		.uleb128 0x12
 1339 0174 06       		.uleb128 0x6
 1340 0175 58       		.uleb128 0x58
 1341 0176 0B       		.uleb128 0xb
 1342 0177 59       		.uleb128 0x59
 1343 0178 0B       		.uleb128 0xb
 1344 0179 00       		.byte	0
 1345 017a 00       		.byte	0
 1346 017b 1B       		.uleb128 0x1b
 1347 017c 1D       		.uleb128 0x1d
 1348 017d 01       		.byte	0x1
 1349 017e 31       		.uleb128 0x31
 1350 017f 13       		.uleb128 0x13
 1351 0180 52       		.uleb128 0x52
 1352 0181 01       		.uleb128 0x1
 1353 0182 55       		.uleb128 0x55
 1354 0183 17       		.uleb128 0x17
 1355 0184 58       		.uleb128 0x58
 1356 0185 0B       		.uleb128 0xb
 1357 0186 59       		.uleb128 0x59
 1358 0187 0B       		.uleb128 0xb
 1359 0188 01       		.uleb128 0x1
 1360 0189 13       		.uleb128 0x13
 1361 018a 00       		.byte	0
 1362 018b 00       		.byte	0
 1363 018c 1C       		.uleb128 0x1c
 1364 018d 0B       		.uleb128 0xb
 1365 018e 01       		.byte	0x1
 1366 018f 55       		.uleb128 0x55
 1367 0190 17       		.uleb128 0x17
 1368 0191 00       		.byte	0
 1369 0192 00       		.byte	0
 1370 0193 1D       		.uleb128 0x1d
 1371 0194 34       		.uleb128 0x34
 1372 0195 00       		.byte	0
 1373 0196 31       		.uleb128 0x31
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 50


 1374 0197 13       		.uleb128 0x13
 1375 0198 00       		.byte	0
 1376 0199 00       		.byte	0
 1377 019a 1E       		.uleb128 0x1e
 1378 019b 1D       		.uleb128 0x1d
 1379 019c 00       		.byte	0
 1380 019d 31       		.uleb128 0x31
 1381 019e 13       		.uleb128 0x13
 1382 019f 11       		.uleb128 0x11
 1383 01a0 01       		.uleb128 0x1
 1384 01a1 12       		.uleb128 0x12
 1385 01a2 06       		.uleb128 0x6
 1386 01a3 58       		.uleb128 0x58
 1387 01a4 0B       		.uleb128 0xb
 1388 01a5 59       		.uleb128 0x59
 1389 01a6 05       		.uleb128 0x5
 1390 01a7 00       		.byte	0
 1391 01a8 00       		.byte	0
 1392 01a9 1F       		.uleb128 0x1f
 1393 01aa 1D       		.uleb128 0x1d
 1394 01ab 01       		.byte	0x1
 1395 01ac 31       		.uleb128 0x31
 1396 01ad 13       		.uleb128 0x13
 1397 01ae 52       		.uleb128 0x52
 1398 01af 01       		.uleb128 0x1
 1399 01b0 55       		.uleb128 0x55
 1400 01b1 17       		.uleb128 0x17
 1401 01b2 58       		.uleb128 0x58
 1402 01b3 0B       		.uleb128 0xb
 1403 01b4 59       		.uleb128 0x59
 1404 01b5 05       		.uleb128 0x5
 1405 01b6 01       		.uleb128 0x1
 1406 01b7 13       		.uleb128 0x13
 1407 01b8 00       		.byte	0
 1408 01b9 00       		.byte	0
 1409 01ba 20       		.uleb128 0x20
 1410 01bb 1D       		.uleb128 0x1d
 1411 01bc 01       		.byte	0x1
 1412 01bd 31       		.uleb128 0x31
 1413 01be 13       		.uleb128 0x13
 1414 01bf 11       		.uleb128 0x11
 1415 01c0 01       		.uleb128 0x1
 1416 01c1 12       		.uleb128 0x12
 1417 01c2 06       		.uleb128 0x6
 1418 01c3 58       		.uleb128 0x58
 1419 01c4 0B       		.uleb128 0xb
 1420 01c5 59       		.uleb128 0x59
 1421 01c6 05       		.uleb128 0x5
 1422 01c7 01       		.uleb128 0x1
 1423 01c8 13       		.uleb128 0x13
 1424 01c9 00       		.byte	0
 1425 01ca 00       		.byte	0
 1426 01cb 21       		.uleb128 0x21
 1427 01cc 05       		.uleb128 0x5
 1428 01cd 00       		.byte	0
 1429 01ce 31       		.uleb128 0x31
 1430 01cf 13       		.uleb128 0x13
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 51


 1431 01d0 02       		.uleb128 0x2
 1432 01d1 17       		.uleb128 0x17
 1433 01d2 00       		.byte	0
 1434 01d3 00       		.byte	0
 1435 01d4 22       		.uleb128 0x22
 1436 01d5 898201   		.uleb128 0x4109
 1437 01d8 00       		.byte	0
 1438 01d9 11       		.uleb128 0x11
 1439 01da 01       		.uleb128 0x1
 1440 01db 31       		.uleb128 0x31
 1441 01dc 13       		.uleb128 0x13
 1442 01dd 00       		.byte	0
 1443 01de 00       		.byte	0
 1444 01df 23       		.uleb128 0x23
 1445 01e0 898201   		.uleb128 0x4109
 1446 01e3 01       		.byte	0x1
 1447 01e4 11       		.uleb128 0x11
 1448 01e5 01       		.uleb128 0x1
 1449 01e6 31       		.uleb128 0x31
 1450 01e7 13       		.uleb128 0x13
 1451 01e8 00       		.byte	0
 1452 01e9 00       		.byte	0
 1453 01ea 24       		.uleb128 0x24
 1454 01eb 8A8201   		.uleb128 0x410a
 1455 01ee 00       		.byte	0
 1456 01ef 02       		.uleb128 0x2
 1457 01f0 18       		.uleb128 0x18
 1458 01f1 9142     		.uleb128 0x2111
 1459 01f3 18       		.uleb128 0x18
 1460 01f4 00       		.byte	0
 1461 01f5 00       		.byte	0
 1462 01f6 25       		.uleb128 0x25
 1463 01f7 34       		.uleb128 0x34
 1464 01f8 00       		.byte	0
 1465 01f9 03       		.uleb128 0x3
 1466 01fa 0E       		.uleb128 0xe
 1467 01fb 3A       		.uleb128 0x3a
 1468 01fc 0B       		.uleb128 0xb
 1469 01fd 3B       		.uleb128 0x3b
 1470 01fe 0B       		.uleb128 0xb
 1471 01ff 49       		.uleb128 0x49
 1472 0200 13       		.uleb128 0x13
 1473 0201 3F       		.uleb128 0x3f
 1474 0202 19       		.uleb128 0x19
 1475 0203 3C       		.uleb128 0x3c
 1476 0204 19       		.uleb128 0x19
 1477 0205 00       		.byte	0
 1478 0206 00       		.byte	0
 1479 0207 26       		.uleb128 0x26
 1480 0208 01       		.uleb128 0x1
 1481 0209 01       		.byte	0x1
 1482 020a 49       		.uleb128 0x49
 1483 020b 13       		.uleb128 0x13
 1484 020c 01       		.uleb128 0x1
 1485 020d 13       		.uleb128 0x13
 1486 020e 00       		.byte	0
 1487 020f 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 52


 1488 0210 27       		.uleb128 0x27
 1489 0211 21       		.uleb128 0x21
 1490 0212 00       		.byte	0
 1491 0213 49       		.uleb128 0x49
 1492 0214 13       		.uleb128 0x13
 1493 0215 2F       		.uleb128 0x2f
 1494 0216 0B       		.uleb128 0xb
 1495 0217 00       		.byte	0
 1496 0218 00       		.byte	0
 1497 0219 28       		.uleb128 0x28
 1498 021a 26       		.uleb128 0x26
 1499 021b 00       		.byte	0
 1500 021c 49       		.uleb128 0x49
 1501 021d 13       		.uleb128 0x13
 1502 021e 00       		.byte	0
 1503 021f 00       		.byte	0
 1504 0220 29       		.uleb128 0x29
 1505 0221 34       		.uleb128 0x34
 1506 0222 00       		.byte	0
 1507 0223 03       		.uleb128 0x3
 1508 0224 0E       		.uleb128 0xe
 1509 0225 3A       		.uleb128 0x3a
 1510 0226 0B       		.uleb128 0xb
 1511 0227 3B       		.uleb128 0x3b
 1512 0228 05       		.uleb128 0x5
 1513 0229 49       		.uleb128 0x49
 1514 022a 13       		.uleb128 0x13
 1515 022b 3F       		.uleb128 0x3f
 1516 022c 19       		.uleb128 0x19
 1517 022d 3C       		.uleb128 0x3c
 1518 022e 19       		.uleb128 0x19
 1519 022f 00       		.byte	0
 1520 0230 00       		.byte	0
 1521 0231 2A       		.uleb128 0x2a
 1522 0232 2E       		.uleb128 0x2e
 1523 0233 00       		.byte	0
 1524 0234 3F       		.uleb128 0x3f
 1525 0235 19       		.uleb128 0x19
 1526 0236 3C       		.uleb128 0x3c
 1527 0237 19       		.uleb128 0x19
 1528 0238 6E       		.uleb128 0x6e
 1529 0239 0E       		.uleb128 0xe
 1530 023a 03       		.uleb128 0x3
 1531 023b 0E       		.uleb128 0xe
 1532 023c 3A       		.uleb128 0x3a
 1533 023d 0B       		.uleb128 0xb
 1534 023e 3B       		.uleb128 0x3b
 1535 023f 0B       		.uleb128 0xb
 1536 0240 00       		.byte	0
 1537 0241 00       		.byte	0
 1538 0242 2B       		.uleb128 0x2b
 1539 0243 2E       		.uleb128 0x2e
 1540 0244 00       		.byte	0
 1541 0245 3F       		.uleb128 0x3f
 1542 0246 19       		.uleb128 0x19
 1543 0247 3C       		.uleb128 0x3c
 1544 0248 19       		.uleb128 0x19
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 53


 1545 0249 6E       		.uleb128 0x6e
 1546 024a 0E       		.uleb128 0xe
 1547 024b 03       		.uleb128 0x3
 1548 024c 0E       		.uleb128 0xe
 1549 024d 3A       		.uleb128 0x3a
 1550 024e 0B       		.uleb128 0xb
 1551 024f 3B       		.uleb128 0x3b
 1552 0250 05       		.uleb128 0x5
 1553 0251 00       		.byte	0
 1554 0252 00       		.byte	0
 1555 0253 00       		.byte	0
 1556              		.section	.debug_loc,"",%progbits
 1557              	.Ldebug_loc0:
 1558              	.LLST0:
 1559 0000 00000000 		.4byte	.LVL0
 1560 0004 45000000 		.4byte	.LVL3-1
 1561 0008 0100     		.2byte	0x1
 1562 000a 50       		.byte	0x50
 1563 000b 45000000 		.4byte	.LVL3-1
 1564 000f B4000000 		.4byte	.LVL11
 1565 0013 0400     		.2byte	0x4
 1566 0015 F3       		.byte	0xf3
 1567 0016 01       		.uleb128 0x1
 1568 0017 50       		.byte	0x50
 1569 0018 9F       		.byte	0x9f
 1570 0019 B4000000 		.4byte	.LVL11
 1571 001d B6000000 		.4byte	.LVL12
 1572 0021 0100     		.2byte	0x1
 1573 0023 50       		.byte	0x50
 1574 0024 B6000000 		.4byte	.LVL12
 1575 0028 B8000000 		.4byte	.LVL13
 1576 002c 0400     		.2byte	0x4
 1577 002e F3       		.byte	0xf3
 1578 002f 01       		.uleb128 0x1
 1579 0030 50       		.byte	0x50
 1580 0031 9F       		.byte	0x9f
 1581 0032 B8000000 		.4byte	.LVL13
 1582 0036 BA000000 		.4byte	.LVL14
 1583 003a 0100     		.2byte	0x1
 1584 003c 50       		.byte	0x50
 1585 003d BA000000 		.4byte	.LVL14
 1586 0041 BC000000 		.4byte	.LVL15
 1587 0045 0400     		.2byte	0x4
 1588 0047 F3       		.byte	0xf3
 1589 0048 01       		.uleb128 0x1
 1590 0049 50       		.byte	0x50
 1591 004a 9F       		.byte	0x9f
 1592 004b BC000000 		.4byte	.LVL15
 1593 004f BE000000 		.4byte	.LVL16
 1594 0053 0100     		.2byte	0x1
 1595 0055 50       		.byte	0x50
 1596 0056 BE000000 		.4byte	.LVL16
 1597 005a C0000000 		.4byte	.LVL17
 1598 005e 0400     		.2byte	0x4
 1599 0060 F3       		.byte	0xf3
 1600 0061 01       		.uleb128 0x1
 1601 0062 50       		.byte	0x50
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 54


 1602 0063 9F       		.byte	0x9f
 1603 0064 C0000000 		.4byte	.LVL17
 1604 0068 C2000000 		.4byte	.LVL18
 1605 006c 0100     		.2byte	0x1
 1606 006e 50       		.byte	0x50
 1607 006f C2000000 		.4byte	.LVL18
 1608 0073 C4000000 		.4byte	.LVL19
 1609 0077 0400     		.2byte	0x4
 1610 0079 F3       		.byte	0xf3
 1611 007a 01       		.uleb128 0x1
 1612 007b 50       		.byte	0x50
 1613 007c 9F       		.byte	0x9f
 1614 007d C4000000 		.4byte	.LVL19
 1615 0081 C6000000 		.4byte	.LVL20
 1616 0085 0100     		.2byte	0x1
 1617 0087 50       		.byte	0x50
 1618 0088 C6000000 		.4byte	.LVL20
 1619 008c 00010000 		.4byte	.LFE59
 1620 0090 0400     		.2byte	0x4
 1621 0092 F3       		.byte	0xf3
 1622 0093 01       		.uleb128 0x1
 1623 0094 50       		.byte	0x50
 1624 0095 9F       		.byte	0x9f
 1625 0096 00000000 		.4byte	0
 1626 009a 00000000 		.4byte	0
 1627              	.LLST1:
 1628 009e 00000000 		.4byte	.LVL0
 1629 00a2 45000000 		.4byte	.LVL3-1
 1630 00a6 0100     		.2byte	0x1
 1631 00a8 51       		.byte	0x51
 1632 00a9 45000000 		.4byte	.LVL3-1
 1633 00ad B4000000 		.4byte	.LVL11
 1634 00b1 0400     		.2byte	0x4
 1635 00b3 F3       		.byte	0xf3
 1636 00b4 01       		.uleb128 0x1
 1637 00b5 51       		.byte	0x51
 1638 00b6 9F       		.byte	0x9f
 1639 00b7 B4000000 		.4byte	.LVL11
 1640 00bb C8000000 		.4byte	.LVL21
 1641 00bf 0100     		.2byte	0x1
 1642 00c1 51       		.byte	0x51
 1643 00c2 C8000000 		.4byte	.LVL21
 1644 00c6 00010000 		.4byte	.LFE59
 1645 00ca 0400     		.2byte	0x4
 1646 00cc F3       		.byte	0xf3
 1647 00cd 01       		.uleb128 0x1
 1648 00ce 51       		.byte	0x51
 1649 00cf 9F       		.byte	0x9f
 1650 00d0 00000000 		.4byte	0
 1651 00d4 00000000 		.4byte	0
 1652              	.LLST2:
 1653 00d8 06000000 		.4byte	.LVL1
 1654 00dc 08000000 		.4byte	.LVL2
 1655 00e0 0100     		.2byte	0x1
 1656 00e2 54       		.byte	0x54
 1657 00e3 00000000 		.4byte	0
 1658 00e7 00000000 		.4byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 55


 1659              	.LLST3:
 1660 00eb 56000000 		.4byte	.LVL4
 1661 00ef 8F000000 		.4byte	.LVL5-1
 1662 00f3 0100     		.2byte	0x1
 1663 00f5 50       		.byte	0x50
 1664 00f6 CC000000 		.4byte	.LVL22
 1665 00fa CE000000 		.4byte	.LVL23
 1666 00fe 0100     		.2byte	0x1
 1667 0100 50       		.byte	0x50
 1668 0101 D0000000 		.4byte	.LVL24
 1669 0105 D2000000 		.4byte	.LVL25
 1670 0109 0100     		.2byte	0x1
 1671 010b 50       		.byte	0x50
 1672 010c 00000000 		.4byte	0
 1673 0110 00000000 		.4byte	0
 1674              	.LLST4:
 1675 0114 90000000 		.4byte	.LVL5
 1676 0118 A4000000 		.4byte	.LVL7
 1677 011c 0100     		.2byte	0x1
 1678 011e 50       		.byte	0x50
 1679 011f AC000000 		.4byte	.LVL9
 1680 0123 AF000000 		.4byte	.LVL10-1
 1681 0127 0100     		.2byte	0x1
 1682 0129 50       		.byte	0x50
 1683 012a 00000000 		.4byte	0
 1684 012e 00000000 		.4byte	0
 1685              	.LLST5:
 1686 0132 A0000000 		.4byte	.LVL6
 1687 0136 A4000000 		.4byte	.LVL7
 1688 013a 0100     		.2byte	0x1
 1689 013c 50       		.byte	0x50
 1690 013d 00000000 		.4byte	0
 1691 0141 00000000 		.4byte	0
 1692              	.LLST6:
 1693 0145 AC000000 		.4byte	.LVL9
 1694 0149 AF000000 		.4byte	.LVL10-1
 1695 014d 0100     		.2byte	0x1
 1696 014f 50       		.byte	0x50
 1697 0150 00000000 		.4byte	0
 1698 0154 00000000 		.4byte	0
 1699              	.LLST7:
 1700 0158 D2000000 		.4byte	.LVL25
 1701 015c D6000000 		.4byte	.LVL26
 1702 0160 0100     		.2byte	0x1
 1703 0162 54       		.byte	0x54
 1704 0163 00000000 		.4byte	0
 1705 0167 00000000 		.4byte	0
 1706              		.section	.debug_aranges,"",%progbits
 1707 0000 1C000000 		.4byte	0x1c
 1708 0004 0200     		.2byte	0x2
 1709 0006 00000000 		.4byte	.Ldebug_info0
 1710 000a 04       		.byte	0x4
 1711 000b 00       		.byte	0
 1712 000c 0000     		.2byte	0
 1713 000e 0000     		.2byte	0
 1714 0010 00000000 		.4byte	.LFB59
 1715 0014 00010000 		.4byte	.LFE59-.LFB59
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 56


 1716 0018 00000000 		.4byte	0
 1717 001c 00000000 		.4byte	0
 1718              		.section	.debug_ranges,"",%progbits
 1719              	.Ldebug_ranges0:
 1720 0000 4E000000 		.4byte	.LBB63
 1721 0004 A8000000 		.4byte	.LBE63
 1722 0008 AC000000 		.4byte	.LBB76
 1723 000c B0000000 		.4byte	.LBE76
 1724 0010 00000000 		.4byte	0
 1725 0014 00000000 		.4byte	0
 1726 0018 8C000000 		.4byte	.LBB67
 1727 001c A8000000 		.4byte	.LBE67
 1728 0020 AC000000 		.4byte	.LBB74
 1729 0024 B0000000 		.4byte	.LBE74
 1730 0028 00000000 		.4byte	0
 1731 002c 00000000 		.4byte	0
 1732 0030 00000000 		.4byte	.LFB59
 1733 0034 00010000 		.4byte	.LFE59
 1734 0038 00000000 		.4byte	0
 1735 003c 00000000 		.4byte	0
 1736              		.section	.debug_line,"",%progbits
 1737              	.Ldebug_line0:
 1738 0000 F3010000 		.section	.debug_str,"MS",%progbits,1
 1738      02007501 
 1738      00000201 
 1738      FB0E0D00 
 1738      01010101 
 1739              	.LASF58:
 1740 0000 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1740      74645F65 
 1740      6E646379 
 1740      636C655F 
 1740      6E657874 
 1741              	.LASF23:
 1742 0019 4B65726E 		.ascii	"Kernel_Context\000"
 1742      656C5F43 
 1742      6F6E7465 
 1742      787400
 1743              	.LASF10:
 1744 0028 45455F55 		.ascii	"EE_UINT8\000"
 1744      494E5438 
 1744      00
 1745              	.LASF67:
 1746 0031 45455F72 		.ascii	"EE_rq_bitmask\000"
 1746      715F6269 
 1746      746D6173 
 1746      6B00
 1747              	.LASF15:
 1748 003f 45455F55 		.ascii	"EE_UREG\000"
 1748      52454700 
 1749              	.LASF79:
 1750 0047 45455F72 		.ascii	"EE_rq_insert\000"
 1750      715F696E 
 1750      73657274 
 1750      00
 1751              	.LASF21:
 1752 0054 4576656E 		.ascii	"EventMaskType\000"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 57


 1752      744D6173 
 1752      6B547970 
 1752      6500
 1753              	.LASF70:
 1754 0062 45455F74 		.ascii	"EE_th_waswaiting\000"
 1754      685F7761 
 1754      73776169 
 1754      74696E67 
 1754      00
 1755              	.LASF2:
 1756 0073 73686F72 		.ascii	"short int\000"
 1756      7420696E 
 1756      7400
 1757              	.LASF22:
 1758 007d 53746174 		.ascii	"StatusType\000"
 1758      75735479 
 1758      706500
 1759              	.LASF16:
 1760 0088 45455F46 		.ascii	"EE_FREG\000"
 1760      52454700 
 1761              	.LASF14:
 1762 0090 45455F55 		.ascii	"EE_UINT32\000"
 1762      494E5433 
 1762      3200
 1763              	.LASF60:
 1764 009a 45455F74 		.ascii	"EE_th_ready_prio\000"
 1764      685F7265 
 1764      6164795F 
 1764      7072696F 
 1764      00
 1765              	.LASF25:
 1766 00ab 49535232 		.ascii	"ISR2_Context\000"
 1766      5F436F6E 
 1766      74657874 
 1766      00
 1767              	.LASF18:
 1768 00b8 45455F54 		.ascii	"EE_TID\000"
 1768      494400
 1769              	.LASF34:
 1770 00bf 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 1770      59504543 
 1770      4F4E5445 
 1770      585400
 1771              	.LASF51:
 1772 00ce 69737461 		.ascii	"istat\000"
 1772      7400
 1773              	.LASF57:
 1774 00d4 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1774      52515F6E 
 1774      65737469 
 1774      6E675F6C 
 1774      6576656C 
 1775              	.LASF26:
 1776 00e9 4572726F 		.ascii	"ErrorHook_Context\000"
 1776      72486F6F 
 1776      6B5F436F 
 1776      6E746578 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 58


 1776      7400
 1777              	.LASF44:
 1778 00fb 45455F4F 		.ascii	"EE_ORTI_set_service_in\000"
 1778      5254495F 
 1778      7365745F 
 1778      73657276 
 1778      6963655F 
 1779              	.LASF73:
 1780 0112 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1780      6F5F4952 
 1780      515F7375 
 1780      7370656E 
 1780      645F7374 
 1781              	.LASF53:
 1782 012b 45455F6F 		.ascii	"EE_oo_run_next_task\000"
 1782      6F5F7275 
 1782      6E5F6E65 
 1782      78745F74 
 1782      61736B00 
 1783              	.LASF33:
 1784 013f 49646C65 		.ascii	"Idle_Context\000"
 1784      5F436F6E 
 1784      74657874 
 1784      00
 1785              	.LASF6:
 1786 014c 6C6F6E67 		.ascii	"long long int\000"
 1786      206C6F6E 
 1786      6720696E 
 1786      7400
 1787              	.LASF11:
 1788 015a 45455F49 		.ascii	"EE_INT8\000"
 1788      4E543800 
 1789              	.LASF19:
 1790 0162 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 1790      5950455F 
 1790      52515F4D 
 1790      41534B00 
 1791              	.LASF4:
 1792 0172 6C6F6E67 		.ascii	"long int\000"
 1792      20696E74 
 1792      00
 1793              	.LASF36:
 1794 017b 45455F4F 		.ascii	"EE_ORTI_set_service\000"
 1794      5254495F 
 1794      7365745F 
 1794      73657276 
 1794      69636500 
 1795              	.LASF71:
 1796 018f 45455F74 		.ascii	"EE_th_is_extended\000"
 1796      685F6973 
 1796      5F657874 
 1796      656E6465 
 1796      6400
 1797              	.LASF37:
 1798 01a1 45455F61 		.ascii	"EE_as_set_execution_context\000"
 1798      735F7365 
 1798      745F6578 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 59


 1798      65637574 
 1798      696F6E5F 
 1799              	.LASF39:
 1800 01bd 45455F68 		.ascii	"EE_hal_ready2stacked\000"
 1800      616C5F72 
 1800      65616479 
 1800      32737461 
 1800      636B6564 
 1801              	.LASF54:
 1802 01d2 5461736B 		.ascii	"TaskID\000"
 1802      494400
 1803              	.LASF66:
 1804 01d9 45455F73 		.ascii	"EE_sys_ceiling\000"
 1804      79735F63 
 1804      65696C69 
 1804      6E6700
 1805              	.LASF77:
 1806 01e8 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 1806      71327374 
 1806      6B5F6578 
 1806      6368616E 
 1806      676500
 1807              	.LASF78:
 1808 01fb 45455F72 		.ascii	"EE_rq_queryfirst\000"
 1808      715F7175 
 1808      65727966 
 1808      69727374 
 1808      00
 1809              	.LASF9:
 1810 020c 6C6F6E67 		.ascii	"long double\000"
 1810      20646F75 
 1810      626C6500 
 1811              	.LASF76:
 1812 0218 45455F63 		.ascii	"EE_cortex_mx_change_context\000"
 1812      6F727465 
 1812      785F6D78 
 1812      5F636861 
 1812      6E67655F 
 1813              	.LASF20:
 1814 0234 5461736B 		.ascii	"TaskType\000"
 1814      54797065 
 1814      00
 1815              	.LASF1:
 1816 023d 756E7369 		.ascii	"unsigned char\000"
 1816      676E6564 
 1816      20636861 
 1816      7200
 1817              	.LASF48:
 1818 024b 45455F68 		.ascii	"EE_hal_end_nested_primitive\000"
 1818      616C5F65 
 1818      6E645F6E 
 1818      65737465 
 1818      645F7072 
 1819              	.LASF83:
 1820 0267 45455F63 		.ascii	"EE_cortex_mx_suspendIRQ\000"
 1820      6F727465 
 1820      785F6D78 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 60


 1820      5F737573 
 1820      70656E64 
 1821              	.LASF38:
 1822 027f 45455F68 		.ascii	"EE_hal_stkchange\000"
 1822      616C5F73 
 1822      746B6368 
 1822      616E6765 
 1822      00
 1823              	.LASF0:
 1824 0290 7369676E 		.ascii	"signed char\000"
 1824      65642063 
 1824      68617200 
 1825              	.LASF55:
 1826 029c 4D61736B 		.ascii	"Mask\000"
 1826      00
 1827              	.LASF7:
 1828 02a1 6C6F6E67 		.ascii	"long long unsigned int\000"
 1828      206C6F6E 
 1828      6720756E 
 1828      7369676E 
 1828      65642069 
 1829              	.LASF43:
 1830 02b8 45455F61 		.ascii	"EE_as_monitoring_the_stack\000"
 1830      735F6D6F 
 1830      6E69746F 
 1830      72696E67 
 1830      5F746865 
 1831              	.LASF45:
 1832 02d3 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1832      746B5F71 
 1832      75657279 
 1832      66697273 
 1832      7400
 1833              	.LASF8:
 1834 02e5 756E7369 		.ascii	"unsigned int\000"
 1834      676E6564 
 1834      20696E74 
 1834      00
 1835              	.LASF62:
 1836 02f2 45455F74 		.ascii	"EE_th_status\000"
 1836      685F7374 
 1836      61747573 
 1836      00
 1837              	.LASF64:
 1838 02ff 45455F74 		.ascii	"EE_th_rnact\000"
 1838      685F726E 
 1838      61637400 
 1839              	.LASF13:
 1840 030b 45455F49 		.ascii	"EE_INT32\000"
 1840      4E543332 
 1840      00
 1841              	.LASF41:
 1842 0314 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 1842      6F5F6361 
 1842      6C6C5F50 
 1842      6F737454 
 1842      61736B48 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 61


 1843              	.LASF24:
 1844 032c 5441534B 		.ascii	"TASK_Context\000"
 1844      5F436F6E 
 1844      74657874 
 1844      00
 1845              	.LASF3:
 1846 0339 73686F72 		.ascii	"short unsigned int\000"
 1846      7420756E 
 1846      7369676E 
 1846      65642069 
 1846      6E7400
 1847              	.LASF31:
 1848 034c 53687574 		.ascii	"ShutdownHook_Context\000"
 1848      646F776E 
 1848      486F6F6B 
 1848      5F436F6E 
 1848      74657874 
 1849              	.LASF12:
 1850 0361 45455F55 		.ascii	"EE_UINT16\000"
 1850      494E5431 
 1850      3600
 1851              	.LASF32:
 1852 036b 416C6172 		.ascii	"AlarmCallback_Context\000"
 1852      6D43616C 
 1852      6C626163 
 1852      6B5F436F 
 1852      6E746578 
 1853              	.LASF42:
 1854 0381 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 1854      5254495F 
 1854      7365745F 
 1854      74685F65 
 1854      715F6469 
 1855              	.LASF81:
 1856 03a1 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_evset.c\000"
 1856      72617465 
 1856      645F536F 
 1856      75726365 
 1856      5C50536F 
 1857              	.LASF35:
 1858 03cd 45455F63 		.ascii	"EE_cortex_mx_resumeIRQ\000"
 1858      6F727465 
 1858      785F6D78 
 1858      5F726573 
 1858      756D6549 
 1859              	.LASF74:
 1860 03e4 45455F41 		.ascii	"EE_ApplicationMode\000"
 1860      70706C69 
 1860      63617469 
 1860      6F6E4D6F 
 1860      646500
 1861              	.LASF5:
 1862 03f7 6C6F6E67 		.ascii	"long unsigned int\000"
 1862      20756E73 
 1862      69676E65 
 1862      6420696E 
 1862      7400
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 62


 1863              	.LASF68:
 1864 0409 45455F74 		.ascii	"EE_th_event_active\000"
 1864      685F6576 
 1864      656E745F 
 1864      61637469 
 1864      766500
 1865              	.LASF17:
 1866 041c 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1866      59504542 
 1866      4F4F4C00 
 1867              	.LASF65:
 1868 0428 45455F73 		.ascii	"EE_stkfirst\000"
 1868      746B6669 
 1868      72737400 
 1869              	.LASF27:
 1870 0434 50726F74 		.ascii	"ProtectionHook_Context\000"
 1870      65637469 
 1870      6F6E486F 
 1870      6F6B5F43 
 1870      6F6E7465 
 1871              	.LASF47:
 1872 044b 45455F68 		.ascii	"EE_hal_get_IRQ_nesting_level\000"
 1872      616C5F67 
 1872      65745F49 
 1872      52515F6E 
 1872      65737469 
 1873              	.LASF61:
 1874 0468 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1874      685F6469 
 1874      73706174 
 1874      63685F70 
 1874      72696F00 
 1875              	.LASF28:
 1876 047c 50726554 		.ascii	"PreTaskHook_Context\000"
 1876      61736B48 
 1876      6F6F6B5F 
 1876      436F6E74 
 1876      65787400 
 1877              	.LASF50:
 1878 0490 45455F6F 		.ascii	"EE_oo_preemption_point\000"
 1878      6F5F7072 
 1878      65656D70 
 1878      74696F6E 
 1878      5F706F69 
 1879              	.LASF69:
 1880 04a7 45455F74 		.ascii	"EE_th_event_waitmask\000"
 1880      685F6576 
 1880      656E745F 
 1880      77616974 
 1880      6D61736B 
 1881              	.LASF29:
 1882 04bc 506F7374 		.ascii	"PostTaskHook_Context\000"
 1882      5461736B 
 1882      486F6F6B 
 1882      5F436F6E 
 1882      74657874 
 1883              	.LASF59:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 63


 1884 04d1 73697A65 		.ascii	"sizetype\000"
 1884      74797065 
 1884      00
 1885              	.LASF75:
 1886 04da 45455F72 		.ascii	"EE_rq_lookup\000"
 1886      715F6C6F 
 1886      6F6B7570 
 1886      00
 1887              	.LASF52:
 1888 04e7 63757272 		.ascii	"current\000"
 1888      656E7400 
 1889              	.LASF56:
 1890 04ef 666C6167 		.ascii	"flag\000"
 1890      00
 1891              	.LASF84:
 1892 04f4 45455F6F 		.ascii	"EE_oo_SetEvent\000"
 1892      6F5F5365 
 1892      74457665 
 1892      6E7400
 1893              	.LASF63:
 1894 0503 45455F74 		.ascii	"EE_th_next\000"
 1894      685F6E65 
 1894      787400
 1895              	.LASF80:
 1896 050e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1896      43313120 
 1896      352E342E 
 1896      31203230 
 1896      31363036 
 1897 0541 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1897      20726576 
 1897      6973696F 
 1897      6E203233 
 1897      37373135 
 1898 0574 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1898      66756E63 
 1898      74696F6E 
 1898      2D736563 
 1898      74696F6E 
 1899              	.LASF72:
 1900 059c 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1900      6F5F4952 
 1900      515F6469 
 1900      7361626C 
 1900      655F636F 
 1901              	.LASF40:
 1902 05b4 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 1902      6F5F6361 
 1902      6C6C5F50 
 1902      72655461 
 1902      736B486F 
 1903              	.LASF30:
 1904 05cb 53746172 		.ascii	"StartupHook_Context\000"
 1904      74757048 
 1904      6F6F6B5F 
 1904      436F6E74 
 1904      65787400 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccCvb66a.s 			page 64


 1905              	.LASF49:
 1906 05df 45455F4F 		.ascii	"EE_ORTI_set_service_out\000"
 1906      5254495F 
 1906      7365745F 
 1906      73657276 
 1906      6963655F 
 1907              	.LASF46:
 1908 05f7 45455F68 		.ascii	"EE_hal_begin_nested_primitive\000"
 1908      616C5F62 
 1908      6567696E 
 1908      5F6E6573 
 1908      7465645F 
 1909              	.LASF82:
 1910 0615 433A5C55 		.ascii	"C:\\Users\\zakis\\Documents\\EOS_Assignment_Two\\JS"
 1910      73657273 
 1910      5C7A616B 
 1910      69735C44 
 1910      6F63756D 
 1911 0643 4F4E5F50 		.ascii	"ON_Parser\\EOS_Assignment_Two\\JSON_Parser.cydsn\000"
 1911      61727365 
 1911      725C454F 
 1911      535F4173 
 1911      7369676E 
 1912              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
