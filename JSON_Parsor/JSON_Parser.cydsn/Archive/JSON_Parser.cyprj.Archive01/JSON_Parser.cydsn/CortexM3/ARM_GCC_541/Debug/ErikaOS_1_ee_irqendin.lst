ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_irqendin.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_IRQ_run_next_task,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	EE_IRQ_run_next_task, %function
  24              	EE_IRQ_run_next_task:
  25              	.LFB60:
  26              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_irqendin.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 2


  32:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Author: 2002-2004 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * CVS: $Id: ee_irqendin.c,v 1.2 2006/01/24 10:21:14 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #include "ErikaOS_1_ee_tracing.h"
  52:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  53:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #include "ErikaOS_1_ee_internal.inc"
  54:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  56:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #include "trcKernelPort.h"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif
  58:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
  59:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* Index used to give ISR2 Temporary TID value and to access at
  60:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    EE_isr2_nesting_level array */
  61:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** EE_UREG EE_isr2_index = EE_UREG_MINUS1;
  62:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  63:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
  64:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** EE_TID EE_oo_assign_TID_to_ISR2( void ) {
  65:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   EE_UREG const actual_nesting = EE_hal_get_IRQ_nesting_level();
  66:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  67:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_isr2_index == EE_UREG_MINUS1 ) {
  68:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_isr2_index = 0U;
  69:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_isr2_nesting_level[0] = actual_nesting;
  70:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else if ( EE_isr2_nesting_level[EE_isr2_index] < actual_nesting ) {
  71:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     ++EE_isr2_index;
  72:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_isr2_nesting_level[EE_isr2_index] = actual_nesting;
  73:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else {
  74:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Nothing to do added just for MISRA 2004 Required Rule 14.10 */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
  76:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   return (EE_MAX_TASK + (EE_TID)EE_isr2_index);
  78:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
  79:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  80:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* [OS369]: If a Category 2 OsIsr calls GetResource() and ends (returns)
  81:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     without calling the corresponding ReleaseResource(), the Operating System
  82:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     shall perform the ReleaseResource() call and shall call the ErrorHook()
  83:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     (if configured) with the status E_OS_RESOURCE. */
  84:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_release_all_items( void );
  85:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_release_all_items( void ) {
  86:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* Check if the index is valid -> at least one ISR2 got a resource */
  87:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_isr2_index != EE_UREG_MINUS1 ) {
  88:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* N.B This method MUST be called at the end of IRQ post-stub but BEFORE
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 3


  89:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****        decrementing nesting. */
  90:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_UREG const actual_nesting = EE_hal_get_IRQ_nesting_level();
  91:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  92:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Check if this is the right level where do clean-up */
  93:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     if ( EE_isr2_nesting_level[EE_isr2_index] == actual_nesting ) {
  94:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_TID current_isr2_tid = (EE_TID)EE_isr2_index + EE_MAX_TASK;
  95:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #ifdef __OO_ISR2_RESOURCES__
  96:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* OS369 */
  97:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       if ( EE_oo_release_all_resources(current_isr2_tid) != EE_UREG_MINUS1 ) {
  98:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_ORTI_set_lasterror(E_OS_RESOURCE);
  99:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_oo_notify_error_service(OSId_ISR2Body, E_OS_RESOURCE);
 100:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       }
 101:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* __OO_ISR2_RESOURCES__ */
 102:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #ifdef EE_AS_USER_SPINLOCKS__
 103:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* Force Spinlock Release */
 104:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       if ( EE_as_release_all_spinlocks(current_isr2_tid) !=
 105:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         INVALID_SPINLOCK )
 106:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       {
 107:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_ORTI_set_lasterror(E_OS_SPINLOCK);
 108:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_oo_notify_error_service(OSId_ISR2Body, E_OS_SPINLOCK);
 109:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       }
 110:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* EE_AS_USER_SPINLOCKS__ */
 111:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* Decrement ISR2 index (from 0U to EE_UREG_MINUS1 is handled by
 113:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****          unsigned wraparound) */
 114:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       --EE_isr2_index;
 115:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     }
 116:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 117:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 118:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #else /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 119:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** __INLINE__ void  EE_IRQ_release_all_items( void );
 120:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** __INLINE__ void  EE_IRQ_release_all_items( void ) {}
 121:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 122:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 123:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #ifndef __PRIVATE_IRQ_END_INSTANCE__
 124:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 125:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_run_next_task( void );
 126:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 128:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_run_next_task( void )
 129:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** {
  27              		.loc 1 129 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 130:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   register EE_TID tnext;
 131:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   tnext = EE_rq2stk_exchange();
  35              		.loc 1 131 0
  36 0002 FFF7FEFF 		bl	EE_rq2stk_exchange
  37              	.LVL0:
 132:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_th_waswaiting[tnext] ) {
  38              		.loc 1 132 0
  39 0006 084B     		ldr	r3, .L5
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 4


  40 0008 53F82030 		ldr	r3, [r3, r0, lsl #2]
  41 000c 43B1     		cbz	r3, .L2
 133:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_th_waswaiting[tnext] = EE_FALSE;
  42              		.loc 1 133 0
  43 000e 0022     		movs	r2, #0
  44 0010 054B     		ldr	r3, .L5
  45 0012 43F82020 		str	r2, [r3, r0, lsl #2]
  46              	.LVL1:
  47              	.LBB26:
  48              	.LBB27:
  49              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 5


  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 6


 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 7


 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_endcycle_ready(EE_TID tid)
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_std_endcycle_next_tid = tid;
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_endcycle_stacked(EE_TID tid)
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_std_endcycle_next_tid = EE_std_mark_tid_stacked(tid);
  50              		.loc 2 179 0
  51 0016 40F00040 		orr	r0, r0, #-2147483648
  52              	.LVL2:
  53 001a 044B     		ldr	r3, .L5+4
  54 001c 1860     		str	r0, [r3]
  55 001e 08BD     		pop	{r3, pc}
  56              	.LVL3:
  57              	.L2:
  58              	.LBE27:
  59              	.LBE26:
  60              	.LBB28:
  61              	.LBB29:
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
  62              		.loc 2 173 0
  63 0020 024B     		ldr	r3, .L5+4
  64 0022 1860     		str	r0, [r3]
  65 0024 08BD     		pop	{r3, pc}
  66              	.L6:
  67 0026 00BF     		.align	2
  68              	.L5:
  69 0028 00000000 		.word	EE_th_waswaiting
  70 002c 00000000 		.word	EE_std_endcycle_next_tid
  71              	.LBE29:
  72              	.LBE28:
  73              		.cfi_endproc
  74              	.LFE60:
  75              		.size	EE_IRQ_run_next_task, .-EE_IRQ_run_next_task
  76              		.section	.text.EE_IRQ_end_instance,"ax",%progbits
  77              		.align	2
  78              		.global	EE_IRQ_end_instance
  79              		.thumb
  80              		.thumb_func
  81              		.type	EE_IRQ_end_instance, %function
  82              	EE_IRQ_end_instance:
  83              	.LFB61:
 134:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
 135:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   traceMOVED_TASK_TO_READY_STATE(EE_stk_queryfirst());
 136:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   traceTASK_SWITCHED_IN(EE_stk_queryfirst(), EE_th_ready_prio[EE_stk_queryfirst()]);
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 8


 137:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif
 138:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_oo_call_PreTaskHook();
 139:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_hal_IRQ_stacked(tnext);
 140:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else {
 141:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_hal_IRQ_ready(tnext);
 142:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 143:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 144:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #else /* __OO_ECC1__ || __OO_ECC2__ */
 145:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_run_next_task( void )
 146:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   EE_hal_IRQ_ready(EE_rq2stk_exchange());
 148:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 149:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
 150:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 151:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* This primitive shall be atomic.
 152:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    This primitive shall be inserted as the last function in an IRQ handler.
 153:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    If the HAL allow IRQ nesting the C_end_instance should work as follows:
 154:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    - it must implement the preemption test only if it is the last IRQ on the
 155:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****      stack
 156:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    - if there are other interrupts on the stack the IRQ end_instance should do
 157:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****      nothing
 158:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** */
 159:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** void EE_IRQ_end_instance( void )
 160:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** {
  84              		.loc 1 160 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88 0000 10B5     		push	{r4, lr}
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 4, -8
  91              		.cfi_offset 14, -4
 161:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   register EE_TID rqfirst, current;
 162:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 163:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   rqfirst = EE_rq_queryfirst();
  92              		.loc 1 163 0
  93 0002 FFF7FEFF 		bl	EE_rq_queryfirst
  94              	.LVL4:
  95              	.LBB30:
  96              	.LBB31:
  97              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 9


  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 10


  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 11


 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 12


 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
  98              		.loc 3 240 0
  99 0006 124B     		ldr	r3, .L12
 100 0008 1B68     		ldr	r3, [r3]
 101              	.LBE31:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 13


 102              	.LBE30:
 164:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   current = EE_stk_queryfirst();
 165:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 166:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( (rqfirst != EE_NIL) && (EE_sys_ceiling < EE_th_ready_prio[rqfirst]) ) {
 103              		.loc 1 166 0
 104 000a B0F1FF3F 		cmp	r0, #-1
 105 000e 1AD0     		beq	.L8
 106              		.loc 1 166 0 is_stmt 0 discriminator 1
 107 0010 104A     		ldr	r2, .L12+4
 108 0012 52F82010 		ldr	r1, [r2, r0, lsl #2]
 109 0016 104A     		ldr	r2, .L12+8
 110 0018 1268     		ldr	r2, [r2]
 111 001a 9142     		cmp	r1, r2
 112 001c 13D9     		bls	.L8
 167:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* We have to schedule a READY thread */
 168:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 169:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     if ( current != EE_NIL ) {
 113              		.loc 1 169 0 is_stmt 1
 114 001e B3F1FF3F 		cmp	r3, #-1
 115 0022 03D0     		beq	.L9
 170:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* There is a post task hook only if a TASK that was RUNNING */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_oo_call_PostTaskHook();
 172:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* The RUNNING TASK is now preempted-> READY status + still in stacked
 173:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****          queue */
 174:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_th_status[current] = READY;
 116              		.loc 1 174 0
 117 0024 0224     		movs	r4, #2
 118 0026 0D49     		ldr	r1, .L12+12
 119 0028 41F82340 		str	r4, [r1, r3, lsl #2]
 120              	.L9:
 175:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     }
 176:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 177:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Another TASK is put into the RUNNING state */
 178:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_th_status[rqfirst] = RUNNING;
 121              		.loc 1 178 0
 122 002c 0021     		movs	r1, #0
 123 002e 0B4B     		ldr	r3, .L12+12
 124 0030 43F82010 		str	r1, [r3, r0, lsl #2]
 179:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_sys_ceiling |= EE_th_dispatch_prio[rqfirst];
 125              		.loc 1 180 0
 126 0034 0A4B     		ldr	r3, .L12+16
 127 0036 53F82030 		ldr	r3, [r3, r0, lsl #2]
 128 003a 1A43     		orrs	r2, r2, r3
 129 003c 064B     		ldr	r3, .L12+8
 130 003e 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 182:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_ORTI_set_th_eq_dispatch_prio(rqfirst);
 183:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 184:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* "Press TP start for the first time" for this new activation or realese
 185:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         from wait of the TASK */
 186:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_as_tp_active_start_on_TASK_stacking(rqfirst);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Set the next running TASK, it doesn't directly RUN it */
 188:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_IRQ_run_next_task();
 131              		.loc 1 188 0
 132 0040 FFF7FEFF 		bl	EE_IRQ_run_next_task
 133              	.LVL5:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 14


 134 0044 10BD     		pop	{r4, pc}
 135              	.LVL6:
 136              	.L8:
 137              	.LBB32:
 138              	.LBB33:
 139              		.loc 2 179 0
 140 0046 43F00043 		orr	r3, r3, #-2147483648
 141              	.LVL7:
 142 004a 064A     		ldr	r2, .L12+20
 143 004c 1360     		str	r3, [r2]
 144 004e 10BD     		pop	{r4, pc}
 145              	.L13:
 146              		.align	2
 147              	.L12:
 148 0050 00000000 		.word	EE_stkfirst
 149 0054 00000000 		.word	EE_th_ready_prio
 150 0058 00000000 		.word	EE_sys_ceiling
 151 005c 00000000 		.word	EE_th_status
 152 0060 00000000 		.word	EE_th_dispatch_prio
 153 0064 00000000 		.word	EE_std_endcycle_next_tid
 154              	.LBE33:
 155              	.LBE32:
 156              		.cfi_endproc
 157              	.LFE61:
 158              		.size	EE_IRQ_end_instance, .-EE_IRQ_end_instance
 159              		.section	.text.EE_IRQ_end_post_stub,"ax",%progbits
 160              		.align	2
 161              		.global	EE_IRQ_end_post_stub
 162              		.thumb
 163              		.thumb_func
 164              		.type	EE_IRQ_end_post_stub, %function
 165              	EE_IRQ_end_post_stub:
 166              	.LFB62:
 189:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else {
 190:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     if ( current == EE_NIL ) {
 191:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* We are switching back to the Idle loop */
 192:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_set_execution_context( Idle_Context );
 193:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_tp_active_start_idle();
 194:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     } else {
 195:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* We are switching back to a preempted TASK */
 196:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_set_execution_context( TASK_Context );
 197:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* Enable the Task Timing Protection Set */
 198:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_tp_active_set_from_TASK(current);
 199:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     }
 200:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Set the Context Switch up, it doesn't directly switch */
 201:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_hal_IRQ_stacked(current);
 202:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 203:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 204:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 205:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* This primitive shall be atomic.
 206:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    This primitive shall be inserted as the last function in an IRQ post-stub.
 207:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    This primitive do needed clean-up as resetting kernel interrupt nested
 208:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    counter and release gotten resources if application forget to do that as
 209:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    specified by Autosar standard.
 210:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** */
 211:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** void EE_IRQ_end_post_stub( void ) {
 167              		.loc 1 211 0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 15


 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LBB34:
 173              	.LBB35:
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 16


 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 17


 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 18


 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 174              		.loc 3 422 0
 175 0000 034B     		ldr	r3, .L16
 176 0002 1B68     		ldr	r3, [r3]
 177              	.LBE35:
 178              	.LBE34:
 212:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* [OS368]: If a Category 2 OsIsr calls DisableAllInterupts()/
 213:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       SuspendAllInterrupts()/SuspendOSInterrupts() and ends (returns)
 214:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       without calling the corresponding EnableAllInterrupts()/
 215:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       ResumeAllInterrupts() / ResumeOSInterrupts(),
 216:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       the Operating System shall perform the missing service and shall call
 217:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       the ErrorHook() (if configured) with the status E_OS_DISABLEDINT. */
 218:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* Only check and reset ISR flags an counters because ISR re-enabling is done
 220:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****      in CPU layer */
 221:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_oo_check_disableint_error() )
 179              		.loc 1 221 0
 180 0004 13B1     		cbz	r3, .L14
 222:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   {
 223:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_ORTI_set_lasterror(E_OS_DISABLEDINT);
 224:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_oo_notify_error_service(OSId_ISR2Body, E_OS_DISABLEDINT);
 225:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Reset ISRs counter */
 226:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_oo_IRQ_disable_count = 0U;
 181              		.loc 1 226 0
 182 0006 0022     		movs	r2, #0
 183 0008 014B     		ldr	r3, .L16
 184 000a 1A60     		str	r2, [r3]
 185              	.L14:
 186 000c 7047     		bx	lr
 187              	.L17:
 188 000e 00BF     		.align	2
 189              	.L16:
 190 0010 00000000 		.word	EE_oo_IRQ_disable_count
 191              		.cfi_endproc
 192              	.LFE62:
 193              		.size	EE_IRQ_end_post_stub, .-EE_IRQ_end_post_stub
 194              		.text
 195              	.Letext0:
 196              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 197              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
 198              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 19


 199              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
 200              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 201              		.section	.debug_info,"",%progbits
 202              	.Ldebug_info0:
 203 0000 FB030000 		.4byte	0x3fb
 204 0004 0400     		.2byte	0x4
 205 0006 00000000 		.4byte	.Ldebug_abbrev0
 206 000a 04       		.byte	0x4
 207 000b 01       		.uleb128 0x1
 208 000c 38040000 		.4byte	.LASF63
 209 0010 0C       		.byte	0xc
 210 0011 31020000 		.4byte	.LASF64
 211 0015 F2040000 		.4byte	.LASF65
 212 0019 00000000 		.4byte	.Ldebug_ranges0+0
 213 001d 00000000 		.4byte	0
 214 0021 00000000 		.4byte	.Ldebug_line0
 215 0025 02       		.uleb128 0x2
 216 0026 01       		.byte	0x1
 217 0027 06       		.byte	0x6
 218 0028 6E020000 		.4byte	.LASF0
 219 002c 02       		.uleb128 0x2
 220 002d 01       		.byte	0x1
 221 002e 08       		.byte	0x8
 222 002f 60020000 		.4byte	.LASF1
 223 0033 02       		.uleb128 0x2
 224 0034 02       		.byte	0x2
 225 0035 05       		.byte	0x5
 226 0036 97000000 		.4byte	.LASF2
 227 003a 02       		.uleb128 0x2
 228 003b 02       		.byte	0x2
 229 003c 07       		.byte	0x7
 230 003d 05030000 		.4byte	.LASF3
 231 0041 02       		.uleb128 0x2
 232 0042 04       		.byte	0x4
 233 0043 05       		.byte	0x5
 234 0044 A8010000 		.4byte	.LASF4
 235 0048 02       		.uleb128 0x2
 236 0049 04       		.byte	0x4
 237 004a 07       		.byte	0x7
 238 004b 91030000 		.4byte	.LASF5
 239 004f 02       		.uleb128 0x2
 240 0050 08       		.byte	0x8
 241 0051 05       		.byte	0x5
 242 0052 82010000 		.4byte	.LASF6
 243 0056 02       		.uleb128 0x2
 244 0057 08       		.byte	0x8
 245 0058 07       		.byte	0x7
 246 0059 7A020000 		.4byte	.LASF7
 247 005d 03       		.uleb128 0x3
 248 005e 04       		.byte	0x4
 249 005f 05       		.byte	0x5
 250 0060 696E7400 		.ascii	"int\000"
 251 0064 02       		.uleb128 0x2
 252 0065 04       		.byte	0x4
 253 0066 07       		.byte	0x7
 254 0067 A9020000 		.4byte	.LASF8
 255 006b 02       		.uleb128 0x2
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 20


 256 006c 08       		.byte	0x8
 257 006d 04       		.byte	0x4
 258 006e 25020000 		.4byte	.LASF9
 259 0072 04       		.uleb128 0x4
 260 0073 90010000 		.4byte	.LASF10
 261 0077 04       		.byte	0x4
 262 0078 3F       		.byte	0x3f
 263 0079 25000000 		.4byte	0x25
 264 007d 04       		.uleb128 0x4
 265 007e 2D030000 		.4byte	.LASF11
 266 0082 04       		.byte	0x4
 267 0083 52       		.byte	0x52
 268 0084 3A000000 		.4byte	0x3a
 269 0088 04       		.uleb128 0x4
 270 0089 D7020000 		.4byte	.LASF12
 271 008d 04       		.byte	0x4
 272 008e 53       		.byte	0x53
 273 008f 5D000000 		.4byte	0x5d
 274 0093 04       		.uleb128 0x4
 275 0094 BB000000 		.4byte	.LASF13
 276 0098 04       		.byte	0x4
 277 0099 54       		.byte	0x54
 278 009a 64000000 		.4byte	0x64
 279 009e 04       		.uleb128 0x4
 280 009f 1D000000 		.4byte	.LASF14
 281 00a3 05       		.byte	0x5
 282 00a4 4D       		.byte	0x4d
 283 00a5 93000000 		.4byte	0x93
 284 00a9 04       		.uleb128 0x4
 285 00aa B3000000 		.4byte	.LASF15
 286 00ae 05       		.byte	0x5
 287 00af 4F       		.byte	0x4f
 288 00b0 93000000 		.4byte	0x93
 289 00b4 04       		.uleb128 0x4
 290 00b5 A3030000 		.4byte	.LASF16
 291 00b9 05       		.byte	0x5
 292 00ba 54       		.byte	0x54
 293 00bb 9E000000 		.4byte	0x9e
 294 00bf 04       		.uleb128 0x4
 295 00c0 F8000000 		.4byte	.LASF17
 296 00c4 05       		.byte	0x5
 297 00c5 78       		.byte	0x78
 298 00c6 88000000 		.4byte	0x88
 299 00ca 05       		.uleb128 0x5
 300 00cb 98010000 		.4byte	.LASF18
 301 00cf 06       		.byte	0x6
 302 00d0 1101     		.2byte	0x111
 303 00d2 7D000000 		.4byte	0x7d
 304 00d6 06       		.uleb128 0x6
 305 00d7 01       		.byte	0x1
 306 00d8 2C000000 		.4byte	0x2c
 307 00dc 06       		.byte	0x6
 308 00dd 5904     		.2byte	0x459
 309 00df 26010000 		.4byte	0x126
 310 00e3 07       		.uleb128 0x7
 311 00e4 00000000 		.4byte	.LASF19
 312 00e8 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 21


 313 00e9 07       		.uleb128 0x7
 314 00ea F8020000 		.4byte	.LASF20
 315 00ee 01       		.byte	0x1
 316 00ef 07       		.uleb128 0x7
 317 00f0 EB000000 		.4byte	.LASF21
 318 00f4 02       		.byte	0x2
 319 00f5 07       		.uleb128 0x7
 320 00f6 A1000000 		.4byte	.LASF22
 321 00fa 03       		.byte	0x3
 322 00fb 07       		.uleb128 0x7
 323 00fc BB030000 		.4byte	.LASF23
 324 0100 04       		.byte	0x4
 325 0101 07       		.uleb128 0x7
 326 0102 D2030000 		.4byte	.LASF24
 327 0106 05       		.byte	0x5
 328 0107 07       		.uleb128 0x7
 329 0108 E6030000 		.4byte	.LASF25
 330 010c 06       		.byte	0x6
 331 010d 07       		.uleb128 0x7
 332 010e DE040000 		.4byte	.LASF26
 333 0112 07       		.byte	0x7
 334 0113 07       		.uleb128 0x7
 335 0114 18030000 		.4byte	.LASF27
 336 0118 08       		.byte	0x8
 337 0119 07       		.uleb128 0x7
 338 011a 37030000 		.4byte	.LASF28
 339 011e 09       		.byte	0x9
 340 011f 07       		.uleb128 0x7
 341 0120 5D010000 		.4byte	.LASF29
 342 0124 0A       		.byte	0xa
 343 0125 00       		.byte	0
 344 0126 05       		.uleb128 0x5
 345 0127 13010000 		.4byte	.LASF30
 346 012b 06       		.byte	0x6
 347 012c 6504     		.2byte	0x465
 348 012e D6000000 		.4byte	0xd6
 349 0132 08       		.uleb128 0x8
 350 0133 CA010000 		.4byte	.LASF31
 351 0137 06       		.byte	0x6
 352 0138 8404     		.2byte	0x484
 353 013a 03       		.byte	0x3
 354 013b 4C010000 		.4byte	0x14c
 355 013f 09       		.uleb128 0x9
 356 0140 63747800 		.ascii	"ctx\000"
 357 0144 06       		.byte	0x6
 358 0145 8504     		.2byte	0x485
 359 0147 26010000 		.4byte	0x126
 360 014b 00       		.byte	0
 361 014c 0A       		.uleb128 0xa
 362 014d 6A010000 		.4byte	.LASF32
 363 0151 02       		.byte	0x2
 364 0152 B1       		.byte	0xb1
 365 0153 03       		.byte	0x3
 366 0154 64010000 		.4byte	0x164
 367 0158 0B       		.uleb128 0xb
 368 0159 74696400 		.ascii	"tid\000"
 369 015d 02       		.byte	0x2
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 22


 370 015e B1       		.byte	0xb1
 371 015f BF000000 		.4byte	0xbf
 372 0163 00       		.byte	0
 373 0164 0C       		.uleb128 0xc
 374 0165 43000000 		.4byte	.LASF34
 375 0169 03       		.byte	0x3
 376 016a 8D01     		.2byte	0x18d
 377 016c 03       		.byte	0x3
 378 016d 0A       		.uleb128 0xa
 379 016e 25000000 		.4byte	.LASF33
 380 0172 02       		.byte	0x2
 381 0173 AB       		.byte	0xab
 382 0174 03       		.byte	0x3
 383 0175 85010000 		.4byte	0x185
 384 0179 0B       		.uleb128 0xb
 385 017a 74696400 		.ascii	"tid\000"
 386 017e 02       		.byte	0x2
 387 017f AB       		.byte	0xab
 388 0180 BF000000 		.4byte	0xbf
 389 0184 00       		.byte	0
 390 0185 0D       		.uleb128 0xd
 391 0186 97020000 		.4byte	.LASF37
 392 018a 03       		.byte	0x3
 393 018b EE       		.byte	0xee
 394 018c BF000000 		.4byte	0xbf
 395 0190 03       		.byte	0x3
 396 0191 0C       		.uleb128 0xc
 397 0192 E0020000 		.4byte	.LASF35
 398 0196 03       		.byte	0x3
 399 0197 9A01     		.2byte	0x19a
 400 0199 03       		.byte	0x3
 401 019a 08       		.uleb128 0x8
 402 019b 4D030000 		.4byte	.LASF36
 403 019f 06       		.byte	0x6
 404 01a0 D203     		.2byte	0x3d2
 405 01a2 03       		.byte	0x3
 406 01a3 B4010000 		.4byte	0x1b4
 407 01a7 09       		.uleb128 0x9
 408 01a8 746D7000 		.ascii	"tmp\000"
 409 01ac 06       		.byte	0x6
 410 01ad D203     		.2byte	0x3d2
 411 01af BF000000 		.4byte	0xbf
 412 01b3 00       		.byte	0
 413 01b4 0E       		.uleb128 0xe
 414 01b5 08020000 		.4byte	.LASF38
 415 01b9 03       		.byte	0x3
 416 01ba A401     		.2byte	0x1a4
 417 01bc B4000000 		.4byte	0xb4
 418 01c0 03       		.byte	0x3
 419 01c1 0F       		.uleb128 0xf
 420 01c2 5A000000 		.4byte	.LASF39
 421 01c6 01       		.byte	0x1
 422 01c7 78       		.byte	0x78
 423 01c8 03       		.byte	0x3
 424 01c9 10       		.uleb128 0x10
 425 01ca B6020000 		.4byte	.LASF66
 426 01ce 01       		.byte	0x1
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 23


 427 01cf 80       		.byte	0x80
 428 01d0 00000000 		.4byte	.LFB60
 429 01d4 30000000 		.4byte	.LFE60-.LFB60
 430 01d8 01       		.uleb128 0x1
 431 01d9 9C       		.byte	0x9c
 432 01da 2F020000 		.4byte	0x22f
 433 01de 11       		.uleb128 0x11
 434 01df 91020000 		.4byte	.LASF40
 435 01e3 01       		.byte	0x1
 436 01e4 82       		.byte	0x82
 437 01e5 BF000000 		.4byte	0xbf
 438 01e9 00000000 		.4byte	.LLST0
 439 01ed 12       		.uleb128 0x12
 440 01ee 4C010000 		.4byte	0x14c
 441 01f2 16000000 		.4byte	.LBB26
 442 01f6 0A000000 		.4byte	.LBE26-.LBB26
 443 01fa 01       		.byte	0x1
 444 01fb 8B       		.byte	0x8b
 445 01fc 0A020000 		.4byte	0x20a
 446 0200 13       		.uleb128 0x13
 447 0201 58010000 		.4byte	0x158
 448 0205 1E000000 		.4byte	.LLST1
 449 0209 00       		.byte	0
 450 020a 12       		.uleb128 0x12
 451 020b 6D010000 		.4byte	0x16d
 452 020f 20000000 		.4byte	.LBB28
 453 0213 10000000 		.4byte	.LBE28-.LBB28
 454 0217 01       		.byte	0x1
 455 0218 8D       		.byte	0x8d
 456 0219 25020000 		.4byte	0x225
 457 021d 14       		.uleb128 0x14
 458 021e 79010000 		.4byte	0x179
 459 0222 01       		.uleb128 0x1
 460 0223 50       		.byte	0x50
 461 0224 00       		.byte	0
 462 0225 15       		.uleb128 0x15
 463 0226 06000000 		.4byte	.LVL0
 464 022a E6030000 		.4byte	0x3e6
 465 022e 00       		.byte	0
 466 022f 16       		.uleb128 0x16
 467 0230 FF000000 		.4byte	.LASF42
 468 0234 01       		.byte	0x1
 469 0235 9F       		.byte	0x9f
 470 0236 00000000 		.4byte	.LFB61
 471 023a 68000000 		.4byte	.LFE61-.LFB61
 472 023e 01       		.uleb128 0x1
 473 023f 9C       		.byte	0x9c
 474 0240 9D020000 		.4byte	0x29d
 475 0244 11       		.uleb128 0x11
 476 0245 3B000000 		.4byte	.LASF41
 477 0249 01       		.byte	0x1
 478 024a A1       		.byte	0xa1
 479 024b BF000000 		.4byte	0xbf
 480 024f 31000000 		.4byte	.LLST2
 481 0253 17       		.uleb128 0x17
 482 0254 11040000 		.4byte	.LASF67
 483 0258 01       		.byte	0x1
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 24


 484 0259 A1       		.byte	0xa1
 485 025a BF000000 		.4byte	0xbf
 486 025e 18       		.uleb128 0x18
 487 025f 85010000 		.4byte	0x185
 488 0263 06000000 		.4byte	.LBB30
 489 0267 04000000 		.4byte	.LBE30-.LBB30
 490 026b 01       		.byte	0x1
 491 026c A4       		.byte	0xa4
 492 026d 12       		.uleb128 0x12
 493 026e 4C010000 		.4byte	0x14c
 494 0272 46000000 		.4byte	.LBB32
 495 0276 22000000 		.4byte	.LBE32-.LBB32
 496 027a 01       		.byte	0x1
 497 027b C9       		.byte	0xc9
 498 027c 8A020000 		.4byte	0x28a
 499 0280 13       		.uleb128 0x13
 500 0281 58010000 		.4byte	0x158
 501 0285 4F000000 		.4byte	.LLST3
 502 0289 00       		.byte	0
 503 028a 15       		.uleb128 0x15
 504 028b 06000000 		.4byte	.LVL4
 505 028f F2030000 		.4byte	0x3f2
 506 0293 15       		.uleb128 0x15
 507 0294 44000000 		.4byte	.LVL5
 508 0298 C9010000 		.4byte	0x1c9
 509 029c 00       		.byte	0
 510 029d 16       		.uleb128 0x16
 511 029e C5000000 		.4byte	.LASF43
 512 02a2 01       		.byte	0x1
 513 02a3 D3       		.byte	0xd3
 514 02a4 00000000 		.4byte	.LFB62
 515 02a8 14000000 		.4byte	.LFE62-.LFB62
 516 02ac 01       		.uleb128 0x1
 517 02ad 9C       		.byte	0x9c
 518 02ae C2020000 		.4byte	0x2c2
 519 02b2 18       		.uleb128 0x18
 520 02b3 B4010000 		.4byte	0x1b4
 521 02b7 00000000 		.4byte	.LBB34
 522 02bb 04000000 		.4byte	.LBE34-.LBB34
 523 02bf 01       		.byte	0x1
 524 02c0 DD       		.byte	0xdd
 525 02c1 00       		.byte	0
 526 02c2 19       		.uleb128 0x19
 527 02c3 2F010000 		.4byte	.LASF44
 528 02c7 07       		.byte	0x7
 529 02c8 44       		.byte	0x44
 530 02c9 9E000000 		.4byte	0x9e
 531 02cd 19       		.uleb128 0x19
 532 02ce 44010000 		.4byte	.LASF45
 533 02d2 02       		.byte	0x2
 534 02d3 48       		.byte	0x48
 535 02d4 BF000000 		.4byte	0xbf
 536 02d8 1A       		.uleb128 0x1a
 537 02d9 EF020000 		.4byte	0x2ef
 538 02dd E8020000 		.4byte	0x2e8
 539 02e1 1B       		.uleb128 0x1b
 540 02e2 E8020000 		.4byte	0x2e8
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 25


 541 02e6 02       		.byte	0x2
 542 02e7 00       		.byte	0
 543 02e8 02       		.uleb128 0x2
 544 02e9 04       		.byte	0x4
 545 02ea 07       		.byte	0x7
 546 02eb FB030000 		.4byte	.LASF46
 547 02ef 1C       		.uleb128 0x1c
 548 02f0 9E000000 		.4byte	0x9e
 549 02f4 19       		.uleb128 0x19
 550 02f5 DA000000 		.4byte	.LASF47
 551 02f9 06       		.byte	0x6
 552 02fa B2       		.byte	0xb2
 553 02fb FF020000 		.4byte	0x2ff
 554 02ff 1C       		.uleb128 0x1c
 555 0300 D8020000 		.4byte	0x2d8
 556 0304 19       		.uleb128 0x19
 557 0305 19040000 		.4byte	.LASF48
 558 0309 06       		.byte	0x6
 559 030a B3       		.byte	0xb3
 560 030b 0F030000 		.4byte	0x30f
 561 030f 1C       		.uleb128 0x1c
 562 0310 D8020000 		.4byte	0x2d8
 563 0314 1A       		.uleb128 0x1a
 564 0315 9E000000 		.4byte	0x9e
 565 0319 24030000 		.4byte	0x324
 566 031d 1B       		.uleb128 0x1b
 567 031e E8020000 		.4byte	0x2e8
 568 0322 02       		.byte	0x2
 569 0323 00       		.byte	0
 570 0324 19       		.uleb128 0x19
 571 0325 22010000 		.4byte	.LASF49
 572 0329 06       		.byte	0x6
 573 032a CA       		.byte	0xca
 574 032b 14030000 		.4byte	0x314
 575 032f 1A       		.uleb128 0x1a
 576 0330 BF000000 		.4byte	0xbf
 577 0334 3F030000 		.4byte	0x33f
 578 0338 1B       		.uleb128 0x1b
 579 0339 E8020000 		.4byte	0x2e8
 580 033d 02       		.byte	0x2
 581 033e 00       		.byte	0
 582 033f 19       		.uleb128 0x19
 583 0340 2D040000 		.4byte	.LASF50
 584 0344 06       		.byte	0x6
 585 0345 D2       		.byte	0xd2
 586 0346 2F030000 		.4byte	0x32f
 587 034a 19       		.uleb128 0x19
 588 034b CB020000 		.4byte	.LASF51
 589 034f 06       		.byte	0x6
 590 0350 DA       		.byte	0xda
 591 0351 14030000 		.4byte	0x314
 592 0355 19       		.uleb128 0x19
 593 0356 AF030000 		.4byte	.LASF52
 594 035a 06       		.byte	0x6
 595 035b E2       		.byte	0xe2
 596 035c BF000000 		.4byte	0xbf
 597 0360 19       		.uleb128 0x19
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 26


 598 0361 E6010000 		.4byte	.LASF53
 599 0365 06       		.byte	0x6
 600 0366 F7       		.byte	0xf7
 601 0367 9E000000 		.4byte	0x9e
 602 036b 1D       		.uleb128 0x1d
 603 036c 0F000000 		.4byte	.LASF54
 604 0370 06       		.byte	0x6
 605 0371 3F01     		.2byte	0x13f
 606 0373 CA000000 		.4byte	0xca
 607 0377 1D       		.uleb128 0x1d
 608 0378 73000000 		.4byte	.LASF55
 609 037c 06       		.byte	0x6
 610 037d 5C01     		.2byte	0x15c
 611 037f 14030000 		.4byte	0x314
 612 0383 1A       		.uleb128 0x1a
 613 0384 B4000000 		.4byte	0xb4
 614 0388 93030000 		.4byte	0x393
 615 038c 1B       		.uleb128 0x1b
 616 038d E8020000 		.4byte	0x2e8
 617 0391 02       		.byte	0x2
 618 0392 00       		.byte	0
 619 0393 1D       		.uleb128 0x1d
 620 0394 86000000 		.4byte	.LASF56
 621 0398 06       		.byte	0x6
 622 0399 6701     		.2byte	0x167
 623 039b 83030000 		.4byte	0x383
 624 039f 19       		.uleb128 0x19
 625 03a0 C6040000 		.4byte	.LASF57
 626 03a4 08       		.byte	0x8
 627 03a5 40       		.byte	0x40
 628 03a6 9E000000 		.4byte	0x9e
 629 03aa 19       		.uleb128 0x19
 630 03ab B1010000 		.4byte	.LASF58
 631 03af 08       		.byte	0x8
 632 03b0 47       		.byte	0x47
 633 03b1 A9000000 		.4byte	0xa9
 634 03b5 19       		.uleb128 0x19
 635 03b6 7E030000 		.4byte	.LASF59
 636 03ba 08       		.byte	0x8
 637 03bb 4A       		.byte	0x4a
 638 03bc 9E000000 		.4byte	0x9e
 639 03c0 1A       		.uleb128 0x1a
 640 03c1 D0030000 		.4byte	0x3d0
 641 03c5 D0030000 		.4byte	0x3d0
 642 03c9 1B       		.uleb128 0x1b
 643 03ca E8020000 		.4byte	0x2e8
 644 03ce FF       		.byte	0xff
 645 03cf 00       		.byte	0
 646 03d0 1C       		.uleb128 0x1c
 647 03d1 72000000 		.4byte	0x72
 648 03d5 1D       		.uleb128 0x1d
 649 03d6 04040000 		.4byte	.LASF60
 650 03da 03       		.byte	0x3
 651 03db AB01     		.2byte	0x1ab
 652 03dd E1030000 		.4byte	0x3e1
 653 03e1 1C       		.uleb128 0x1c
 654 03e2 C0030000 		.4byte	0x3c0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 27


 655 03e6 1E       		.uleb128 0x1e
 656 03e7 F5010000 		.4byte	.LASF61
 657 03eb F5010000 		.4byte	.LASF61
 658 03ef 03       		.byte	0x3
 659 03f0 E901     		.2byte	0x1e9
 660 03f2 1E       		.uleb128 0x1e
 661 03f3 6D030000 		.4byte	.LASF62
 662 03f7 6D030000 		.4byte	.LASF62
 663 03fb 03       		.byte	0x3
 664 03fc CB01     		.2byte	0x1cb
 665 03fe 00       		.byte	0
 666              		.section	.debug_abbrev,"",%progbits
 667              	.Ldebug_abbrev0:
 668 0000 01       		.uleb128 0x1
 669 0001 11       		.uleb128 0x11
 670 0002 01       		.byte	0x1
 671 0003 25       		.uleb128 0x25
 672 0004 0E       		.uleb128 0xe
 673 0005 13       		.uleb128 0x13
 674 0006 0B       		.uleb128 0xb
 675 0007 03       		.uleb128 0x3
 676 0008 0E       		.uleb128 0xe
 677 0009 1B       		.uleb128 0x1b
 678 000a 0E       		.uleb128 0xe
 679 000b 55       		.uleb128 0x55
 680 000c 17       		.uleb128 0x17
 681 000d 11       		.uleb128 0x11
 682 000e 01       		.uleb128 0x1
 683 000f 10       		.uleb128 0x10
 684 0010 17       		.uleb128 0x17
 685 0011 00       		.byte	0
 686 0012 00       		.byte	0
 687 0013 02       		.uleb128 0x2
 688 0014 24       		.uleb128 0x24
 689 0015 00       		.byte	0
 690 0016 0B       		.uleb128 0xb
 691 0017 0B       		.uleb128 0xb
 692 0018 3E       		.uleb128 0x3e
 693 0019 0B       		.uleb128 0xb
 694 001a 03       		.uleb128 0x3
 695 001b 0E       		.uleb128 0xe
 696 001c 00       		.byte	0
 697 001d 00       		.byte	0
 698 001e 03       		.uleb128 0x3
 699 001f 24       		.uleb128 0x24
 700 0020 00       		.byte	0
 701 0021 0B       		.uleb128 0xb
 702 0022 0B       		.uleb128 0xb
 703 0023 3E       		.uleb128 0x3e
 704 0024 0B       		.uleb128 0xb
 705 0025 03       		.uleb128 0x3
 706 0026 08       		.uleb128 0x8
 707 0027 00       		.byte	0
 708 0028 00       		.byte	0
 709 0029 04       		.uleb128 0x4
 710 002a 16       		.uleb128 0x16
 711 002b 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 28


 712 002c 03       		.uleb128 0x3
 713 002d 0E       		.uleb128 0xe
 714 002e 3A       		.uleb128 0x3a
 715 002f 0B       		.uleb128 0xb
 716 0030 3B       		.uleb128 0x3b
 717 0031 0B       		.uleb128 0xb
 718 0032 49       		.uleb128 0x49
 719 0033 13       		.uleb128 0x13
 720 0034 00       		.byte	0
 721 0035 00       		.byte	0
 722 0036 05       		.uleb128 0x5
 723 0037 16       		.uleb128 0x16
 724 0038 00       		.byte	0
 725 0039 03       		.uleb128 0x3
 726 003a 0E       		.uleb128 0xe
 727 003b 3A       		.uleb128 0x3a
 728 003c 0B       		.uleb128 0xb
 729 003d 3B       		.uleb128 0x3b
 730 003e 05       		.uleb128 0x5
 731 003f 49       		.uleb128 0x49
 732 0040 13       		.uleb128 0x13
 733 0041 00       		.byte	0
 734 0042 00       		.byte	0
 735 0043 06       		.uleb128 0x6
 736 0044 04       		.uleb128 0x4
 737 0045 01       		.byte	0x1
 738 0046 0B       		.uleb128 0xb
 739 0047 0B       		.uleb128 0xb
 740 0048 49       		.uleb128 0x49
 741 0049 13       		.uleb128 0x13
 742 004a 3A       		.uleb128 0x3a
 743 004b 0B       		.uleb128 0xb
 744 004c 3B       		.uleb128 0x3b
 745 004d 05       		.uleb128 0x5
 746 004e 01       		.uleb128 0x1
 747 004f 13       		.uleb128 0x13
 748 0050 00       		.byte	0
 749 0051 00       		.byte	0
 750 0052 07       		.uleb128 0x7
 751 0053 28       		.uleb128 0x28
 752 0054 00       		.byte	0
 753 0055 03       		.uleb128 0x3
 754 0056 0E       		.uleb128 0xe
 755 0057 1C       		.uleb128 0x1c
 756 0058 0B       		.uleb128 0xb
 757 0059 00       		.byte	0
 758 005a 00       		.byte	0
 759 005b 08       		.uleb128 0x8
 760 005c 2E       		.uleb128 0x2e
 761 005d 01       		.byte	0x1
 762 005e 03       		.uleb128 0x3
 763 005f 0E       		.uleb128 0xe
 764 0060 3A       		.uleb128 0x3a
 765 0061 0B       		.uleb128 0xb
 766 0062 3B       		.uleb128 0x3b
 767 0063 05       		.uleb128 0x5
 768 0064 27       		.uleb128 0x27
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 29


 769 0065 19       		.uleb128 0x19
 770 0066 20       		.uleb128 0x20
 771 0067 0B       		.uleb128 0xb
 772 0068 01       		.uleb128 0x1
 773 0069 13       		.uleb128 0x13
 774 006a 00       		.byte	0
 775 006b 00       		.byte	0
 776 006c 09       		.uleb128 0x9
 777 006d 05       		.uleb128 0x5
 778 006e 00       		.byte	0
 779 006f 03       		.uleb128 0x3
 780 0070 08       		.uleb128 0x8
 781 0071 3A       		.uleb128 0x3a
 782 0072 0B       		.uleb128 0xb
 783 0073 3B       		.uleb128 0x3b
 784 0074 05       		.uleb128 0x5
 785 0075 49       		.uleb128 0x49
 786 0076 13       		.uleb128 0x13
 787 0077 00       		.byte	0
 788 0078 00       		.byte	0
 789 0079 0A       		.uleb128 0xa
 790 007a 2E       		.uleb128 0x2e
 791 007b 01       		.byte	0x1
 792 007c 03       		.uleb128 0x3
 793 007d 0E       		.uleb128 0xe
 794 007e 3A       		.uleb128 0x3a
 795 007f 0B       		.uleb128 0xb
 796 0080 3B       		.uleb128 0x3b
 797 0081 0B       		.uleb128 0xb
 798 0082 27       		.uleb128 0x27
 799 0083 19       		.uleb128 0x19
 800 0084 20       		.uleb128 0x20
 801 0085 0B       		.uleb128 0xb
 802 0086 01       		.uleb128 0x1
 803 0087 13       		.uleb128 0x13
 804 0088 00       		.byte	0
 805 0089 00       		.byte	0
 806 008a 0B       		.uleb128 0xb
 807 008b 05       		.uleb128 0x5
 808 008c 00       		.byte	0
 809 008d 03       		.uleb128 0x3
 810 008e 08       		.uleb128 0x8
 811 008f 3A       		.uleb128 0x3a
 812 0090 0B       		.uleb128 0xb
 813 0091 3B       		.uleb128 0x3b
 814 0092 0B       		.uleb128 0xb
 815 0093 49       		.uleb128 0x49
 816 0094 13       		.uleb128 0x13
 817 0095 00       		.byte	0
 818 0096 00       		.byte	0
 819 0097 0C       		.uleb128 0xc
 820 0098 2E       		.uleb128 0x2e
 821 0099 00       		.byte	0
 822 009a 03       		.uleb128 0x3
 823 009b 0E       		.uleb128 0xe
 824 009c 3A       		.uleb128 0x3a
 825 009d 0B       		.uleb128 0xb
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 30


 826 009e 3B       		.uleb128 0x3b
 827 009f 05       		.uleb128 0x5
 828 00a0 27       		.uleb128 0x27
 829 00a1 19       		.uleb128 0x19
 830 00a2 20       		.uleb128 0x20
 831 00a3 0B       		.uleb128 0xb
 832 00a4 00       		.byte	0
 833 00a5 00       		.byte	0
 834 00a6 0D       		.uleb128 0xd
 835 00a7 2E       		.uleb128 0x2e
 836 00a8 00       		.byte	0
 837 00a9 03       		.uleb128 0x3
 838 00aa 0E       		.uleb128 0xe
 839 00ab 3A       		.uleb128 0x3a
 840 00ac 0B       		.uleb128 0xb
 841 00ad 3B       		.uleb128 0x3b
 842 00ae 0B       		.uleb128 0xb
 843 00af 27       		.uleb128 0x27
 844 00b0 19       		.uleb128 0x19
 845 00b1 49       		.uleb128 0x49
 846 00b2 13       		.uleb128 0x13
 847 00b3 20       		.uleb128 0x20
 848 00b4 0B       		.uleb128 0xb
 849 00b5 00       		.byte	0
 850 00b6 00       		.byte	0
 851 00b7 0E       		.uleb128 0xe
 852 00b8 2E       		.uleb128 0x2e
 853 00b9 00       		.byte	0
 854 00ba 03       		.uleb128 0x3
 855 00bb 0E       		.uleb128 0xe
 856 00bc 3A       		.uleb128 0x3a
 857 00bd 0B       		.uleb128 0xb
 858 00be 3B       		.uleb128 0x3b
 859 00bf 05       		.uleb128 0x5
 860 00c0 27       		.uleb128 0x27
 861 00c1 19       		.uleb128 0x19
 862 00c2 49       		.uleb128 0x49
 863 00c3 13       		.uleb128 0x13
 864 00c4 20       		.uleb128 0x20
 865 00c5 0B       		.uleb128 0xb
 866 00c6 00       		.byte	0
 867 00c7 00       		.byte	0
 868 00c8 0F       		.uleb128 0xf
 869 00c9 2E       		.uleb128 0x2e
 870 00ca 00       		.byte	0
 871 00cb 03       		.uleb128 0x3
 872 00cc 0E       		.uleb128 0xe
 873 00cd 3A       		.uleb128 0x3a
 874 00ce 0B       		.uleb128 0xb
 875 00cf 3B       		.uleb128 0x3b
 876 00d0 0B       		.uleb128 0xb
 877 00d1 27       		.uleb128 0x27
 878 00d2 19       		.uleb128 0x19
 879 00d3 20       		.uleb128 0x20
 880 00d4 0B       		.uleb128 0xb
 881 00d5 00       		.byte	0
 882 00d6 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 31


 883 00d7 10       		.uleb128 0x10
 884 00d8 2E       		.uleb128 0x2e
 885 00d9 01       		.byte	0x1
 886 00da 03       		.uleb128 0x3
 887 00db 0E       		.uleb128 0xe
 888 00dc 3A       		.uleb128 0x3a
 889 00dd 0B       		.uleb128 0xb
 890 00de 3B       		.uleb128 0x3b
 891 00df 0B       		.uleb128 0xb
 892 00e0 27       		.uleb128 0x27
 893 00e1 19       		.uleb128 0x19
 894 00e2 11       		.uleb128 0x11
 895 00e3 01       		.uleb128 0x1
 896 00e4 12       		.uleb128 0x12
 897 00e5 06       		.uleb128 0x6
 898 00e6 40       		.uleb128 0x40
 899 00e7 18       		.uleb128 0x18
 900 00e8 9742     		.uleb128 0x2117
 901 00ea 19       		.uleb128 0x19
 902 00eb 01       		.uleb128 0x1
 903 00ec 13       		.uleb128 0x13
 904 00ed 00       		.byte	0
 905 00ee 00       		.byte	0
 906 00ef 11       		.uleb128 0x11
 907 00f0 34       		.uleb128 0x34
 908 00f1 00       		.byte	0
 909 00f2 03       		.uleb128 0x3
 910 00f3 0E       		.uleb128 0xe
 911 00f4 3A       		.uleb128 0x3a
 912 00f5 0B       		.uleb128 0xb
 913 00f6 3B       		.uleb128 0x3b
 914 00f7 0B       		.uleb128 0xb
 915 00f8 49       		.uleb128 0x49
 916 00f9 13       		.uleb128 0x13
 917 00fa 02       		.uleb128 0x2
 918 00fb 17       		.uleb128 0x17
 919 00fc 00       		.byte	0
 920 00fd 00       		.byte	0
 921 00fe 12       		.uleb128 0x12
 922 00ff 1D       		.uleb128 0x1d
 923 0100 01       		.byte	0x1
 924 0101 31       		.uleb128 0x31
 925 0102 13       		.uleb128 0x13
 926 0103 11       		.uleb128 0x11
 927 0104 01       		.uleb128 0x1
 928 0105 12       		.uleb128 0x12
 929 0106 06       		.uleb128 0x6
 930 0107 58       		.uleb128 0x58
 931 0108 0B       		.uleb128 0xb
 932 0109 59       		.uleb128 0x59
 933 010a 0B       		.uleb128 0xb
 934 010b 01       		.uleb128 0x1
 935 010c 13       		.uleb128 0x13
 936 010d 00       		.byte	0
 937 010e 00       		.byte	0
 938 010f 13       		.uleb128 0x13
 939 0110 05       		.uleb128 0x5
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 32


 940 0111 00       		.byte	0
 941 0112 31       		.uleb128 0x31
 942 0113 13       		.uleb128 0x13
 943 0114 02       		.uleb128 0x2
 944 0115 17       		.uleb128 0x17
 945 0116 00       		.byte	0
 946 0117 00       		.byte	0
 947 0118 14       		.uleb128 0x14
 948 0119 05       		.uleb128 0x5
 949 011a 00       		.byte	0
 950 011b 31       		.uleb128 0x31
 951 011c 13       		.uleb128 0x13
 952 011d 02       		.uleb128 0x2
 953 011e 18       		.uleb128 0x18
 954 011f 00       		.byte	0
 955 0120 00       		.byte	0
 956 0121 15       		.uleb128 0x15
 957 0122 898201   		.uleb128 0x4109
 958 0125 00       		.byte	0
 959 0126 11       		.uleb128 0x11
 960 0127 01       		.uleb128 0x1
 961 0128 31       		.uleb128 0x31
 962 0129 13       		.uleb128 0x13
 963 012a 00       		.byte	0
 964 012b 00       		.byte	0
 965 012c 16       		.uleb128 0x16
 966 012d 2E       		.uleb128 0x2e
 967 012e 01       		.byte	0x1
 968 012f 3F       		.uleb128 0x3f
 969 0130 19       		.uleb128 0x19
 970 0131 03       		.uleb128 0x3
 971 0132 0E       		.uleb128 0xe
 972 0133 3A       		.uleb128 0x3a
 973 0134 0B       		.uleb128 0xb
 974 0135 3B       		.uleb128 0x3b
 975 0136 0B       		.uleb128 0xb
 976 0137 27       		.uleb128 0x27
 977 0138 19       		.uleb128 0x19
 978 0139 11       		.uleb128 0x11
 979 013a 01       		.uleb128 0x1
 980 013b 12       		.uleb128 0x12
 981 013c 06       		.uleb128 0x6
 982 013d 40       		.uleb128 0x40
 983 013e 18       		.uleb128 0x18
 984 013f 9742     		.uleb128 0x2117
 985 0141 19       		.uleb128 0x19
 986 0142 01       		.uleb128 0x1
 987 0143 13       		.uleb128 0x13
 988 0144 00       		.byte	0
 989 0145 00       		.byte	0
 990 0146 17       		.uleb128 0x17
 991 0147 34       		.uleb128 0x34
 992 0148 00       		.byte	0
 993 0149 03       		.uleb128 0x3
 994 014a 0E       		.uleb128 0xe
 995 014b 3A       		.uleb128 0x3a
 996 014c 0B       		.uleb128 0xb
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 33


 997 014d 3B       		.uleb128 0x3b
 998 014e 0B       		.uleb128 0xb
 999 014f 49       		.uleb128 0x49
 1000 0150 13       		.uleb128 0x13
 1001 0151 00       		.byte	0
 1002 0152 00       		.byte	0
 1003 0153 18       		.uleb128 0x18
 1004 0154 1D       		.uleb128 0x1d
 1005 0155 00       		.byte	0
 1006 0156 31       		.uleb128 0x31
 1007 0157 13       		.uleb128 0x13
 1008 0158 11       		.uleb128 0x11
 1009 0159 01       		.uleb128 0x1
 1010 015a 12       		.uleb128 0x12
 1011 015b 06       		.uleb128 0x6
 1012 015c 58       		.uleb128 0x58
 1013 015d 0B       		.uleb128 0xb
 1014 015e 59       		.uleb128 0x59
 1015 015f 0B       		.uleb128 0xb
 1016 0160 00       		.byte	0
 1017 0161 00       		.byte	0
 1018 0162 19       		.uleb128 0x19
 1019 0163 34       		.uleb128 0x34
 1020 0164 00       		.byte	0
 1021 0165 03       		.uleb128 0x3
 1022 0166 0E       		.uleb128 0xe
 1023 0167 3A       		.uleb128 0x3a
 1024 0168 0B       		.uleb128 0xb
 1025 0169 3B       		.uleb128 0x3b
 1026 016a 0B       		.uleb128 0xb
 1027 016b 49       		.uleb128 0x49
 1028 016c 13       		.uleb128 0x13
 1029 016d 3F       		.uleb128 0x3f
 1030 016e 19       		.uleb128 0x19
 1031 016f 3C       		.uleb128 0x3c
 1032 0170 19       		.uleb128 0x19
 1033 0171 00       		.byte	0
 1034 0172 00       		.byte	0
 1035 0173 1A       		.uleb128 0x1a
 1036 0174 01       		.uleb128 0x1
 1037 0175 01       		.byte	0x1
 1038 0176 49       		.uleb128 0x49
 1039 0177 13       		.uleb128 0x13
 1040 0178 01       		.uleb128 0x1
 1041 0179 13       		.uleb128 0x13
 1042 017a 00       		.byte	0
 1043 017b 00       		.byte	0
 1044 017c 1B       		.uleb128 0x1b
 1045 017d 21       		.uleb128 0x21
 1046 017e 00       		.byte	0
 1047 017f 49       		.uleb128 0x49
 1048 0180 13       		.uleb128 0x13
 1049 0181 2F       		.uleb128 0x2f
 1050 0182 0B       		.uleb128 0xb
 1051 0183 00       		.byte	0
 1052 0184 00       		.byte	0
 1053 0185 1C       		.uleb128 0x1c
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 34


 1054 0186 26       		.uleb128 0x26
 1055 0187 00       		.byte	0
 1056 0188 49       		.uleb128 0x49
 1057 0189 13       		.uleb128 0x13
 1058 018a 00       		.byte	0
 1059 018b 00       		.byte	0
 1060 018c 1D       		.uleb128 0x1d
 1061 018d 34       		.uleb128 0x34
 1062 018e 00       		.byte	0
 1063 018f 03       		.uleb128 0x3
 1064 0190 0E       		.uleb128 0xe
 1065 0191 3A       		.uleb128 0x3a
 1066 0192 0B       		.uleb128 0xb
 1067 0193 3B       		.uleb128 0x3b
 1068 0194 05       		.uleb128 0x5
 1069 0195 49       		.uleb128 0x49
 1070 0196 13       		.uleb128 0x13
 1071 0197 3F       		.uleb128 0x3f
 1072 0198 19       		.uleb128 0x19
 1073 0199 3C       		.uleb128 0x3c
 1074 019a 19       		.uleb128 0x19
 1075 019b 00       		.byte	0
 1076 019c 00       		.byte	0
 1077 019d 1E       		.uleb128 0x1e
 1078 019e 2E       		.uleb128 0x2e
 1079 019f 00       		.byte	0
 1080 01a0 3F       		.uleb128 0x3f
 1081 01a1 19       		.uleb128 0x19
 1082 01a2 3C       		.uleb128 0x3c
 1083 01a3 19       		.uleb128 0x19
 1084 01a4 6E       		.uleb128 0x6e
 1085 01a5 0E       		.uleb128 0xe
 1086 01a6 03       		.uleb128 0x3
 1087 01a7 0E       		.uleb128 0xe
 1088 01a8 3A       		.uleb128 0x3a
 1089 01a9 0B       		.uleb128 0xb
 1090 01aa 3B       		.uleb128 0x3b
 1091 01ab 05       		.uleb128 0x5
 1092 01ac 00       		.byte	0
 1093 01ad 00       		.byte	0
 1094 01ae 00       		.byte	0
 1095              		.section	.debug_loc,"",%progbits
 1096              	.Ldebug_loc0:
 1097              	.LLST0:
 1098 0000 06000000 		.4byte	.LVL0
 1099 0004 1A000000 		.4byte	.LVL2
 1100 0008 0100     		.2byte	0x1
 1101 000a 50       		.byte	0x50
 1102 000b 20000000 		.4byte	.LVL3
 1103 000f 30000000 		.4byte	.LFE60
 1104 0013 0100     		.2byte	0x1
 1105 0015 50       		.byte	0x50
 1106 0016 00000000 		.4byte	0
 1107 001a 00000000 		.4byte	0
 1108              	.LLST1:
 1109 001e 16000000 		.4byte	.LVL1
 1110 0022 1A000000 		.4byte	.LVL2
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 35


 1111 0026 0100     		.2byte	0x1
 1112 0028 50       		.byte	0x50
 1113 0029 00000000 		.4byte	0
 1114 002d 00000000 		.4byte	0
 1115              	.LLST2:
 1116 0031 06000000 		.4byte	.LVL4
 1117 0035 43000000 		.4byte	.LVL5-1
 1118 0039 0100     		.2byte	0x1
 1119 003b 50       		.byte	0x50
 1120 003c 46000000 		.4byte	.LVL6
 1121 0040 68000000 		.4byte	.LFE61
 1122 0044 0100     		.2byte	0x1
 1123 0046 50       		.byte	0x50
 1124 0047 00000000 		.4byte	0
 1125 004b 00000000 		.4byte	0
 1126              	.LLST3:
 1127 004f 46000000 		.4byte	.LVL6
 1128 0053 4A000000 		.4byte	.LVL7
 1129 0057 0100     		.2byte	0x1
 1130 0059 53       		.byte	0x53
 1131 005a 00000000 		.4byte	0
 1132 005e 00000000 		.4byte	0
 1133              		.section	.debug_aranges,"",%progbits
 1134 0000 2C000000 		.4byte	0x2c
 1135 0004 0200     		.2byte	0x2
 1136 0006 00000000 		.4byte	.Ldebug_info0
 1137 000a 04       		.byte	0x4
 1138 000b 00       		.byte	0
 1139 000c 0000     		.2byte	0
 1140 000e 0000     		.2byte	0
 1141 0010 00000000 		.4byte	.LFB60
 1142 0014 30000000 		.4byte	.LFE60-.LFB60
 1143 0018 00000000 		.4byte	.LFB61
 1144 001c 68000000 		.4byte	.LFE61-.LFB61
 1145 0020 00000000 		.4byte	.LFB62
 1146 0024 14000000 		.4byte	.LFE62-.LFB62
 1147 0028 00000000 		.4byte	0
 1148 002c 00000000 		.4byte	0
 1149              		.section	.debug_ranges,"",%progbits
 1150              	.Ldebug_ranges0:
 1151 0000 00000000 		.4byte	.LFB60
 1152 0004 30000000 		.4byte	.LFE60
 1153 0008 00000000 		.4byte	.LFB61
 1154 000c 68000000 		.4byte	.LFE61
 1155 0010 00000000 		.4byte	.LFB62
 1156 0014 14000000 		.4byte	.LFE62
 1157 0018 00000000 		.4byte	0
 1158 001c 00000000 		.4byte	0
 1159              		.section	.debug_line,"",%progbits
 1160              	.Ldebug_line0:
 1161 0000 9C010000 		.section	.debug_str,"MS",%progbits,1
 1161      02003101 
 1161      00000201 
 1161      FB0E0D00 
 1161      01010101 
 1162              	.LASF19:
 1163 0000 4B65726E 		.ascii	"Kernel_Context\000"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 36


 1163      656C5F43 
 1163      6F6E7465 
 1163      787400
 1164              	.LASF54:
 1165 000f 45455F72 		.ascii	"EE_rq_bitmask\000"
 1165      715F6269 
 1165      746D6173 
 1165      6B00
 1166              	.LASF14:
 1167 001d 45455F55 		.ascii	"EE_UREG\000"
 1167      52454700 
 1168              	.LASF33:
 1169 0025 45455F68 		.ascii	"EE_hal_endcycle_ready\000"
 1169      616C5F65 
 1169      6E646379 
 1169      636C655F 
 1169      72656164 
 1170              	.LASF41:
 1171 003b 72716669 		.ascii	"rqfirst\000"
 1171      72737400 
 1172              	.LASF34:
 1173 0043 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 1173      6F5F6361 
 1173      6C6C5F50 
 1173      72655461 
 1173      736B486F 
 1174              	.LASF39:
 1175 005a 45455F49 		.ascii	"EE_IRQ_release_all_items\000"
 1175      52515F72 
 1175      656C6561 
 1175      73655F61 
 1175      6C6C5F69 
 1176              	.LASF55:
 1177 0073 45455F74 		.ascii	"EE_th_event_active\000"
 1177      685F6576 
 1177      656E745F 
 1177      61637469 
 1177      766500
 1178              	.LASF56:
 1179 0086 45455F74 		.ascii	"EE_th_waswaiting\000"
 1179      685F7761 
 1179      73776169 
 1179      74696E67 
 1179      00
 1180              	.LASF2:
 1181 0097 73686F72 		.ascii	"short int\000"
 1181      7420696E 
 1181      7400
 1182              	.LASF22:
 1183 00a1 4572726F 		.ascii	"ErrorHook_Context\000"
 1183      72486F6F 
 1183      6B5F436F 
 1183      6E746578 
 1183      7400
 1184              	.LASF15:
 1185 00b3 45455F46 		.ascii	"EE_FREG\000"
 1185      52454700 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 37


 1186              	.LASF13:
 1187 00bb 45455F55 		.ascii	"EE_UINT32\000"
 1187      494E5433 
 1187      3200
 1188              	.LASF43:
 1189 00c5 45455F49 		.ascii	"EE_IRQ_end_post_stub\000"
 1189      52515F65 
 1189      6E645F70 
 1189      6F73745F 
 1189      73747562 
 1190              	.LASF47:
 1191 00da 45455F74 		.ascii	"EE_th_ready_prio\000"
 1191      685F7265 
 1191      6164795F 
 1191      7072696F 
 1191      00
 1192              	.LASF21:
 1193 00eb 49535232 		.ascii	"ISR2_Context\000"
 1193      5F436F6E 
 1193      74657874 
 1193      00
 1194              	.LASF17:
 1195 00f8 45455F54 		.ascii	"EE_TID\000"
 1195      494400
 1196              	.LASF42:
 1197 00ff 45455F49 		.ascii	"EE_IRQ_end_instance\000"
 1197      52515F65 
 1197      6E645F69 
 1197      6E737461 
 1197      6E636500 
 1198              	.LASF30:
 1199 0113 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 1199      59504543 
 1199      4F4E5445 
 1199      585400
 1200              	.LASF49:
 1201 0122 45455F74 		.ascii	"EE_th_status\000"
 1201      685F7374 
 1201      61747573 
 1201      00
 1202              	.LASF44:
 1203 012f 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1203      52515F6E 
 1203      65737469 
 1203      6E675F6C 
 1203      6576656C 
 1204              	.LASF45:
 1205 0144 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1205      74645F65 
 1205      6E646379 
 1205      636C655F 
 1205      6E657874 
 1206              	.LASF29:
 1207 015d 49646C65 		.ascii	"Idle_Context\000"
 1207      5F436F6E 
 1207      74657874 
 1207      00
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 38


 1208              	.LASF32:
 1209 016a 45455F68 		.ascii	"EE_hal_endcycle_stacked\000"
 1209      616C5F65 
 1209      6E646379 
 1209      636C655F 
 1209      73746163 
 1210              	.LASF6:
 1211 0182 6C6F6E67 		.ascii	"long long int\000"
 1211      206C6F6E 
 1211      6720696E 
 1211      7400
 1212              	.LASF10:
 1213 0190 45455F49 		.ascii	"EE_INT8\000"
 1213      4E543800 
 1214              	.LASF18:
 1215 0198 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 1215      5950455F 
 1215      52515F4D 
 1215      41534B00 
 1216              	.LASF4:
 1217 01a8 6C6F6E67 		.ascii	"long int\000"
 1217      20696E74 
 1217      00
 1218              	.LASF58:
 1219 01b1 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1219      6F5F4952 
 1219      515F7375 
 1219      7370656E 
 1219      645F7374 
 1220              	.LASF31:
 1221 01ca 45455F61 		.ascii	"EE_as_set_execution_context\000"
 1221      735F7365 
 1221      745F6578 
 1221      65637574 
 1221      696F6E5F 
 1222              	.LASF53:
 1223 01e6 45455F73 		.ascii	"EE_sys_ceiling\000"
 1223      79735F63 
 1223      65696C69 
 1223      6E6700
 1224              	.LASF61:
 1225 01f5 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 1225      71327374 
 1225      6B5F6578 
 1225      6368616E 
 1225      676500
 1226              	.LASF38:
 1227 0208 45455F6F 		.ascii	"EE_oo_check_disableint_error\000"
 1227      6F5F6368 
 1227      65636B5F 
 1227      64697361 
 1227      626C6569 
 1228              	.LASF9:
 1229 0225 6C6F6E67 		.ascii	"long double\000"
 1229      20646F75 
 1229      626C6500 
 1230              	.LASF64:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 39


 1231 0231 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_irqendin.c\000"
 1231      72617465 
 1231      645F536F 
 1231      75726365 
 1231      5C50536F 
 1232              	.LASF1:
 1233 0260 756E7369 		.ascii	"unsigned char\000"
 1233      676E6564 
 1233      20636861 
 1233      7200
 1234              	.LASF0:
 1235 026e 7369676E 		.ascii	"signed char\000"
 1235      65642063 
 1235      68617200 
 1236              	.LASF7:
 1237 027a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1237      206C6F6E 
 1237      6720756E 
 1237      7369676E 
 1237      65642069 
 1238              	.LASF40:
 1239 0291 746E6578 		.ascii	"tnext\000"
 1239      7400
 1240              	.LASF37:
 1241 0297 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1241      746B5F71 
 1241      75657279 
 1241      66697273 
 1241      7400
 1242              	.LASF8:
 1243 02a9 756E7369 		.ascii	"unsigned int\000"
 1243      676E6564 
 1243      20696E74 
 1243      00
 1244              	.LASF66:
 1245 02b6 45455F49 		.ascii	"EE_IRQ_run_next_task\000"
 1245      52515F72 
 1245      756E5F6E 
 1245      6578745F 
 1245      7461736B 
 1246              	.LASF51:
 1247 02cb 45455F74 		.ascii	"EE_th_rnact\000"
 1247      685F726E 
 1247      61637400 
 1248              	.LASF12:
 1249 02d7 45455F49 		.ascii	"EE_INT32\000"
 1249      4E543332 
 1249      00
 1250              	.LASF35:
 1251 02e0 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 1251      6F5F6361 
 1251      6C6C5F50 
 1251      6F737454 
 1251      61736B48 
 1252              	.LASF20:
 1253 02f8 5441534B 		.ascii	"TASK_Context\000"
 1253      5F436F6E 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 40


 1253      74657874 
 1253      00
 1254              	.LASF3:
 1255 0305 73686F72 		.ascii	"short unsigned int\000"
 1255      7420756E 
 1255      7369676E 
 1255      65642069 
 1255      6E7400
 1256              	.LASF27:
 1257 0318 53687574 		.ascii	"ShutdownHook_Context\000"
 1257      646F776E 
 1257      486F6F6B 
 1257      5F436F6E 
 1257      74657874 
 1258              	.LASF11:
 1259 032d 45455F55 		.ascii	"EE_UINT16\000"
 1259      494E5431 
 1259      3600
 1260              	.LASF28:
 1261 0337 416C6172 		.ascii	"AlarmCallback_Context\000"
 1261      6D43616C 
 1261      6C626163 
 1261      6B5F436F 
 1261      6E746578 
 1262              	.LASF36:
 1263 034d 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 1263      5254495F 
 1263      7365745F 
 1263      74685F65 
 1263      715F6469 
 1264              	.LASF62:
 1265 036d 45455F72 		.ascii	"EE_rq_queryfirst\000"
 1265      715F7175 
 1265      65727966 
 1265      69727374 
 1265      00
 1266              	.LASF59:
 1267 037e 45455F41 		.ascii	"EE_ApplicationMode\000"
 1267      70706C69 
 1267      63617469 
 1267      6F6E4D6F 
 1267      646500
 1268              	.LASF5:
 1269 0391 6C6F6E67 		.ascii	"long unsigned int\000"
 1269      20756E73 
 1269      69676E65 
 1269      6420696E 
 1269      7400
 1270              	.LASF16:
 1271 03a3 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1271      59504542 
 1271      4F4F4C00 
 1272              	.LASF52:
 1273 03af 45455F73 		.ascii	"EE_stkfirst\000"
 1273      746B6669 
 1273      72737400 
 1274              	.LASF23:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 41


 1275 03bb 50726F74 		.ascii	"ProtectionHook_Context\000"
 1275      65637469 
 1275      6F6E486F 
 1275      6F6B5F43 
 1275      6F6E7465 
 1276              	.LASF24:
 1277 03d2 50726554 		.ascii	"PreTaskHook_Context\000"
 1277      61736B48 
 1277      6F6F6B5F 
 1277      436F6E74 
 1277      65787400 
 1278              	.LASF25:
 1279 03e6 506F7374 		.ascii	"PostTaskHook_Context\000"
 1279      5461736B 
 1279      486F6F6B 
 1279      5F436F6E 
 1279      74657874 
 1280              	.LASF46:
 1281 03fb 73697A65 		.ascii	"sizetype\000"
 1281      74797065 
 1281      00
 1282              	.LASF60:
 1283 0404 45455F72 		.ascii	"EE_rq_lookup\000"
 1283      715F6C6F 
 1283      6F6B7570 
 1283      00
 1284              	.LASF67:
 1285 0411 63757272 		.ascii	"current\000"
 1285      656E7400 
 1286              	.LASF48:
 1287 0419 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1287      685F6469 
 1287      73706174 
 1287      63685F70 
 1287      72696F00 
 1288              	.LASF50:
 1289 042d 45455F74 		.ascii	"EE_th_next\000"
 1289      685F6E65 
 1289      787400
 1290              	.LASF63:
 1291 0438 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1291      43313120 
 1291      352E342E 
 1291      31203230 
 1291      31363036 
 1292 046b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1292      20726576 
 1292      6973696F 
 1292      6E203233 
 1292      37373135 
 1293 049e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1293      66756E63 
 1293      74696F6E 
 1293      2D736563 
 1293      74696F6E 
 1294              	.LASF57:
 1295 04c6 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccVGsbG3.s 			page 42


 1295      6F5F4952 
 1295      515F6469 
 1295      7361626C 
 1295      655F636F 
 1296              	.LASF26:
 1297 04de 53746172 		.ascii	"StartupHook_Context\000"
 1297      74757048 
 1297      6F6F6B5F 
 1297      436F6E74 
 1297      65787400 
 1298              	.LASF65:
 1299 04f2 433A5C55 		.ascii	"C:\\Users\\zakis\\Documents\\EOS_Assignment_Two\\JS"
 1299      73657273 
 1299      5C7A616B 
 1299      69735C44 
 1299      6F63756D 
 1300 0520 4F4E5F50 		.ascii	"ON_Parser\\EOS_Assignment_Two\\JSON_Parser.cydsn\000"
 1300      61727365 
 1300      725C454F 
 1300      535F4173 
 1300      7369676E 
 1301              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
