ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_activate.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_oo_ActivateTask,"ax",%progbits
  20              		.align	2
  21              		.global	EE_oo_ActivateTask
  22              		.thumb
  23              		.thumb_func
  24              		.type	EE_oo_ActivateTask, %function
  25              	EE_oo_ActivateTask:
  26              	.LFB59:
  27              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_activate.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 2


  31:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * CVS: $Id: ee_activate.c,v 1.5 2006/01/05 14:37:22 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** #include "ErikaOS_1_ee_internal.inc"
  53:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** 
  54:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** /* ActivateTask:
  55:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****    - The task is moved from the suspended state to the ready state
  56:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****    - called from interrupts, from tasks, from StartupHook
  57:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****    - returns E_OS_LIMIT if too many activations are issued
  58:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       E_OK otherwise
  59:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       E_OS_ID if the taskID is invalid (Extended status)
  60:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****    - clears the events of a task (extended task)
  61:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** 
  62:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****    NOTE: part of this source code is copied into altick.c!
  63:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** */
  64:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** #ifndef __PRIVATE_ACTIVATETASK__
  66:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** StatusType EE_oo_ActivateTask(TaskType TaskID)
  67:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** {
  28              		.loc 1 67 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LBB70:
  40              	.LBB71:
  41              	.LBB72:
  42              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 3


   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 4


  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 5


 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 6


 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 212:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
 224:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 229:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 7


 234:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
  43              		.loc 2 260 0
  44              		.syntax unified
  45              	@ 260 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  46 0002 EFF31085 		mrs r5, primask
  47              	@ 0 "" 2
  48              	.LVL1:
 261:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
  49              		.loc 2 261 0
  50              	@ 261 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  51 0006 72B6     		cpsid i
  52              	@ 0 "" 2
  53              	.LVL2:
  54              		.thumb
  55              		.syntax unified
  56              	.LBE72:
  57              	.LBE71:
  58              	.LBE70:
  68:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   /* Error Value */
  69:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   register StatusType ev;
  70:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   /* Primitive Lock Procedure */
  71:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION();
  72:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   EE_ORTI_set_service_in(EE_SERVICETRACE_ACTIVATETASK);
  74:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** 
  75:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   EE_as_monitoring_the_stack();
  76:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** #ifdef EE_SERVICE_PROTECTION__
  78:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   /* [OS093]: If interrupts are disabled/suspended by a Task/OsIsr and the
  79:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       Task/OsIsr calls any OS service (excluding the interrupt services)
  80:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       then the Operating System shall ignore the service AND shall return
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 8


  81:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       E_OS_DISABLEDINT if the service returns a StatusType value. */
  82:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   /* [OS088]: If an OS-Application makes a service call from the wrong context
  83:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       AND is currently not inside a Category 1 ISR the Operating System module
  84:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       shall not perform the requested action (the service call shall have no
  85:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       effect), and return E_OS_CALLEVEL (see [12], section 13.1) or the
  86:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       "invalid value" of  the service. (BSW11009, BSW11013) */
  87:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   /* ActivateTask is callable by Task and ISR2 */
  88:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   if ( EE_as_execution_context > ISR2_Context ) {
  89:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     ev = E_OS_CALLEVEL;
  90:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   } else if ( EE_oo_check_disableint_error() ) {
  91:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     ev = E_OS_DISABLEDINT;
  92:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   } else
  93:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** #endif /* EE_SERVICE_PROTECTION__ */
  94:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** 
  95:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** #if (defined(__RN_TASK__)) || (defined(EE_AS_RPC__))
  96:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   if ( EE_IS_TID_REMOTE(TaskID) ) {
  97:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** #ifdef EE_AS_RPC__
  98:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     /* Tmp Tid (introduced to meet MISRA requirements) */
  99:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     EE_TID tmp_tid;
 100:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** 
 101:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     EE_os_param unmarked_tid;
 102:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     /* Two steps macro assignment to meet MISRA 10.3 required rule */
 103:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     tmp_tid = EE_UNMARK_REMOTE_TID(TaskID);
 104:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     unmarked_tid.value_param = (EE_UREG)tmp_tid;
 105:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     /* Forward the request to another CPU in synchronous way */
 106:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     ev = EE_as_rpc( OSServiceId_ActivateTask, unmarked_tid,
 107:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       EE_OS_INVALID_PARAM, EE_OS_INVALID_PARAM );
 108:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** #else /* EE_AS_RPC__ */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     EE_TYPERN_PARAM par;
 110:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     par.pending = 1U;
 111:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     /* Forward the request to another CPU in asynchronous way */
 112:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     (void)EE_rn_send(EE_UNMARK_REMOTE_TID(TaskID), EE_RN_TASK, par);
 113:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     ev = E_OK;
 114:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** #endif /* EE_AS_RPC__ */
 115:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   } else {
 116:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** #endif /* __RN_TASK__ || EE_AS_RPC__ */
 117:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** 
 118:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(EE_SERVICE_PROTECTION__))
 119:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     /* Check if the task Id is valid */
 120:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     if ( (TaskID < 0) || (TaskID >= EE_MAX_TASK) ) {
 121:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       ev = E_OS_ID;
 122:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     } else if ( EE_TASK_ACCESS_ERR(TaskID, EE_as_active_app) ) {
 123:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       ev = E_OS_ACCESS;
 124:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     } else
 125:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** #elif defined(__OO_EXTENDED_STATUS__)
 126:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     /* Check if the task Id is valid */
 127:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     if ( (TaskID < 0) || (TaskID >= EE_MAX_TASK) ) {
  59              		.loc 1 127 0
  60 0008 0228     		cmp	r0, #2
  61 000a 4ED8     		bhi	.L6
 128:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       ev = E_OS_ID;
 129:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     } else
 130:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** #endif /* EE_AS_OSAPPLICATIONS__ || E_SERVICE_PROTECTION__ ||
 131:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** __OO_EXTENDED_STATUS__ */
 132:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     /* Check for pending activations */
 133:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     if ( EE_th_rnact[TaskID] == 0U ) {
  62              		.loc 1 133 0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 9


  63 000c 2D4B     		ldr	r3, .L12
  64 000e 53F82030 		ldr	r3, [r3, r0, lsl #2]
  65 0012 002B     		cmp	r3, #0
  66 0014 4BD0     		beq	.L7
  67              	.LVL3:
  68              	.LBB73:
  69              	.LBB74:
  70              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 10


  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 11


 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 12


 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 13


 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 14


 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 15


 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 16


 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x += (EE_INT8)8;
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 17


 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_stkfirst = t;
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the ready queue */
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* put the first ready task into the stack */
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 18


 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_thread_end_instance(void);
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __MULTI__
 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 19


 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 570:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 571:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 572:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_stkchange(tmp);
 573:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } else {
 574:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* the next task have to be started */
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_ready2stacked(tmp);
 576:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 577:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 578:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 579:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 580:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 581:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 582:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 583:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __MULTI__ */
 584:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 585:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_reset_th_event_active(TaskID)    ((void) 0)
 586:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 587:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 588:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 589:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 590:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 591:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 592:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 593:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 594:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_ECC1__) || defined(__OO_ECC2__) */
 595:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 596:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 597:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 598:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 599:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method.
 600:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC2/ECC2 it can be that it is ready or 
 601:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     running. in that case we have to check and queue it anyway
 602:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 603:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType TaskID)
 604:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if (EE_th_status[TaskID] == SUSPENDED) {
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[TaskID] = READY;
 607:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_reset_th_event_active(TaskID);
 608:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 609:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 610:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 611:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 612:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method
 613:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC1/ECC1 it can be here only because
 614:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     it had rnact=1 before the call, and so it is in suspended state
 615:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 616:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType tready)
 617:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 618:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_status[tready] = READY;
 619:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_reset_th_event_active(tready);
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 20


 620:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 621:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_BCC2__) || defined(__OO_ECC2__) */
 622:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 623:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_task_in_ready_queue( TaskType tid )
 624:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 625:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Decrement the residual number activation */
 626:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   --EE_th_rnact[tid];
  71              		.loc 3 626 0
  72 0016 2B4A     		ldr	r2, .L12
  73 0018 013B     		subs	r3, r3, #1
  74 001a 42F82030 		str	r3, [r2, r0, lsl #2]
  75              	.LVL4:
  76              	.LBB75:
  77              	.LBB76:
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[TaskID] = READY;
  78              		.loc 3 605 0
  79 001e 2A4B     		ldr	r3, .L12+4
  80 0020 53F82030 		ldr	r3, [r3, r0, lsl #2]
  81 0024 032B     		cmp	r3, #3
  82 0026 07D1     		bne	.L3
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_reset_th_event_active(TaskID);
  83              		.loc 3 606 0
  84 0028 0222     		movs	r2, #2
  85 002a 274B     		ldr	r3, .L12+4
  86 002c 43F82020 		str	r2, [r3, r0, lsl #2]
  87              	.LVL5:
  88              	.LBB77:
  89              	.LBB78:
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
  90              		.loc 3 555 0
  91 0030 0022     		movs	r2, #0
  92 0032 264B     		ldr	r3, .L12+8
  93 0034 43F82020 		str	r2, [r3, r0, lsl #2]
  94              	.LVL6:
  95              	.L3:
  96              	.LBE78:
  97              	.LBE77:
  98              	.LBE76:
  99              	.LBE75:
 627:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the status READY handling multiple activations */
 628:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_set_th_status_ready(tid);
 629:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* insert the task in the ready queue */
 630:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_rq_insert(tid);
 100              		.loc 3 630 0
 101 0038 FFF7FEFF 		bl	EE_rq_insert
 102              	.LVL7:
 103              	.LBE74:
 104              	.LBE73:
 105              	.LBB79:
 106              	.LBB80:
 107              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Copyright (C) 2002-2009  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * This file is part of ERIKA Enterprise.
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 21


   7:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Functions used in HAL implementations, to be included by a specific
  43:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ee_internal.h header.
  44:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Derived from pkg/cpu/pic30/inc/ee_internal.h
  45:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Author: 2009 Bernardo Dal Seno
  46:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  47:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  48:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  49:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * PSoC Port and API Generation
  50:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Carlos Fernando Meier Martinez
  51:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Hochschule Darmstadt, Germany. 2017.
  52:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  53:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  54:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifndef PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  55:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  56:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  57:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  58:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Nested Interrupts Handling
  59:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  60:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  62:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  63:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* The following variables belong to ERIKA OS section: ee_kernel_bss */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 22


  64:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_START_SEC_VAR_NOINIT
  65:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  66:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  67:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** extern EE_UREG EE_IRQ_nesting_level;
  69:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  71:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  72:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_STOP_SEC_VAR_NOINIT
  73:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  74:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  75:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  76:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* can be called with interrupt enabled */
  77:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** __INLINE__ EE_UREG  EE_hal_get_IRQ_nesting_level(void)
  78:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** {
  79:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****     return EE_IRQ_nesting_level;
 108              		.loc 4 79 0
 109 003c 244B     		ldr	r3, .L12+12
 110 003e 1B68     		ldr	r3, [r3]
 111              	.LBE80:
 112              	.LBE79:
 134:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       ev = E_OS_LIMIT;
 135:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     } else {
 136:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       /* [SWS_Os_00469]: The Operating System module shall start an
 137:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****           OsTaskTimeFrame when a task is activated successfully.
 138:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****           (SRS_Os_11008) */
 139:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       /* [SWS_Os_00466]: If an attempt is made to activate a task before the
 140:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****           end of an OsTaskTimeFrame then the Operating System module shall not
 141:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****           perform the activation AND shall call the ProtectionHook()
 142:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****           with E_OS_PROTECTION_ARRIVAL. */
 143:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       /* Check Interarrival Frame */
 144:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       if ( EE_as_tp_handle_interarrival(EE_AS_TP_ID_FROM_TASK(TaskID)) )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****         /* Put the TASK in ready queue */
 147:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****         EE_oo_task_in_ready_queue(TaskID);
 148:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** 
 149:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****         /* Check for preemption: 
 150:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****            this test has to be done only if we are inside a task */ 
 151:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****         if ( EE_hal_get_IRQ_nesting_level() == 0U ) {
 113              		.loc 1 151 0
 114 0040 002B     		cmp	r3, #0
 115 0042 36D1     		bne	.L8
 116              	.LBB81:
 117              	.LBB82:
 118              	.LBB83:
 119              	.LBB84:
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 120              		.loc 3 240 0
 121 0044 234B     		ldr	r3, .L12+16
 122 0046 1C68     		ldr	r4, [r3]
 123              	.LBE84:
 124              	.LBE83:
 631:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 632:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 633:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Execute a preemption */
 634:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_PREEMPTION_POINTS__
 635:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 23


 636:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   Moved preemption check implementation into an outside method because the
 637:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   behaviour is common to EE_ActivateTask, EE_oo_ForceSchedule,
 638:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_IncrementCounter, EE_oo_ReleaseResource, EE_oo_PostSem
 639:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 640:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_preemption_point(void)
 641:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 642:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID current, rq;
 643:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 644:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* check if there is a preemption */
 645:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_stk_queryfirst();
 646:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   rq      = EE_rq_queryfirst();
 125              		.loc 3 646 0
 126 0048 FFF7FEFF 		bl	EE_rq_queryfirst
 127              	.LVL8:
 647:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 648:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 649:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 650:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 651:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reaction to timing protection can be defined to terminate the
 652:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      OSApplication. If a task is inside CallTrustedFunction() and task
 653:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      rescheduling takes place within the same OSApplication,
 654:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the newly running higher priority task may cause timing protection and
 655:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      terminate the OSApplication, thus indirectly aborting the trusted
 656:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      function. To avoid this, the scheduling of other Tasks which belong to
 657:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the same OS-Application as the caller needs to be restricted, as well as
 658:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the availability of interrupts of the same OS-Application. */
 659:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* [SWS_Os_00563]: The OperatingSystem shall not schedule any other Tasks
 660:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       which belong to the same OS-Application as the non-trusted caller of the
 661:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       service. Also interrupts of Category 2 which belong to the same
 662:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       OS-Application shall be disabled during the execution of the service. */
 663:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (  (EE_as_active_app != EE_th_app[rq + 1]) ||
 664:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_RAM[EE_as_active_app].
 665:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           TrustedFunctionCallsCounter == 0U) ||
 666:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_ROM[EE_as_active_app].Mode == EE_MEMPROT_TRUST_MODE)
 667:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      )
 668:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 669:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 670:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 671:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( rq != EE_NIL ) {
 128              		.loc 3 671 0
 129 004c B0F1FF3F 		cmp	r0, #-1
 130 0050 31D0     		beq	.L9
 672:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* We check if the system ceiling is greater or not the first task
 673:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****          in the ready queue */
 674:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       if ( EE_sys_ceiling < EE_th_ready_prio[rq] ) {
 131              		.loc 3 674 0
 132 0052 214B     		ldr	r3, .L12+20
 133 0054 53F82020 		ldr	r2, [r3, r0, lsl #2]
 134 0058 204B     		ldr	r3, .L12+24
 135 005a 1B68     		ldr	r3, [r3]
 136 005c 9A42     		cmp	r2, r3
 137 005e 2CD9     		bls	.L10
 675:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 676:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         if ( current != EE_NIL ) {
 138              		.loc 3 676 0
 139 0060 B4F1FF3F 		cmp	r4, #-1
 140 0064 03D0     		beq	.L4
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 24


 677:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_oo_call_PostTaskHook();
 678:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* We have to put the task in the READY status */
 679:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_th_status[current] = READY;
 141              		.loc 3 679 0
 142 0066 0221     		movs	r1, #2
 143 0068 174A     		ldr	r2, .L12+4
 144 006a 42F82410 		str	r1, [r2, r4, lsl #2]
 145              	.L4:
 680:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* !!! BUT NOT IN THE READY QUEUE !!!
 681:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****              The task remains into the Stacked Queue! */
 682:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         }
 683:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 684:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Get the new internal resource */
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_sys_ceiling |= EE_th_dispatch_prio[rq];
 146              		.loc 3 685 0
 147 006e 1C4A     		ldr	r2, .L12+28
 148 0070 52F82020 		ldr	r2, [r2, r0, lsl #2]
 149 0074 1343     		orrs	r3, r3, r2
 150 0076 194A     		ldr	r2, .L12+24
 151 0078 1360     		str	r3, [r2]
 686:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Put the task in running state */
 687:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[rq] = RUNNING;
 152              		.loc 3 687 0
 153 007a 0022     		movs	r2, #0
 154 007c 124B     		ldr	r3, .L12+4
 155 007e 43F82020 		str	r2, [r3, r0, lsl #2]
 156              	.LBB85:
 157              	.LBB86:
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 158              		.loc 3 566 0
 159 0082 FFF7FEFF 		bl	EE_rq2stk_exchange
 160              	.LVL9:
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 161              		.loc 3 567 0
 162 0086 174B     		ldr	r3, .L12+32
 163 0088 53F82030 		ldr	r3, [r3, r0, lsl #2]
 164 008c 4BB1     		cbz	r3, .L5
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 165              		.loc 3 569 0
 166 008e 0024     		movs	r4, #0
 167 0090 144B     		ldr	r3, .L12+32
 168 0092 43F82040 		str	r4, [r3, r0, lsl #2]
 169              	.LVL10:
 170              	.LBB87:
 171              	.LBB88:
 172              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 25


  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 26


  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 27


 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 173              		.loc 5 154 0
 174 0096 40F00040 		orr	r0, r0, #-2147483648
 175              	.LVL11:
 176 009a FFF7FEFF 		bl	EE_cortex_mx_change_context
 177              	.LVL12:
 178              	.LBE88:
 179              	.LBE87:
 180              	.LBE86:
 181              	.LBE85:
 182              	.LBE82:
 183              	.LBE81:
 152:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****           /* we are inside a task */
 153:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****           EE_oo_preemption_point();
 154:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****         }
 155:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       }
 156:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****       ev = E_OK;
 184              		.loc 1 156 0
 185 009e 2046     		mov	r0, r4
 186 00a0 0CE0     		b	.L2
 187              	.LVL13:
 188              	.L5:
 189              	.LBB94:
 190              	.LBB93:
 191              	.LBB92:
 192              	.LBB91:
 193              	.LBB89:
 194              	.LBB90:
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 28


 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 195              		.loc 5 167 0
 196 00a2 FFF7FEFF 		bl	EE_cortex_mx_change_context
 197              	.LVL14:
 198              	.LBE90:
 199              	.LBE89:
 200              	.LBE91:
 201              	.LBE92:
 202              	.LBE93:
 203              	.LBE94:
 204              		.loc 1 156 0
 205 00a6 0020     		movs	r0, #0
 206 00a8 08E0     		b	.L2
 207              	.LVL15:
 208              	.L6:
 128:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     } else
 209              		.loc 1 128 0
 210 00aa 0320     		movs	r0, #3
 211              	.LVL16:
 212 00ac 06E0     		b	.L2
 213              	.LVL17:
 214              	.L7:
 134:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     } else {
 215              		.loc 1 134 0
 216 00ae 0420     		movs	r0, #4
 217              	.LVL18:
 218 00b0 04E0     		b	.L2
 219              	.L8:
 220              		.loc 1 156 0
 221 00b2 0020     		movs	r0, #0
 222 00b4 02E0     		b	.L2
 223              	.LVL19:
 224              	.L9:
 225 00b6 0020     		movs	r0, #0
 226              	.LVL20:
 227 00b8 00E0     		b	.L2
 228              	.LVL21:
 229              	.L10:
 230 00ba 0020     		movs	r0, #0
 231              	.LVL22:
 232              	.L2:
 233              	.LBB95:
 234              	.LBB96:
 235              	.LBB97:
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 236              		.loc 2 232 0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 29


 237              		.syntax unified
 238              	@ 232 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 239 00bc 85F31088 		msr primask, r5
 240              	@ 0 "" 2
 241              	.LVL23:
 242              		.thumb
 243              		.syntax unified
 244              	.LBE97:
 245              	.LBE96:
 246              	.LBE95:
 157:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     }
 158:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** #if (defined(__RN_TASK__)) || (defined(EE_AS_RPC__))
 159:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   }
 160:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** #endif /* __RN_TASK__ || EE_AS_RPC__ */
 161:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** 
 162:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   if ( ev != E_OK ) {
 163:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     EE_ORTI_set_lasterror(ev);
 164:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****     EE_oo_notify_error_ActivateTask(TaskID, ev);
 165:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   }
 166:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** 
 167:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   EE_ORTI_set_service_out(EE_SERVICETRACE_ACTIVATETASK);
 168:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   EE_OS_EXIT_CRITICAL_SECTION();
 169:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** 
 170:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c ****   return ev;
 171:Generated_Source\PSoC5/ErikaOS_1_ee_activate.c **** }
 247              		.loc 1 171 0
 248 00c0 38BD     		pop	{r3, r4, r5, pc}
 249              	.L13:
 250 00c2 00BF     		.align	2
 251              	.L12:
 252 00c4 00000000 		.word	EE_th_rnact
 253 00c8 00000000 		.word	EE_th_status
 254 00cc 00000000 		.word	EE_th_event_active
 255 00d0 00000000 		.word	EE_IRQ_nesting_level
 256 00d4 00000000 		.word	EE_stkfirst
 257 00d8 00000000 		.word	EE_th_ready_prio
 258 00dc 00000000 		.word	EE_sys_ceiling
 259 00e0 00000000 		.word	EE_th_dispatch_prio
 260 00e4 00000000 		.word	EE_th_waswaiting
 261              		.cfi_endproc
 262              	.LFE59:
 263              		.size	EE_oo_ActivateTask, .-EE_oo_ActivateTask
 264              		.text
 265              	.Letext0:
 266              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 267              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
 268              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_as_internal.inc"
 269              		.file 9 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_internal.inc"
 270              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 271              		.section	.debug_info,"",%progbits
 272              	.Ldebug_info0:
 273 0000 3D060000 		.4byte	0x63d
 274 0004 0400     		.2byte	0x4
 275 0006 00000000 		.4byte	.Ldebug_abbrev0
 276 000a 04       		.byte	0x4
 277 000b 01       		.uleb128 0x1
 278 000c 23050000 		.4byte	.LASF80
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 30


 279 0010 0C       		.byte	0xc
 280 0011 01040000 		.4byte	.LASF81
 281 0015 2A060000 		.4byte	.LASF82
 282 0019 30000000 		.4byte	.Ldebug_ranges0+0x30
 283 001d 00000000 		.4byte	0
 284 0021 00000000 		.4byte	.Ldebug_line0
 285 0025 02       		.uleb128 0x2
 286 0026 01       		.byte	0x1
 287 0027 06       		.byte	0x6
 288 0028 B3020000 		.4byte	.LASF0
 289 002c 02       		.uleb128 0x2
 290 002d 01       		.byte	0x1
 291 002e 08       		.byte	0x8
 292 002f 60020000 		.4byte	.LASF1
 293 0033 02       		.uleb128 0x2
 294 0034 02       		.byte	0x2
 295 0035 05       		.byte	0x5
 296 0036 81000000 		.4byte	.LASF2
 297 003a 02       		.uleb128 0x2
 298 003b 02       		.byte	0x2
 299 003c 07       		.byte	0x7
 300 003d 71030000 		.4byte	.LASF3
 301 0041 02       		.uleb128 0x2
 302 0042 04       		.byte	0x4
 303 0043 05       		.byte	0x5
 304 0044 B8010000 		.4byte	.LASF4
 305 0048 02       		.uleb128 0x2
 306 0049 04       		.byte	0x4
 307 004a 07       		.byte	0x7
 308 004b 43040000 		.4byte	.LASF5
 309 004f 02       		.uleb128 0x2
 310 0050 08       		.byte	0x8
 311 0051 05       		.byte	0x5
 312 0052 76010000 		.4byte	.LASF6
 313 0056 02       		.uleb128 0x2
 314 0057 08       		.byte	0x8
 315 0058 07       		.byte	0x7
 316 0059 BF020000 		.4byte	.LASF7
 317 005d 03       		.uleb128 0x3
 318 005e 04       		.byte	0x4
 319 005f 05       		.byte	0x5
 320 0060 696E7400 		.ascii	"int\000"
 321 0064 02       		.uleb128 0x2
 322 0065 04       		.byte	0x4
 323 0066 07       		.byte	0x7
 324 0067 1D030000 		.4byte	.LASF8
 325 006b 02       		.uleb128 0x2
 326 006c 08       		.byte	0x8
 327 006d 04       		.byte	0x4
 328 006e 2F020000 		.4byte	.LASF9
 329 0072 04       		.uleb128 0x4
 330 0073 28000000 		.4byte	.LASF10
 331 0077 06       		.byte	0x6
 332 0078 3E       		.byte	0x3e
 333 0079 2C000000 		.4byte	0x2c
 334 007d 04       		.uleb128 0x4
 335 007e 84010000 		.4byte	.LASF11
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 31


 336 0082 06       		.byte	0x6
 337 0083 3F       		.byte	0x3f
 338 0084 25000000 		.4byte	0x25
 339 0088 04       		.uleb128 0x4
 340 0089 99030000 		.4byte	.LASF12
 341 008d 06       		.byte	0x6
 342 008e 52       		.byte	0x52
 343 008f 3A000000 		.4byte	0x3a
 344 0093 04       		.uleb128 0x4
 345 0094 43030000 		.4byte	.LASF13
 346 0098 06       		.byte	0x6
 347 0099 53       		.byte	0x53
 348 009a 5D000000 		.4byte	0x5d
 349 009e 04       		.uleb128 0x4
 350 009f 9E000000 		.4byte	.LASF14
 351 00a3 06       		.byte	0x6
 352 00a4 54       		.byte	0x54
 353 00a5 64000000 		.4byte	0x64
 354 00a9 04       		.uleb128 0x4
 355 00aa 3F000000 		.4byte	.LASF15
 356 00ae 02       		.byte	0x2
 357 00af 4D       		.byte	0x4d
 358 00b0 9E000000 		.4byte	0x9e
 359 00b4 04       		.uleb128 0x4
 360 00b5 96000000 		.4byte	.LASF16
 361 00b9 02       		.byte	0x2
 362 00ba 4F       		.byte	0x4f
 363 00bb 9E000000 		.4byte	0x9e
 364 00bf 04       		.uleb128 0x4
 365 00c0 55040000 		.4byte	.LASF17
 366 00c4 02       		.byte	0x2
 367 00c5 54       		.byte	0x54
 368 00c6 A9000000 		.4byte	0xa9
 369 00ca 04       		.uleb128 0x4
 370 00cb C6000000 		.4byte	.LASF18
 371 00cf 02       		.byte	0x2
 372 00d0 78       		.byte	0x78
 373 00d1 93000000 		.4byte	0x93
 374 00d5 05       		.uleb128 0x5
 375 00d6 8C010000 		.4byte	.LASF19
 376 00da 07       		.byte	0x7
 377 00db 1101     		.2byte	0x111
 378 00dd 88000000 		.4byte	0x88
 379 00e1 05       		.uleb128 0x5
 380 00e2 57020000 		.4byte	.LASF20
 381 00e6 07       		.byte	0x7
 382 00e7 F701     		.2byte	0x1f7
 383 00e9 CA000000 		.4byte	0xca
 384 00ed 05       		.uleb128 0x5
 385 00ee 8B000000 		.4byte	.LASF21
 386 00f2 07       		.byte	0x7
 387 00f3 2103     		.2byte	0x321
 388 00f5 2C000000 		.4byte	0x2c
 389 00f9 06       		.uleb128 0x6
 390 00fa 01       		.byte	0x1
 391 00fb 2C000000 		.4byte	0x2c
 392 00ff 07       		.byte	0x7
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 32


 393 0100 5904     		.2byte	0x459
 394 0102 49010000 		.4byte	0x149
 395 0106 07       		.uleb128 0x7
 396 0107 19000000 		.4byte	.LASF22
 397 010b 00       		.byte	0
 398 010c 07       		.uleb128 0x7
 399 010d 64030000 		.4byte	.LASF23
 400 0111 01       		.byte	0x1
 401 0112 07       		.uleb128 0x7
 402 0113 B9000000 		.4byte	.LASF24
 403 0117 02       		.byte	0x2
 404 0118 07       		.uleb128 0x7
 405 0119 13010000 		.4byte	.LASF25
 406 011d 03       		.byte	0x3
 407 011e 07       		.uleb128 0x7
 408 011f 6D040000 		.4byte	.LASF26
 409 0123 04       		.byte	0x4
 410 0124 07       		.uleb128 0x7
 411 0125 B5040000 		.4byte	.LASF27
 412 0129 05       		.byte	0x5
 413 012a 07       		.uleb128 0x7
 414 012b E0040000 		.4byte	.LASF28
 415 012f 06       		.byte	0x6
 416 0130 07       		.uleb128 0x7
 417 0131 E0050000 		.4byte	.LASF29
 418 0135 07       		.byte	0x7
 419 0136 07       		.uleb128 0x7
 420 0137 84030000 		.4byte	.LASF30
 421 013b 08       		.byte	0x8
 422 013c 07       		.uleb128 0x7
 423 013d A3030000 		.4byte	.LASF31
 424 0141 09       		.byte	0x9
 425 0142 07       		.uleb128 0x7
 426 0143 69010000 		.4byte	.LASF32
 427 0147 0A       		.byte	0xa
 428 0148 00       		.byte	0
 429 0149 05       		.uleb128 0x5
 430 014a CD000000 		.4byte	.LASF33
 431 014e 07       		.byte	0x7
 432 014f 6504     		.2byte	0x465
 433 0151 F9000000 		.4byte	0xf9
 434 0155 08       		.uleb128 0x8
 435 0156 8A020000 		.4byte	.LASF83
 436 015a 02       		.byte	0x2
 437 015b F1       		.byte	0xf1
 438 015c B4000000 		.4byte	0xb4
 439 0160 03       		.byte	0x3
 440 0161 71010000 		.4byte	0x171
 441 0165 09       		.uleb128 0x9
 442 0166 E7000000 		.4byte	.LASF55
 443 016a 02       		.byte	0x2
 444 016b F4       		.byte	0xf4
 445 016c B4000000 		.4byte	0xb4
 446 0170 00       		.byte	0
 447 0171 0A       		.uleb128 0xa
 448 0172 EA030000 		.4byte	.LASF34
 449 0176 02       		.byte	0x2
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 33


 450 0177 DC       		.byte	0xdc
 451 0178 03       		.byte	0x3
 452 0179 87010000 		.4byte	0x187
 453 017d 0B       		.uleb128 0xb
 454 017e 6600     		.ascii	"f\000"
 455 0180 02       		.byte	0x2
 456 0181 DC       		.byte	0xdc
 457 0182 B4000000 		.4byte	0xb4
 458 0186 00       		.byte	0
 459 0187 0C       		.uleb128 0xc
 460 0188 C1010000 		.4byte	.LASF35
 461 018c 07       		.byte	0x7
 462 018d 9703     		.2byte	0x397
 463 018f 03       		.byte	0x3
 464 0190 A1010000 		.4byte	0x1a1
 465 0194 0D       		.uleb128 0xd
 466 0195 73727600 		.ascii	"srv\000"
 467 0199 07       		.byte	0x7
 468 019a 9703     		.2byte	0x397
 469 019c 72000000 		.4byte	0x72
 470 01a0 00       		.byte	0
 471 01a1 0C       		.uleb128 0xc
 472 01a2 D5010000 		.4byte	.LASF36
 473 01a6 07       		.byte	0x7
 474 01a7 8404     		.2byte	0x484
 475 01a9 03       		.byte	0x3
 476 01aa BB010000 		.4byte	0x1bb
 477 01ae 0D       		.uleb128 0xd
 478 01af 63747800 		.ascii	"ctx\000"
 479 01b3 07       		.byte	0x7
 480 01b4 8504     		.2byte	0x485
 481 01b6 49010000 		.4byte	0x149
 482 01ba 00       		.byte	0
 483 01bb 0C       		.uleb128 0xc
 484 01bc 9C010000 		.4byte	.LASF37
 485 01c0 03       		.byte	0x3
 486 01c1 2902     		.2byte	0x229
 487 01c3 03       		.byte	0x3
 488 01c4 D5010000 		.4byte	0x1d5
 489 01c8 0E       		.uleb128 0xe
 490 01c9 DC000000 		.4byte	.LASF38
 491 01cd 03       		.byte	0x3
 492 01ce 2902     		.2byte	0x229
 493 01d0 E1000000 		.4byte	0xe1
 494 01d4 00       		.byte	0
 495 01d5 0C       		.uleb128 0xc
 496 01d6 F1020000 		.4byte	.LASF39
 497 01da 03       		.byte	0x3
 498 01db 5B02     		.2byte	0x25b
 499 01dd 03       		.byte	0x3
 500 01de EF010000 		.4byte	0x1ef
 501 01e2 0E       		.uleb128 0xe
 502 01e3 06020000 		.4byte	.LASF40
 503 01e7 03       		.byte	0x3
 504 01e8 5B02     		.2byte	0x25b
 505 01ea E1000000 		.4byte	0xe1
 506 01ee 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 34


 507 01ef 0A       		.uleb128 0xa
 508 01f0 A2020000 		.4byte	.LASF41
 509 01f4 05       		.byte	0x5
 510 01f5 98       		.byte	0x98
 511 01f6 03       		.byte	0x3
 512 01f7 07020000 		.4byte	0x207
 513 01fb 0B       		.uleb128 0xb
 514 01fc 74696400 		.ascii	"tid\000"
 515 0200 05       		.byte	0x5
 516 0201 98       		.byte	0x98
 517 0202 CA000000 		.4byte	0xca
 518 0206 00       		.byte	0
 519 0207 0F       		.uleb128 0xf
 520 0208 C9050000 		.4byte	.LASF43
 521 020c 03       		.byte	0x3
 522 020d 8D01     		.2byte	0x18d
 523 020f 03       		.byte	0x3
 524 0210 0A       		.uleb128 0xa
 525 0211 F1010000 		.4byte	.LASF42
 526 0215 05       		.byte	0x5
 527 0216 A5       		.byte	0xa5
 528 0217 03       		.byte	0x3
 529 0218 28020000 		.4byte	0x228
 530 021c 0B       		.uleb128 0xb
 531 021d 74696400 		.ascii	"tid\000"
 532 0221 05       		.byte	0x5
 533 0222 A5       		.byte	0xa5
 534 0223 CA000000 		.4byte	0xca
 535 0227 00       		.byte	0
 536 0228 10       		.uleb128 0x10
 537 0229 0B030000 		.4byte	.LASF48
 538 022d 03       		.byte	0x3
 539 022e EE       		.byte	0xee
 540 022f CA000000 		.4byte	0xca
 541 0233 03       		.byte	0x3
 542 0234 0F       		.uleb128 0xf
 543 0235 4C030000 		.4byte	.LASF44
 544 0239 03       		.byte	0x3
 545 023a 9A01     		.2byte	0x19a
 546 023c 03       		.byte	0x3
 547 023d 0C       		.uleb128 0xc
 548 023e B9030000 		.4byte	.LASF45
 549 0242 07       		.byte	0x7
 550 0243 D203     		.2byte	0x3d2
 551 0245 03       		.byte	0x3
 552 0246 57020000 		.4byte	0x257
 553 024a 0D       		.uleb128 0xd
 554 024b 746D7000 		.ascii	"tmp\000"
 555 024f 07       		.byte	0x7
 556 0250 D203     		.2byte	0x3d2
 557 0252 CA000000 		.4byte	0xca
 558 0256 00       		.byte	0
 559 0257 0F       		.uleb128 0xf
 560 0258 D6020000 		.4byte	.LASF46
 561 025c 08       		.byte	0x8
 562 025d AB01     		.2byte	0x1ab
 563 025f 03       		.byte	0x3
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 35


 564 0260 0C       		.uleb128 0xc
 565 0261 25010000 		.4byte	.LASF47
 566 0265 07       		.byte	0x7
 567 0266 A303     		.2byte	0x3a3
 568 0268 03       		.byte	0x3
 569 0269 79020000 		.4byte	0x279
 570 026d 0D       		.uleb128 0xd
 571 026e 696400   		.ascii	"id\000"
 572 0271 07       		.byte	0x7
 573 0272 A303     		.2byte	0x3a3
 574 0274 72000000 		.4byte	0x72
 575 0278 00       		.byte	0
 576 0279 10       		.uleb128 0x10
 577 027a 0C060000 		.4byte	.LASF49
 578 027e 09       		.byte	0x9
 579 027f 60       		.byte	0x60
 580 0280 B4000000 		.4byte	0xb4
 581 0284 03       		.byte	0x3
 582 0285 10       		.uleb128 0x10
 583 0286 84040000 		.4byte	.LASF50
 584 028a 04       		.byte	0x4
 585 028b 4D       		.byte	0x4d
 586 028c A9000000 		.4byte	0xa9
 587 0290 03       		.byte	0x3
 588 0291 0A       		.uleb128 0xa
 589 0292 6E020000 		.4byte	.LASF51
 590 0296 09       		.byte	0x9
 591 0297 68       		.byte	0x68
 592 0298 03       		.byte	0x3
 593 0299 A7020000 		.4byte	0x2a7
 594 029d 0B       		.uleb128 0xb
 595 029e 6600     		.ascii	"f\000"
 596 02a0 09       		.byte	0x9
 597 02a1 68       		.byte	0x68
 598 02a2 B4000000 		.4byte	0xb4
 599 02a6 00       		.byte	0
 600 02a7 0C       		.uleb128 0xc
 601 02a8 F4050000 		.4byte	.LASF52
 602 02ac 07       		.byte	0x7
 603 02ad A803     		.2byte	0x3a8
 604 02af 03       		.byte	0x3
 605 02b0 C0020000 		.4byte	0x2c0
 606 02b4 0D       		.uleb128 0xd
 607 02b5 696400   		.ascii	"id\000"
 608 02b8 07       		.byte	0x7
 609 02b9 A803     		.2byte	0x3a8
 610 02bb 72000000 		.4byte	0x72
 611 02bf 00       		.byte	0
 612 02c0 0C       		.uleb128 0xc
 613 02c1 67000000 		.4byte	.LASF53
 614 02c5 03       		.byte	0x3
 615 02c6 6F02     		.2byte	0x26f
 616 02c8 03       		.byte	0x3
 617 02c9 DA020000 		.4byte	0x2da
 618 02cd 0D       		.uleb128 0xd
 619 02ce 74696400 		.ascii	"tid\000"
 620 02d2 03       		.byte	0x3
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 36


 621 02d3 6F02     		.2byte	0x26f
 622 02d5 E1000000 		.4byte	0xe1
 623 02d9 00       		.byte	0
 624 02da 0C       		.uleb128 0xc
 625 02db C9040000 		.4byte	.LASF54
 626 02df 03       		.byte	0x3
 627 02e0 8002     		.2byte	0x280
 628 02e2 03       		.byte	0x3
 629 02e3 FF020000 		.4byte	0x2ff
 630 02e7 11       		.uleb128 0x11
 631 02e8 0B050000 		.4byte	.LASF56
 632 02ec 03       		.byte	0x3
 633 02ed 8202     		.2byte	0x282
 634 02ef CA000000 		.4byte	0xca
 635 02f3 12       		.uleb128 0x12
 636 02f4 727100   		.ascii	"rq\000"
 637 02f7 03       		.byte	0x3
 638 02f8 8202     		.2byte	0x282
 639 02fa CA000000 		.4byte	0xca
 640 02fe 00       		.byte	0
 641 02ff 0C       		.uleb128 0xc
 642 0300 55010000 		.4byte	.LASF57
 643 0304 03       		.byte	0x3
 644 0305 3202     		.2byte	0x232
 645 0307 03       		.byte	0x3
 646 0308 19030000 		.4byte	0x319
 647 030c 12       		.uleb128 0x12
 648 030d 746D7000 		.ascii	"tmp\000"
 649 0311 03       		.byte	0x3
 650 0312 3402     		.2byte	0x234
 651 0314 E1000000 		.4byte	0xe1
 652 0318 00       		.byte	0
 653 0319 13       		.uleb128 0x13
 654 031a 1C020000 		.4byte	.LASF84
 655 031e 01       		.byte	0x1
 656 031f 42       		.byte	0x42
 657 0320 ED000000 		.4byte	0xed
 658 0324 00000000 		.4byte	.LFB59
 659 0328 E8000000 		.4byte	.LFE59-.LFB59
 660 032c 01       		.uleb128 0x1
 661 032d 9C       		.byte	0x9c
 662 032e ED040000 		.4byte	0x4ed
 663 0332 14       		.uleb128 0x14
 664 0333 06020000 		.4byte	.LASF40
 665 0337 01       		.byte	0x1
 666 0338 42       		.byte	0x42
 667 0339 E1000000 		.4byte	0xe1
 668 033d 00000000 		.4byte	.LLST0
 669 0341 15       		.uleb128 0x15
 670 0342 657600   		.ascii	"ev\000"
 671 0345 01       		.byte	0x1
 672 0346 45       		.byte	0x45
 673 0347 ED000000 		.4byte	0xed
 674 034b 01       		.uleb128 0x1
 675 034c 50       		.byte	0x50
 676 034d 16       		.uleb128 0x16
 677 034e 13050000 		.4byte	.LASF58
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 37


 678 0352 01       		.byte	0x1
 679 0353 47       		.byte	0x47
 680 0354 B4000000 		.4byte	0xb4
 681 0358 01       		.uleb128 0x1
 682 0359 55       		.byte	0x55
 683 035a 17       		.uleb128 0x17
 684 035b 79020000 		.4byte	0x279
 685 035f 02000000 		.4byte	.LBB70
 686 0363 06000000 		.4byte	.LBE70-.LBB70
 687 0367 01       		.byte	0x1
 688 0368 47       		.byte	0x47
 689 0369 91030000 		.4byte	0x391
 690 036d 18       		.uleb128 0x18
 691 036e 55010000 		.4byte	0x155
 692 0372 02000000 		.4byte	.LBB71
 693 0376 06000000 		.4byte	.LBE71-.LBB71
 694 037a 09       		.byte	0x9
 695 037b 62       		.byte	0x62
 696 037c 19       		.uleb128 0x19
 697 037d 02000000 		.4byte	.LBB72
 698 0381 06000000 		.4byte	.LBE72-.LBB72
 699 0385 1A       		.uleb128 0x1a
 700 0386 65010000 		.4byte	0x165
 701 038a 53000000 		.4byte	.LLST1
 702 038e 00       		.byte	0
 703 038f 00       		.byte	0
 704 0390 00       		.byte	0
 705 0391 17       		.uleb128 0x17
 706 0392 C0020000 		.4byte	0x2c0
 707 0396 16000000 		.4byte	.LBB73
 708 039a 26000000 		.4byte	.LBE73-.LBB73
 709 039e 01       		.byte	0x1
 710 039f 93       		.byte	0x93
 711 03a0 EF030000 		.4byte	0x3ef
 712 03a4 1B       		.uleb128 0x1b
 713 03a5 CD020000 		.4byte	0x2cd
 714 03a9 66000000 		.4byte	.LLST2
 715 03ad 1C       		.uleb128 0x1c
 716 03ae D5010000 		.4byte	0x1d5
 717 03b2 1E000000 		.4byte	.LBB75
 718 03b6 1A000000 		.4byte	.LBE75-.LBB75
 719 03ba 03       		.byte	0x3
 720 03bb 7402     		.2byte	0x274
 721 03bd E5030000 		.4byte	0x3e5
 722 03c1 1B       		.uleb128 0x1b
 723 03c2 E2010000 		.4byte	0x1e2
 724 03c6 87000000 		.4byte	.LLST3
 725 03ca 1D       		.uleb128 0x1d
 726 03cb BB010000 		.4byte	0x1bb
 727 03cf 30000000 		.4byte	.LBB77
 728 03d3 08000000 		.4byte	.LBE77-.LBB77
 729 03d7 03       		.byte	0x3
 730 03d8 5F02     		.2byte	0x25f
 731 03da 1B       		.uleb128 0x1b
 732 03db C8010000 		.4byte	0x1c8
 733 03df 9A000000 		.4byte	.LLST4
 734 03e3 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 38


 735 03e4 00       		.byte	0
 736 03e5 1E       		.uleb128 0x1e
 737 03e6 3C000000 		.4byte	.LVL7
 738 03ea 11060000 		.4byte	0x611
 739 03ee 00       		.byte	0
 740 03ef 1F       		.uleb128 0x1f
 741 03f0 85020000 		.4byte	0x285
 742 03f4 3C000000 		.4byte	.LBB79
 743 03f8 04000000 		.4byte	.LBE79-.LBB79
 744 03fc 01       		.byte	0x1
 745 03fd 97       		.byte	0x97
 746 03fe 20       		.uleb128 0x20
 747 03ff DA020000 		.4byte	0x2da
 748 0403 44000000 		.4byte	.LBB81
 749 0407 00000000 		.4byte	.Ldebug_ranges0+0
 750 040b 01       		.byte	0x1
 751 040c 99       		.byte	0x99
 752 040d BA040000 		.4byte	0x4ba
 753 0411 21       		.uleb128 0x21
 754 0412 00000000 		.4byte	.Ldebug_ranges0+0
 755 0416 22       		.uleb128 0x22
 756 0417 E7020000 		.4byte	0x2e7
 757 041b 1A       		.uleb128 0x1a
 758 041c F3020000 		.4byte	0x2f3
 759 0420 AD000000 		.4byte	.LLST5
 760 0424 23       		.uleb128 0x23
 761 0425 28020000 		.4byte	0x228
 762 0429 44000000 		.4byte	.LBB83
 763 042d 04000000 		.4byte	.LBE83-.LBB83
 764 0431 03       		.byte	0x3
 765 0432 8502     		.2byte	0x285
 766 0434 24       		.uleb128 0x24
 767 0435 FF020000 		.4byte	0x2ff
 768 0439 82000000 		.4byte	.LBB85
 769 043d 18000000 		.4byte	.Ldebug_ranges0+0x18
 770 0441 03       		.byte	0x3
 771 0442 B802     		.2byte	0x2b8
 772 0444 AF040000 		.4byte	0x4af
 773 0448 21       		.uleb128 0x21
 774 0449 18000000 		.4byte	.Ldebug_ranges0+0x18
 775 044d 1A       		.uleb128 0x1a
 776 044e 0C030000 		.4byte	0x30c
 777 0452 D6000000 		.4byte	.LLST6
 778 0456 1C       		.uleb128 0x1c
 779 0457 EF010000 		.4byte	0x1ef
 780 045b 96000000 		.4byte	.LBB87
 781 045f 08000000 		.4byte	.LBE87-.LBB87
 782 0463 03       		.byte	0x3
 783 0464 3C02     		.2byte	0x23c
 784 0466 7D040000 		.4byte	0x47d
 785 046a 1B       		.uleb128 0x1b
 786 046b FB010000 		.4byte	0x1fb
 787 046f F4000000 		.4byte	.LLST7
 788 0473 1E       		.uleb128 0x1e
 789 0474 9E000000 		.4byte	.LVL12
 790 0478 1D060000 		.4byte	0x61d
 791 047c 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 39


 792 047d 1C       		.uleb128 0x1c
 793 047e 10020000 		.4byte	0x210
 794 0482 A2000000 		.4byte	.LBB89
 795 0486 04000000 		.4byte	.LBE89-.LBB89
 796 048a 03       		.byte	0x3
 797 048b 3F02     		.2byte	0x23f
 798 048d A4040000 		.4byte	0x4a4
 799 0491 1B       		.uleb128 0x1b
 800 0492 1C020000 		.4byte	0x21c
 801 0496 07010000 		.4byte	.LLST8
 802 049a 1E       		.uleb128 0x1e
 803 049b A6000000 		.4byte	.LVL14
 804 049f 1D060000 		.4byte	0x61d
 805 04a3 00       		.byte	0
 806 04a4 1E       		.uleb128 0x1e
 807 04a5 86000000 		.4byte	.LVL9
 808 04a9 28060000 		.4byte	0x628
 809 04ad 00       		.byte	0
 810 04ae 00       		.byte	0
 811 04af 1E       		.uleb128 0x1e
 812 04b0 4C000000 		.4byte	.LVL8
 813 04b4 34060000 		.4byte	0x634
 814 04b8 00       		.byte	0
 815 04b9 00       		.byte	0
 816 04ba 18       		.uleb128 0x18
 817 04bb 91020000 		.4byte	0x291
 818 04bf BC000000 		.4byte	.LBB95
 819 04c3 04000000 		.4byte	.LBE95-.LBB95
 820 04c7 01       		.byte	0x1
 821 04c8 A8       		.byte	0xa8
 822 04c9 1B       		.uleb128 0x1b
 823 04ca 9D020000 		.4byte	0x29d
 824 04ce 1A010000 		.4byte	.LLST9
 825 04d2 18       		.uleb128 0x18
 826 04d3 71010000 		.4byte	0x171
 827 04d7 BC000000 		.4byte	.LBB96
 828 04db 04000000 		.4byte	.LBE96-.LBB96
 829 04df 09       		.byte	0x9
 830 04e0 6A       		.byte	0x6a
 831 04e1 1B       		.uleb128 0x1b
 832 04e2 7D010000 		.4byte	0x17d
 833 04e6 1A010000 		.4byte	.LLST9
 834 04ea 00       		.byte	0
 835 04eb 00       		.byte	0
 836 04ec 00       		.byte	0
 837 04ed 25       		.uleb128 0x25
 838 04ee FE000000 		.4byte	.LASF59
 839 04f2 04       		.byte	0x4
 840 04f3 44       		.byte	0x44
 841 04f4 A9000000 		.4byte	0xa9
 842 04f8 25       		.uleb128 0x25
 843 04f9 00000000 		.4byte	.LASF60
 844 04fd 05       		.byte	0x5
 845 04fe 48       		.byte	0x48
 846 04ff CA000000 		.4byte	0xca
 847 0503 26       		.uleb128 0x26
 848 0504 1A050000 		.4byte	0x51a
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 40


 849 0508 13050000 		.4byte	0x513
 850 050c 27       		.uleb128 0x27
 851 050d 13050000 		.4byte	0x513
 852 0511 02       		.byte	0x2
 853 0512 00       		.byte	0
 854 0513 02       		.uleb128 0x2
 855 0514 04       		.byte	0x4
 856 0515 07       		.byte	0x7
 857 0516 F5040000 		.4byte	.LASF61
 858 051a 28       		.uleb128 0x28
 859 051b A9000000 		.4byte	0xa9
 860 051f 25       		.uleb128 0x25
 861 0520 A8000000 		.4byte	.LASF62
 862 0524 07       		.byte	0x7
 863 0525 B2       		.byte	0xb2
 864 0526 2A050000 		.4byte	0x52a
 865 052a 28       		.uleb128 0x28
 866 052b 03050000 		.4byte	0x503
 867 052f 25       		.uleb128 0x25
 868 0530 A1040000 		.4byte	.LASF63
 869 0534 07       		.byte	0x7
 870 0535 B3       		.byte	0xb3
 871 0536 3A050000 		.4byte	0x53a
 872 053a 28       		.uleb128 0x28
 873 053b 03050000 		.4byte	0x503
 874 053f 26       		.uleb128 0x26
 875 0540 A9000000 		.4byte	0xa9
 876 0544 4F050000 		.4byte	0x54f
 877 0548 27       		.uleb128 0x27
 878 0549 13050000 		.4byte	0x513
 879 054d 02       		.byte	0x2
 880 054e 00       		.byte	0
 881 054f 25       		.uleb128 0x25
 882 0550 2A030000 		.4byte	.LASF64
 883 0554 07       		.byte	0x7
 884 0555 CA       		.byte	0xca
 885 0556 3F050000 		.4byte	0x53f
 886 055a 26       		.uleb128 0x26
 887 055b CA000000 		.4byte	0xca
 888 055f 6A050000 		.4byte	0x56a
 889 0563 27       		.uleb128 0x27
 890 0564 13050000 		.4byte	0x513
 891 0568 02       		.byte	0x2
 892 0569 00       		.byte	0
 893 056a 25       		.uleb128 0x25
 894 056b 18050000 		.4byte	.LASF65
 895 056f 07       		.byte	0x7
 896 0570 D2       		.byte	0xd2
 897 0571 5A050000 		.4byte	0x55a
 898 0575 25       		.uleb128 0x25
 899 0576 37030000 		.4byte	.LASF66
 900 057a 07       		.byte	0x7
 901 057b DA       		.byte	0xda
 902 057c 3F050000 		.4byte	0x53f
 903 0580 25       		.uleb128 0x25
 904 0581 61040000 		.4byte	.LASF67
 905 0585 07       		.byte	0x7
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 41


 906 0586 E2       		.byte	0xe2
 907 0587 CA000000 		.4byte	0xca
 908 058b 25       		.uleb128 0x25
 909 058c 0D020000 		.4byte	.LASF68
 910 0590 07       		.byte	0x7
 911 0591 F7       		.byte	0xf7
 912 0592 A9000000 		.4byte	0xa9
 913 0596 29       		.uleb128 0x29
 914 0597 31000000 		.4byte	.LASF69
 915 059b 07       		.byte	0x7
 916 059c 3F01     		.2byte	0x13f
 917 059e D5000000 		.4byte	0xd5
 918 05a2 29       		.uleb128 0x29
 919 05a3 54000000 		.4byte	.LASF70
 920 05a7 07       		.byte	0x7
 921 05a8 5C01     		.2byte	0x15c
 922 05aa 3F050000 		.4byte	0x53f
 923 05ae 26       		.uleb128 0x26
 924 05af BF000000 		.4byte	0xbf
 925 05b3 BE050000 		.4byte	0x5be
 926 05b7 27       		.uleb128 0x27
 927 05b8 13050000 		.4byte	0x513
 928 05bc 02       		.byte	0x2
 929 05bd 00       		.byte	0
 930 05be 29       		.uleb128 0x29
 931 05bf ED000000 		.4byte	.LASF71
 932 05c3 07       		.byte	0x7
 933 05c4 6701     		.2byte	0x167
 934 05c6 AE050000 		.4byte	0x5ae
 935 05ca 25       		.uleb128 0x25
 936 05cb B1050000 		.4byte	.LASF72
 937 05cf 0A       		.byte	0xa
 938 05d0 40       		.byte	0x40
 939 05d1 A9000000 		.4byte	0xa9
 940 05d5 25       		.uleb128 0x25
 941 05d6 3C010000 		.4byte	.LASF73
 942 05da 0A       		.byte	0xa
 943 05db 47       		.byte	0x47
 944 05dc B4000000 		.4byte	0xb4
 945 05e0 25       		.uleb128 0x25
 946 05e1 30040000 		.4byte	.LASF74
 947 05e5 0A       		.byte	0xa
 948 05e6 4A       		.byte	0x4a
 949 05e7 A9000000 		.4byte	0xa9
 950 05eb 26       		.uleb128 0x26
 951 05ec FB050000 		.4byte	0x5fb
 952 05f0 FB050000 		.4byte	0x5fb
 953 05f4 27       		.uleb128 0x27
 954 05f5 13050000 		.4byte	0x513
 955 05f9 FF       		.byte	0xff
 956 05fa 00       		.byte	0
 957 05fb 28       		.uleb128 0x28
 958 05fc 7D000000 		.4byte	0x7d
 959 0600 29       		.uleb128 0x29
 960 0601 FE040000 		.4byte	.LASF75
 961 0605 03       		.byte	0x3
 962 0606 AB01     		.2byte	0x1ab
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 42


 963 0608 0C060000 		.4byte	0x60c
 964 060c 28       		.uleb128 0x28
 965 060d EB050000 		.4byte	0x5eb
 966 0611 2A       		.uleb128 0x2a
 967 0612 47000000 		.4byte	.LASF76
 968 0616 47000000 		.4byte	.LASF76
 969 061a 03       		.byte	0x3
 970 061b E401     		.2byte	0x1e4
 971 061d 2B       		.uleb128 0x2b
 972 061e 3B020000 		.4byte	.LASF77
 973 0622 3B020000 		.4byte	.LASF77
 974 0626 05       		.byte	0x5
 975 0627 4F       		.byte	0x4f
 976 0628 2A       		.uleb128 0x2a
 977 0629 87060000 		.4byte	.LASF78
 978 062d 87060000 		.4byte	.LASF78
 979 0631 03       		.byte	0x3
 980 0632 E901     		.2byte	0x1e9
 981 0634 2A       		.uleb128 0x2a
 982 0635 D9030000 		.4byte	.LASF79
 983 0639 D9030000 		.4byte	.LASF79
 984 063d 03       		.byte	0x3
 985 063e CB01     		.2byte	0x1cb
 986 0640 00       		.byte	0
 987              		.section	.debug_abbrev,"",%progbits
 988              	.Ldebug_abbrev0:
 989 0000 01       		.uleb128 0x1
 990 0001 11       		.uleb128 0x11
 991 0002 01       		.byte	0x1
 992 0003 25       		.uleb128 0x25
 993 0004 0E       		.uleb128 0xe
 994 0005 13       		.uleb128 0x13
 995 0006 0B       		.uleb128 0xb
 996 0007 03       		.uleb128 0x3
 997 0008 0E       		.uleb128 0xe
 998 0009 1B       		.uleb128 0x1b
 999 000a 0E       		.uleb128 0xe
 1000 000b 55       		.uleb128 0x55
 1001 000c 17       		.uleb128 0x17
 1002 000d 11       		.uleb128 0x11
 1003 000e 01       		.uleb128 0x1
 1004 000f 10       		.uleb128 0x10
 1005 0010 17       		.uleb128 0x17
 1006 0011 00       		.byte	0
 1007 0012 00       		.byte	0
 1008 0013 02       		.uleb128 0x2
 1009 0014 24       		.uleb128 0x24
 1010 0015 00       		.byte	0
 1011 0016 0B       		.uleb128 0xb
 1012 0017 0B       		.uleb128 0xb
 1013 0018 3E       		.uleb128 0x3e
 1014 0019 0B       		.uleb128 0xb
 1015 001a 03       		.uleb128 0x3
 1016 001b 0E       		.uleb128 0xe
 1017 001c 00       		.byte	0
 1018 001d 00       		.byte	0
 1019 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 43


 1020 001f 24       		.uleb128 0x24
 1021 0020 00       		.byte	0
 1022 0021 0B       		.uleb128 0xb
 1023 0022 0B       		.uleb128 0xb
 1024 0023 3E       		.uleb128 0x3e
 1025 0024 0B       		.uleb128 0xb
 1026 0025 03       		.uleb128 0x3
 1027 0026 08       		.uleb128 0x8
 1028 0027 00       		.byte	0
 1029 0028 00       		.byte	0
 1030 0029 04       		.uleb128 0x4
 1031 002a 16       		.uleb128 0x16
 1032 002b 00       		.byte	0
 1033 002c 03       		.uleb128 0x3
 1034 002d 0E       		.uleb128 0xe
 1035 002e 3A       		.uleb128 0x3a
 1036 002f 0B       		.uleb128 0xb
 1037 0030 3B       		.uleb128 0x3b
 1038 0031 0B       		.uleb128 0xb
 1039 0032 49       		.uleb128 0x49
 1040 0033 13       		.uleb128 0x13
 1041 0034 00       		.byte	0
 1042 0035 00       		.byte	0
 1043 0036 05       		.uleb128 0x5
 1044 0037 16       		.uleb128 0x16
 1045 0038 00       		.byte	0
 1046 0039 03       		.uleb128 0x3
 1047 003a 0E       		.uleb128 0xe
 1048 003b 3A       		.uleb128 0x3a
 1049 003c 0B       		.uleb128 0xb
 1050 003d 3B       		.uleb128 0x3b
 1051 003e 05       		.uleb128 0x5
 1052 003f 49       		.uleb128 0x49
 1053 0040 13       		.uleb128 0x13
 1054 0041 00       		.byte	0
 1055 0042 00       		.byte	0
 1056 0043 06       		.uleb128 0x6
 1057 0044 04       		.uleb128 0x4
 1058 0045 01       		.byte	0x1
 1059 0046 0B       		.uleb128 0xb
 1060 0047 0B       		.uleb128 0xb
 1061 0048 49       		.uleb128 0x49
 1062 0049 13       		.uleb128 0x13
 1063 004a 3A       		.uleb128 0x3a
 1064 004b 0B       		.uleb128 0xb
 1065 004c 3B       		.uleb128 0x3b
 1066 004d 05       		.uleb128 0x5
 1067 004e 01       		.uleb128 0x1
 1068 004f 13       		.uleb128 0x13
 1069 0050 00       		.byte	0
 1070 0051 00       		.byte	0
 1071 0052 07       		.uleb128 0x7
 1072 0053 28       		.uleb128 0x28
 1073 0054 00       		.byte	0
 1074 0055 03       		.uleb128 0x3
 1075 0056 0E       		.uleb128 0xe
 1076 0057 1C       		.uleb128 0x1c
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 44


 1077 0058 0B       		.uleb128 0xb
 1078 0059 00       		.byte	0
 1079 005a 00       		.byte	0
 1080 005b 08       		.uleb128 0x8
 1081 005c 2E       		.uleb128 0x2e
 1082 005d 01       		.byte	0x1
 1083 005e 03       		.uleb128 0x3
 1084 005f 0E       		.uleb128 0xe
 1085 0060 3A       		.uleb128 0x3a
 1086 0061 0B       		.uleb128 0xb
 1087 0062 3B       		.uleb128 0x3b
 1088 0063 0B       		.uleb128 0xb
 1089 0064 27       		.uleb128 0x27
 1090 0065 19       		.uleb128 0x19
 1091 0066 49       		.uleb128 0x49
 1092 0067 13       		.uleb128 0x13
 1093 0068 20       		.uleb128 0x20
 1094 0069 0B       		.uleb128 0xb
 1095 006a 01       		.uleb128 0x1
 1096 006b 13       		.uleb128 0x13
 1097 006c 00       		.byte	0
 1098 006d 00       		.byte	0
 1099 006e 09       		.uleb128 0x9
 1100 006f 34       		.uleb128 0x34
 1101 0070 00       		.byte	0
 1102 0071 03       		.uleb128 0x3
 1103 0072 0E       		.uleb128 0xe
 1104 0073 3A       		.uleb128 0x3a
 1105 0074 0B       		.uleb128 0xb
 1106 0075 3B       		.uleb128 0x3b
 1107 0076 0B       		.uleb128 0xb
 1108 0077 49       		.uleb128 0x49
 1109 0078 13       		.uleb128 0x13
 1110 0079 00       		.byte	0
 1111 007a 00       		.byte	0
 1112 007b 0A       		.uleb128 0xa
 1113 007c 2E       		.uleb128 0x2e
 1114 007d 01       		.byte	0x1
 1115 007e 03       		.uleb128 0x3
 1116 007f 0E       		.uleb128 0xe
 1117 0080 3A       		.uleb128 0x3a
 1118 0081 0B       		.uleb128 0xb
 1119 0082 3B       		.uleb128 0x3b
 1120 0083 0B       		.uleb128 0xb
 1121 0084 27       		.uleb128 0x27
 1122 0085 19       		.uleb128 0x19
 1123 0086 20       		.uleb128 0x20
 1124 0087 0B       		.uleb128 0xb
 1125 0088 01       		.uleb128 0x1
 1126 0089 13       		.uleb128 0x13
 1127 008a 00       		.byte	0
 1128 008b 00       		.byte	0
 1129 008c 0B       		.uleb128 0xb
 1130 008d 05       		.uleb128 0x5
 1131 008e 00       		.byte	0
 1132 008f 03       		.uleb128 0x3
 1133 0090 08       		.uleb128 0x8
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 45


 1134 0091 3A       		.uleb128 0x3a
 1135 0092 0B       		.uleb128 0xb
 1136 0093 3B       		.uleb128 0x3b
 1137 0094 0B       		.uleb128 0xb
 1138 0095 49       		.uleb128 0x49
 1139 0096 13       		.uleb128 0x13
 1140 0097 00       		.byte	0
 1141 0098 00       		.byte	0
 1142 0099 0C       		.uleb128 0xc
 1143 009a 2E       		.uleb128 0x2e
 1144 009b 01       		.byte	0x1
 1145 009c 03       		.uleb128 0x3
 1146 009d 0E       		.uleb128 0xe
 1147 009e 3A       		.uleb128 0x3a
 1148 009f 0B       		.uleb128 0xb
 1149 00a0 3B       		.uleb128 0x3b
 1150 00a1 05       		.uleb128 0x5
 1151 00a2 27       		.uleb128 0x27
 1152 00a3 19       		.uleb128 0x19
 1153 00a4 20       		.uleb128 0x20
 1154 00a5 0B       		.uleb128 0xb
 1155 00a6 01       		.uleb128 0x1
 1156 00a7 13       		.uleb128 0x13
 1157 00a8 00       		.byte	0
 1158 00a9 00       		.byte	0
 1159 00aa 0D       		.uleb128 0xd
 1160 00ab 05       		.uleb128 0x5
 1161 00ac 00       		.byte	0
 1162 00ad 03       		.uleb128 0x3
 1163 00ae 08       		.uleb128 0x8
 1164 00af 3A       		.uleb128 0x3a
 1165 00b0 0B       		.uleb128 0xb
 1166 00b1 3B       		.uleb128 0x3b
 1167 00b2 05       		.uleb128 0x5
 1168 00b3 49       		.uleb128 0x49
 1169 00b4 13       		.uleb128 0x13
 1170 00b5 00       		.byte	0
 1171 00b6 00       		.byte	0
 1172 00b7 0E       		.uleb128 0xe
 1173 00b8 05       		.uleb128 0x5
 1174 00b9 00       		.byte	0
 1175 00ba 03       		.uleb128 0x3
 1176 00bb 0E       		.uleb128 0xe
 1177 00bc 3A       		.uleb128 0x3a
 1178 00bd 0B       		.uleb128 0xb
 1179 00be 3B       		.uleb128 0x3b
 1180 00bf 05       		.uleb128 0x5
 1181 00c0 49       		.uleb128 0x49
 1182 00c1 13       		.uleb128 0x13
 1183 00c2 00       		.byte	0
 1184 00c3 00       		.byte	0
 1185 00c4 0F       		.uleb128 0xf
 1186 00c5 2E       		.uleb128 0x2e
 1187 00c6 00       		.byte	0
 1188 00c7 03       		.uleb128 0x3
 1189 00c8 0E       		.uleb128 0xe
 1190 00c9 3A       		.uleb128 0x3a
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 46


 1191 00ca 0B       		.uleb128 0xb
 1192 00cb 3B       		.uleb128 0x3b
 1193 00cc 05       		.uleb128 0x5
 1194 00cd 27       		.uleb128 0x27
 1195 00ce 19       		.uleb128 0x19
 1196 00cf 20       		.uleb128 0x20
 1197 00d0 0B       		.uleb128 0xb
 1198 00d1 00       		.byte	0
 1199 00d2 00       		.byte	0
 1200 00d3 10       		.uleb128 0x10
 1201 00d4 2E       		.uleb128 0x2e
 1202 00d5 00       		.byte	0
 1203 00d6 03       		.uleb128 0x3
 1204 00d7 0E       		.uleb128 0xe
 1205 00d8 3A       		.uleb128 0x3a
 1206 00d9 0B       		.uleb128 0xb
 1207 00da 3B       		.uleb128 0x3b
 1208 00db 0B       		.uleb128 0xb
 1209 00dc 27       		.uleb128 0x27
 1210 00dd 19       		.uleb128 0x19
 1211 00de 49       		.uleb128 0x49
 1212 00df 13       		.uleb128 0x13
 1213 00e0 20       		.uleb128 0x20
 1214 00e1 0B       		.uleb128 0xb
 1215 00e2 00       		.byte	0
 1216 00e3 00       		.byte	0
 1217 00e4 11       		.uleb128 0x11
 1218 00e5 34       		.uleb128 0x34
 1219 00e6 00       		.byte	0
 1220 00e7 03       		.uleb128 0x3
 1221 00e8 0E       		.uleb128 0xe
 1222 00e9 3A       		.uleb128 0x3a
 1223 00ea 0B       		.uleb128 0xb
 1224 00eb 3B       		.uleb128 0x3b
 1225 00ec 05       		.uleb128 0x5
 1226 00ed 49       		.uleb128 0x49
 1227 00ee 13       		.uleb128 0x13
 1228 00ef 00       		.byte	0
 1229 00f0 00       		.byte	0
 1230 00f1 12       		.uleb128 0x12
 1231 00f2 34       		.uleb128 0x34
 1232 00f3 00       		.byte	0
 1233 00f4 03       		.uleb128 0x3
 1234 00f5 08       		.uleb128 0x8
 1235 00f6 3A       		.uleb128 0x3a
 1236 00f7 0B       		.uleb128 0xb
 1237 00f8 3B       		.uleb128 0x3b
 1238 00f9 05       		.uleb128 0x5
 1239 00fa 49       		.uleb128 0x49
 1240 00fb 13       		.uleb128 0x13
 1241 00fc 00       		.byte	0
 1242 00fd 00       		.byte	0
 1243 00fe 13       		.uleb128 0x13
 1244 00ff 2E       		.uleb128 0x2e
 1245 0100 01       		.byte	0x1
 1246 0101 3F       		.uleb128 0x3f
 1247 0102 19       		.uleb128 0x19
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 47


 1248 0103 03       		.uleb128 0x3
 1249 0104 0E       		.uleb128 0xe
 1250 0105 3A       		.uleb128 0x3a
 1251 0106 0B       		.uleb128 0xb
 1252 0107 3B       		.uleb128 0x3b
 1253 0108 0B       		.uleb128 0xb
 1254 0109 27       		.uleb128 0x27
 1255 010a 19       		.uleb128 0x19
 1256 010b 49       		.uleb128 0x49
 1257 010c 13       		.uleb128 0x13
 1258 010d 11       		.uleb128 0x11
 1259 010e 01       		.uleb128 0x1
 1260 010f 12       		.uleb128 0x12
 1261 0110 06       		.uleb128 0x6
 1262 0111 40       		.uleb128 0x40
 1263 0112 18       		.uleb128 0x18
 1264 0113 9742     		.uleb128 0x2117
 1265 0115 19       		.uleb128 0x19
 1266 0116 01       		.uleb128 0x1
 1267 0117 13       		.uleb128 0x13
 1268 0118 00       		.byte	0
 1269 0119 00       		.byte	0
 1270 011a 14       		.uleb128 0x14
 1271 011b 05       		.uleb128 0x5
 1272 011c 00       		.byte	0
 1273 011d 03       		.uleb128 0x3
 1274 011e 0E       		.uleb128 0xe
 1275 011f 3A       		.uleb128 0x3a
 1276 0120 0B       		.uleb128 0xb
 1277 0121 3B       		.uleb128 0x3b
 1278 0122 0B       		.uleb128 0xb
 1279 0123 49       		.uleb128 0x49
 1280 0124 13       		.uleb128 0x13
 1281 0125 02       		.uleb128 0x2
 1282 0126 17       		.uleb128 0x17
 1283 0127 00       		.byte	0
 1284 0128 00       		.byte	0
 1285 0129 15       		.uleb128 0x15
 1286 012a 34       		.uleb128 0x34
 1287 012b 00       		.byte	0
 1288 012c 03       		.uleb128 0x3
 1289 012d 08       		.uleb128 0x8
 1290 012e 3A       		.uleb128 0x3a
 1291 012f 0B       		.uleb128 0xb
 1292 0130 3B       		.uleb128 0x3b
 1293 0131 0B       		.uleb128 0xb
 1294 0132 49       		.uleb128 0x49
 1295 0133 13       		.uleb128 0x13
 1296 0134 02       		.uleb128 0x2
 1297 0135 18       		.uleb128 0x18
 1298 0136 00       		.byte	0
 1299 0137 00       		.byte	0
 1300 0138 16       		.uleb128 0x16
 1301 0139 34       		.uleb128 0x34
 1302 013a 00       		.byte	0
 1303 013b 03       		.uleb128 0x3
 1304 013c 0E       		.uleb128 0xe
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 48


 1305 013d 3A       		.uleb128 0x3a
 1306 013e 0B       		.uleb128 0xb
 1307 013f 3B       		.uleb128 0x3b
 1308 0140 0B       		.uleb128 0xb
 1309 0141 49       		.uleb128 0x49
 1310 0142 13       		.uleb128 0x13
 1311 0143 02       		.uleb128 0x2
 1312 0144 18       		.uleb128 0x18
 1313 0145 00       		.byte	0
 1314 0146 00       		.byte	0
 1315 0147 17       		.uleb128 0x17
 1316 0148 1D       		.uleb128 0x1d
 1317 0149 01       		.byte	0x1
 1318 014a 31       		.uleb128 0x31
 1319 014b 13       		.uleb128 0x13
 1320 014c 11       		.uleb128 0x11
 1321 014d 01       		.uleb128 0x1
 1322 014e 12       		.uleb128 0x12
 1323 014f 06       		.uleb128 0x6
 1324 0150 58       		.uleb128 0x58
 1325 0151 0B       		.uleb128 0xb
 1326 0152 59       		.uleb128 0x59
 1327 0153 0B       		.uleb128 0xb
 1328 0154 01       		.uleb128 0x1
 1329 0155 13       		.uleb128 0x13
 1330 0156 00       		.byte	0
 1331 0157 00       		.byte	0
 1332 0158 18       		.uleb128 0x18
 1333 0159 1D       		.uleb128 0x1d
 1334 015a 01       		.byte	0x1
 1335 015b 31       		.uleb128 0x31
 1336 015c 13       		.uleb128 0x13
 1337 015d 11       		.uleb128 0x11
 1338 015e 01       		.uleb128 0x1
 1339 015f 12       		.uleb128 0x12
 1340 0160 06       		.uleb128 0x6
 1341 0161 58       		.uleb128 0x58
 1342 0162 0B       		.uleb128 0xb
 1343 0163 59       		.uleb128 0x59
 1344 0164 0B       		.uleb128 0xb
 1345 0165 00       		.byte	0
 1346 0166 00       		.byte	0
 1347 0167 19       		.uleb128 0x19
 1348 0168 0B       		.uleb128 0xb
 1349 0169 01       		.byte	0x1
 1350 016a 11       		.uleb128 0x11
 1351 016b 01       		.uleb128 0x1
 1352 016c 12       		.uleb128 0x12
 1353 016d 06       		.uleb128 0x6
 1354 016e 00       		.byte	0
 1355 016f 00       		.byte	0
 1356 0170 1A       		.uleb128 0x1a
 1357 0171 34       		.uleb128 0x34
 1358 0172 00       		.byte	0
 1359 0173 31       		.uleb128 0x31
 1360 0174 13       		.uleb128 0x13
 1361 0175 02       		.uleb128 0x2
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 49


 1362 0176 17       		.uleb128 0x17
 1363 0177 00       		.byte	0
 1364 0178 00       		.byte	0
 1365 0179 1B       		.uleb128 0x1b
 1366 017a 05       		.uleb128 0x5
 1367 017b 00       		.byte	0
 1368 017c 31       		.uleb128 0x31
 1369 017d 13       		.uleb128 0x13
 1370 017e 02       		.uleb128 0x2
 1371 017f 17       		.uleb128 0x17
 1372 0180 00       		.byte	0
 1373 0181 00       		.byte	0
 1374 0182 1C       		.uleb128 0x1c
 1375 0183 1D       		.uleb128 0x1d
 1376 0184 01       		.byte	0x1
 1377 0185 31       		.uleb128 0x31
 1378 0186 13       		.uleb128 0x13
 1379 0187 11       		.uleb128 0x11
 1380 0188 01       		.uleb128 0x1
 1381 0189 12       		.uleb128 0x12
 1382 018a 06       		.uleb128 0x6
 1383 018b 58       		.uleb128 0x58
 1384 018c 0B       		.uleb128 0xb
 1385 018d 59       		.uleb128 0x59
 1386 018e 05       		.uleb128 0x5
 1387 018f 01       		.uleb128 0x1
 1388 0190 13       		.uleb128 0x13
 1389 0191 00       		.byte	0
 1390 0192 00       		.byte	0
 1391 0193 1D       		.uleb128 0x1d
 1392 0194 1D       		.uleb128 0x1d
 1393 0195 01       		.byte	0x1
 1394 0196 31       		.uleb128 0x31
 1395 0197 13       		.uleb128 0x13
 1396 0198 11       		.uleb128 0x11
 1397 0199 01       		.uleb128 0x1
 1398 019a 12       		.uleb128 0x12
 1399 019b 06       		.uleb128 0x6
 1400 019c 58       		.uleb128 0x58
 1401 019d 0B       		.uleb128 0xb
 1402 019e 59       		.uleb128 0x59
 1403 019f 05       		.uleb128 0x5
 1404 01a0 00       		.byte	0
 1405 01a1 00       		.byte	0
 1406 01a2 1E       		.uleb128 0x1e
 1407 01a3 898201   		.uleb128 0x4109
 1408 01a6 00       		.byte	0
 1409 01a7 11       		.uleb128 0x11
 1410 01a8 01       		.uleb128 0x1
 1411 01a9 31       		.uleb128 0x31
 1412 01aa 13       		.uleb128 0x13
 1413 01ab 00       		.byte	0
 1414 01ac 00       		.byte	0
 1415 01ad 1F       		.uleb128 0x1f
 1416 01ae 1D       		.uleb128 0x1d
 1417 01af 00       		.byte	0
 1418 01b0 31       		.uleb128 0x31
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 50


 1419 01b1 13       		.uleb128 0x13
 1420 01b2 11       		.uleb128 0x11
 1421 01b3 01       		.uleb128 0x1
 1422 01b4 12       		.uleb128 0x12
 1423 01b5 06       		.uleb128 0x6
 1424 01b6 58       		.uleb128 0x58
 1425 01b7 0B       		.uleb128 0xb
 1426 01b8 59       		.uleb128 0x59
 1427 01b9 0B       		.uleb128 0xb
 1428 01ba 00       		.byte	0
 1429 01bb 00       		.byte	0
 1430 01bc 20       		.uleb128 0x20
 1431 01bd 1D       		.uleb128 0x1d
 1432 01be 01       		.byte	0x1
 1433 01bf 31       		.uleb128 0x31
 1434 01c0 13       		.uleb128 0x13
 1435 01c1 52       		.uleb128 0x52
 1436 01c2 01       		.uleb128 0x1
 1437 01c3 55       		.uleb128 0x55
 1438 01c4 17       		.uleb128 0x17
 1439 01c5 58       		.uleb128 0x58
 1440 01c6 0B       		.uleb128 0xb
 1441 01c7 59       		.uleb128 0x59
 1442 01c8 0B       		.uleb128 0xb
 1443 01c9 01       		.uleb128 0x1
 1444 01ca 13       		.uleb128 0x13
 1445 01cb 00       		.byte	0
 1446 01cc 00       		.byte	0
 1447 01cd 21       		.uleb128 0x21
 1448 01ce 0B       		.uleb128 0xb
 1449 01cf 01       		.byte	0x1
 1450 01d0 55       		.uleb128 0x55
 1451 01d1 17       		.uleb128 0x17
 1452 01d2 00       		.byte	0
 1453 01d3 00       		.byte	0
 1454 01d4 22       		.uleb128 0x22
 1455 01d5 34       		.uleb128 0x34
 1456 01d6 00       		.byte	0
 1457 01d7 31       		.uleb128 0x31
 1458 01d8 13       		.uleb128 0x13
 1459 01d9 00       		.byte	0
 1460 01da 00       		.byte	0
 1461 01db 23       		.uleb128 0x23
 1462 01dc 1D       		.uleb128 0x1d
 1463 01dd 00       		.byte	0
 1464 01de 31       		.uleb128 0x31
 1465 01df 13       		.uleb128 0x13
 1466 01e0 11       		.uleb128 0x11
 1467 01e1 01       		.uleb128 0x1
 1468 01e2 12       		.uleb128 0x12
 1469 01e3 06       		.uleb128 0x6
 1470 01e4 58       		.uleb128 0x58
 1471 01e5 0B       		.uleb128 0xb
 1472 01e6 59       		.uleb128 0x59
 1473 01e7 05       		.uleb128 0x5
 1474 01e8 00       		.byte	0
 1475 01e9 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 51


 1476 01ea 24       		.uleb128 0x24
 1477 01eb 1D       		.uleb128 0x1d
 1478 01ec 01       		.byte	0x1
 1479 01ed 31       		.uleb128 0x31
 1480 01ee 13       		.uleb128 0x13
 1481 01ef 52       		.uleb128 0x52
 1482 01f0 01       		.uleb128 0x1
 1483 01f1 55       		.uleb128 0x55
 1484 01f2 17       		.uleb128 0x17
 1485 01f3 58       		.uleb128 0x58
 1486 01f4 0B       		.uleb128 0xb
 1487 01f5 59       		.uleb128 0x59
 1488 01f6 05       		.uleb128 0x5
 1489 01f7 01       		.uleb128 0x1
 1490 01f8 13       		.uleb128 0x13
 1491 01f9 00       		.byte	0
 1492 01fa 00       		.byte	0
 1493 01fb 25       		.uleb128 0x25
 1494 01fc 34       		.uleb128 0x34
 1495 01fd 00       		.byte	0
 1496 01fe 03       		.uleb128 0x3
 1497 01ff 0E       		.uleb128 0xe
 1498 0200 3A       		.uleb128 0x3a
 1499 0201 0B       		.uleb128 0xb
 1500 0202 3B       		.uleb128 0x3b
 1501 0203 0B       		.uleb128 0xb
 1502 0204 49       		.uleb128 0x49
 1503 0205 13       		.uleb128 0x13
 1504 0206 3F       		.uleb128 0x3f
 1505 0207 19       		.uleb128 0x19
 1506 0208 3C       		.uleb128 0x3c
 1507 0209 19       		.uleb128 0x19
 1508 020a 00       		.byte	0
 1509 020b 00       		.byte	0
 1510 020c 26       		.uleb128 0x26
 1511 020d 01       		.uleb128 0x1
 1512 020e 01       		.byte	0x1
 1513 020f 49       		.uleb128 0x49
 1514 0210 13       		.uleb128 0x13
 1515 0211 01       		.uleb128 0x1
 1516 0212 13       		.uleb128 0x13
 1517 0213 00       		.byte	0
 1518 0214 00       		.byte	0
 1519 0215 27       		.uleb128 0x27
 1520 0216 21       		.uleb128 0x21
 1521 0217 00       		.byte	0
 1522 0218 49       		.uleb128 0x49
 1523 0219 13       		.uleb128 0x13
 1524 021a 2F       		.uleb128 0x2f
 1525 021b 0B       		.uleb128 0xb
 1526 021c 00       		.byte	0
 1527 021d 00       		.byte	0
 1528 021e 28       		.uleb128 0x28
 1529 021f 26       		.uleb128 0x26
 1530 0220 00       		.byte	0
 1531 0221 49       		.uleb128 0x49
 1532 0222 13       		.uleb128 0x13
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 52


 1533 0223 00       		.byte	0
 1534 0224 00       		.byte	0
 1535 0225 29       		.uleb128 0x29
 1536 0226 34       		.uleb128 0x34
 1537 0227 00       		.byte	0
 1538 0228 03       		.uleb128 0x3
 1539 0229 0E       		.uleb128 0xe
 1540 022a 3A       		.uleb128 0x3a
 1541 022b 0B       		.uleb128 0xb
 1542 022c 3B       		.uleb128 0x3b
 1543 022d 05       		.uleb128 0x5
 1544 022e 49       		.uleb128 0x49
 1545 022f 13       		.uleb128 0x13
 1546 0230 3F       		.uleb128 0x3f
 1547 0231 19       		.uleb128 0x19
 1548 0232 3C       		.uleb128 0x3c
 1549 0233 19       		.uleb128 0x19
 1550 0234 00       		.byte	0
 1551 0235 00       		.byte	0
 1552 0236 2A       		.uleb128 0x2a
 1553 0237 2E       		.uleb128 0x2e
 1554 0238 00       		.byte	0
 1555 0239 3F       		.uleb128 0x3f
 1556 023a 19       		.uleb128 0x19
 1557 023b 3C       		.uleb128 0x3c
 1558 023c 19       		.uleb128 0x19
 1559 023d 6E       		.uleb128 0x6e
 1560 023e 0E       		.uleb128 0xe
 1561 023f 03       		.uleb128 0x3
 1562 0240 0E       		.uleb128 0xe
 1563 0241 3A       		.uleb128 0x3a
 1564 0242 0B       		.uleb128 0xb
 1565 0243 3B       		.uleb128 0x3b
 1566 0244 05       		.uleb128 0x5
 1567 0245 00       		.byte	0
 1568 0246 00       		.byte	0
 1569 0247 2B       		.uleb128 0x2b
 1570 0248 2E       		.uleb128 0x2e
 1571 0249 00       		.byte	0
 1572 024a 3F       		.uleb128 0x3f
 1573 024b 19       		.uleb128 0x19
 1574 024c 3C       		.uleb128 0x3c
 1575 024d 19       		.uleb128 0x19
 1576 024e 6E       		.uleb128 0x6e
 1577 024f 0E       		.uleb128 0xe
 1578 0250 03       		.uleb128 0x3
 1579 0251 0E       		.uleb128 0xe
 1580 0252 3A       		.uleb128 0x3a
 1581 0253 0B       		.uleb128 0xb
 1582 0254 3B       		.uleb128 0x3b
 1583 0255 0B       		.uleb128 0xb
 1584 0256 00       		.byte	0
 1585 0257 00       		.byte	0
 1586 0258 00       		.byte	0
 1587              		.section	.debug_loc,"",%progbits
 1588              	.Ldebug_loc0:
 1589              	.LLST0:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 53


 1590 0000 00000000 		.4byte	.LVL0
 1591 0004 3B000000 		.4byte	.LVL7-1
 1592 0008 0100     		.2byte	0x1
 1593 000a 50       		.byte	0x50
 1594 000b 3B000000 		.4byte	.LVL7-1
 1595 000f AA000000 		.4byte	.LVL15
 1596 0013 0400     		.2byte	0x4
 1597 0015 F3       		.byte	0xf3
 1598 0016 01       		.uleb128 0x1
 1599 0017 50       		.byte	0x50
 1600 0018 9F       		.byte	0x9f
 1601 0019 AA000000 		.4byte	.LVL15
 1602 001d AC000000 		.4byte	.LVL16
 1603 0021 0100     		.2byte	0x1
 1604 0023 50       		.byte	0x50
 1605 0024 AC000000 		.4byte	.LVL16
 1606 0028 AE000000 		.4byte	.LVL17
 1607 002c 0400     		.2byte	0x4
 1608 002e F3       		.byte	0xf3
 1609 002f 01       		.uleb128 0x1
 1610 0030 50       		.byte	0x50
 1611 0031 9F       		.byte	0x9f
 1612 0032 AE000000 		.4byte	.LVL17
 1613 0036 B0000000 		.4byte	.LVL18
 1614 003a 0100     		.2byte	0x1
 1615 003c 50       		.byte	0x50
 1616 003d B0000000 		.4byte	.LVL18
 1617 0041 E8000000 		.4byte	.LFE59
 1618 0045 0400     		.2byte	0x4
 1619 0047 F3       		.byte	0xf3
 1620 0048 01       		.uleb128 0x1
 1621 0049 50       		.byte	0x50
 1622 004a 9F       		.byte	0x9f
 1623 004b 00000000 		.4byte	0
 1624 004f 00000000 		.4byte	0
 1625              	.LLST1:
 1626 0053 06000000 		.4byte	.LVL1
 1627 0057 08000000 		.4byte	.LVL2
 1628 005b 0100     		.2byte	0x1
 1629 005d 55       		.byte	0x55
 1630 005e 00000000 		.4byte	0
 1631 0062 00000000 		.4byte	0
 1632              	.LLST2:
 1633 0066 16000000 		.4byte	.LVL3
 1634 006a 3B000000 		.4byte	.LVL7-1
 1635 006e 0100     		.2byte	0x1
 1636 0070 50       		.byte	0x50
 1637 0071 3B000000 		.4byte	.LVL7-1
 1638 0075 3C000000 		.4byte	.LVL7
 1639 0079 0400     		.2byte	0x4
 1640 007b F3       		.byte	0xf3
 1641 007c 01       		.uleb128 0x1
 1642 007d 50       		.byte	0x50
 1643 007e 9F       		.byte	0x9f
 1644 007f 00000000 		.4byte	0
 1645 0083 00000000 		.4byte	0
 1646              	.LLST3:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 54


 1647 0087 1E000000 		.4byte	.LVL4
 1648 008b 38000000 		.4byte	.LVL6
 1649 008f 0100     		.2byte	0x1
 1650 0091 50       		.byte	0x50
 1651 0092 00000000 		.4byte	0
 1652 0096 00000000 		.4byte	0
 1653              	.LLST4:
 1654 009a 30000000 		.4byte	.LVL5
 1655 009e 38000000 		.4byte	.LVL6
 1656 00a2 0100     		.2byte	0x1
 1657 00a4 50       		.byte	0x50
 1658 00a5 00000000 		.4byte	0
 1659 00a9 00000000 		.4byte	0
 1660              	.LLST5:
 1661 00ad 4C000000 		.4byte	.LVL8
 1662 00b1 85000000 		.4byte	.LVL9-1
 1663 00b5 0100     		.2byte	0x1
 1664 00b7 50       		.byte	0x50
 1665 00b8 B6000000 		.4byte	.LVL19
 1666 00bc B8000000 		.4byte	.LVL20
 1667 00c0 0100     		.2byte	0x1
 1668 00c2 50       		.byte	0x50
 1669 00c3 BA000000 		.4byte	.LVL21
 1670 00c7 BC000000 		.4byte	.LVL22
 1671 00cb 0100     		.2byte	0x1
 1672 00cd 50       		.byte	0x50
 1673 00ce 00000000 		.4byte	0
 1674 00d2 00000000 		.4byte	0
 1675              	.LLST6:
 1676 00d6 86000000 		.4byte	.LVL9
 1677 00da 9A000000 		.4byte	.LVL11
 1678 00de 0100     		.2byte	0x1
 1679 00e0 50       		.byte	0x50
 1680 00e1 A2000000 		.4byte	.LVL13
 1681 00e5 A5000000 		.4byte	.LVL14-1
 1682 00e9 0100     		.2byte	0x1
 1683 00eb 50       		.byte	0x50
 1684 00ec 00000000 		.4byte	0
 1685 00f0 00000000 		.4byte	0
 1686              	.LLST7:
 1687 00f4 96000000 		.4byte	.LVL10
 1688 00f8 9A000000 		.4byte	.LVL11
 1689 00fc 0100     		.2byte	0x1
 1690 00fe 50       		.byte	0x50
 1691 00ff 00000000 		.4byte	0
 1692 0103 00000000 		.4byte	0
 1693              	.LLST8:
 1694 0107 A2000000 		.4byte	.LVL13
 1695 010b A5000000 		.4byte	.LVL14-1
 1696 010f 0100     		.2byte	0x1
 1697 0111 50       		.byte	0x50
 1698 0112 00000000 		.4byte	0
 1699 0116 00000000 		.4byte	0
 1700              	.LLST9:
 1701 011a BC000000 		.4byte	.LVL22
 1702 011e C0000000 		.4byte	.LVL23
 1703 0122 0100     		.2byte	0x1
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 55


 1704 0124 55       		.byte	0x55
 1705 0125 00000000 		.4byte	0
 1706 0129 00000000 		.4byte	0
 1707              		.section	.debug_aranges,"",%progbits
 1708 0000 1C000000 		.4byte	0x1c
 1709 0004 0200     		.2byte	0x2
 1710 0006 00000000 		.4byte	.Ldebug_info0
 1711 000a 04       		.byte	0x4
 1712 000b 00       		.byte	0
 1713 000c 0000     		.2byte	0
 1714 000e 0000     		.2byte	0
 1715 0010 00000000 		.4byte	.LFB59
 1716 0014 E8000000 		.4byte	.LFE59-.LFB59
 1717 0018 00000000 		.4byte	0
 1718 001c 00000000 		.4byte	0
 1719              		.section	.debug_ranges,"",%progbits
 1720              	.Ldebug_ranges0:
 1721 0000 44000000 		.4byte	.LBB81
 1722 0004 9E000000 		.4byte	.LBE81
 1723 0008 A2000000 		.4byte	.LBB94
 1724 000c A6000000 		.4byte	.LBE94
 1725 0010 00000000 		.4byte	0
 1726 0014 00000000 		.4byte	0
 1727 0018 82000000 		.4byte	.LBB85
 1728 001c 9E000000 		.4byte	.LBE85
 1729 0020 A2000000 		.4byte	.LBB92
 1730 0024 A6000000 		.4byte	.LBE92
 1731 0028 00000000 		.4byte	0
 1732 002c 00000000 		.4byte	0
 1733 0030 00000000 		.4byte	.LFB59
 1734 0034 E8000000 		.4byte	.LFE59
 1735 0038 00000000 		.4byte	0
 1736 003c 00000000 		.4byte	0
 1737              		.section	.debug_line,"",%progbits
 1738              	.Ldebug_line0:
 1739 0000 F6010000 		.section	.debug_str,"MS",%progbits,1
 1739      02007801 
 1739      00000201 
 1739      FB0E0D00 
 1739      01010101 
 1740              	.LASF60:
 1741 0000 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1741      74645F65 
 1741      6E646379 
 1741      636C655F 
 1741      6E657874 
 1742              	.LASF22:
 1743 0019 4B65726E 		.ascii	"Kernel_Context\000"
 1743      656C5F43 
 1743      6F6E7465 
 1743      787400
 1744              	.LASF10:
 1745 0028 45455F55 		.ascii	"EE_UINT8\000"
 1745      494E5438 
 1745      00
 1746              	.LASF69:
 1747 0031 45455F72 		.ascii	"EE_rq_bitmask\000"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 56


 1747      715F6269 
 1747      746D6173 
 1747      6B00
 1748              	.LASF15:
 1749 003f 45455F55 		.ascii	"EE_UREG\000"
 1749      52454700 
 1750              	.LASF76:
 1751 0047 45455F72 		.ascii	"EE_rq_insert\000"
 1751      715F696E 
 1751      73657274 
 1751      00
 1752              	.LASF70:
 1753 0054 45455F74 		.ascii	"EE_th_event_active\000"
 1753      685F6576 
 1753      656E745F 
 1753      61637469 
 1753      766500
 1754              	.LASF53:
 1755 0067 45455F6F 		.ascii	"EE_oo_task_in_ready_queue\000"
 1755      6F5F7461 
 1755      736B5F69 
 1755      6E5F7265 
 1755      6164795F 
 1756              	.LASF2:
 1757 0081 73686F72 		.ascii	"short int\000"
 1757      7420696E 
 1757      7400
 1758              	.LASF21:
 1759 008b 53746174 		.ascii	"StatusType\000"
 1759      75735479 
 1759      706500
 1760              	.LASF16:
 1761 0096 45455F46 		.ascii	"EE_FREG\000"
 1761      52454700 
 1762              	.LASF14:
 1763 009e 45455F55 		.ascii	"EE_UINT32\000"
 1763      494E5433 
 1763      3200
 1764              	.LASF62:
 1765 00a8 45455F74 		.ascii	"EE_th_ready_prio\000"
 1765      685F7265 
 1765      6164795F 
 1765      7072696F 
 1765      00
 1766              	.LASF24:
 1767 00b9 49535232 		.ascii	"ISR2_Context\000"
 1767      5F436F6E 
 1767      74657874 
 1767      00
 1768              	.LASF18:
 1769 00c6 45455F54 		.ascii	"EE_TID\000"
 1769      494400
 1770              	.LASF33:
 1771 00cd 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 1771      59504543 
 1771      4F4E5445 
 1771      585400
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 57


 1772              	.LASF38:
 1773 00dc 746E6F74 		.ascii	"tnotactive\000"
 1773      61637469 
 1773      766500
 1774              	.LASF55:
 1775 00e7 69737461 		.ascii	"istat\000"
 1775      7400
 1776              	.LASF71:
 1777 00ed 45455F74 		.ascii	"EE_th_waswaiting\000"
 1777      685F7761 
 1777      73776169 
 1777      74696E67 
 1777      00
 1778              	.LASF59:
 1779 00fe 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1779      52515F6E 
 1779      65737469 
 1779      6E675F6C 
 1779      6576656C 
 1780              	.LASF25:
 1781 0113 4572726F 		.ascii	"ErrorHook_Context\000"
 1781      72486F6F 
 1781      6B5F436F 
 1781      6E746578 
 1781      7400
 1782              	.LASF47:
 1783 0125 45455F4F 		.ascii	"EE_ORTI_set_service_in\000"
 1783      5254495F 
 1783      7365745F 
 1783      73657276 
 1783      6963655F 
 1784              	.LASF73:
 1785 013c 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1785      6F5F4952 
 1785      515F7375 
 1785      7370656E 
 1785      645F7374 
 1786              	.LASF57:
 1787 0155 45455F6F 		.ascii	"EE_oo_run_next_task\000"
 1787      6F5F7275 
 1787      6E5F6E65 
 1787      78745F74 
 1787      61736B00 
 1788              	.LASF32:
 1789 0169 49646C65 		.ascii	"Idle_Context\000"
 1789      5F436F6E 
 1789      74657874 
 1789      00
 1790              	.LASF6:
 1791 0176 6C6F6E67 		.ascii	"long long int\000"
 1791      206C6F6E 
 1791      6720696E 
 1791      7400
 1792              	.LASF11:
 1793 0184 45455F49 		.ascii	"EE_INT8\000"
 1793      4E543800 
 1794              	.LASF19:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 58


 1795 018c 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 1795      5950455F 
 1795      52515F4D 
 1795      41534B00 
 1796              	.LASF37:
 1797 019c 45455F6F 		.ascii	"EE_oo_reset_th_event_active\000"
 1797      6F5F7265 
 1797      7365745F 
 1797      74685F65 
 1797      76656E74 
 1798              	.LASF4:
 1799 01b8 6C6F6E67 		.ascii	"long int\000"
 1799      20696E74 
 1799      00
 1800              	.LASF35:
 1801 01c1 45455F4F 		.ascii	"EE_ORTI_set_service\000"
 1801      5254495F 
 1801      7365745F 
 1801      73657276 
 1801      69636500 
 1802              	.LASF36:
 1803 01d5 45455F61 		.ascii	"EE_as_set_execution_context\000"
 1803      735F7365 
 1803      745F6578 
 1803      65637574 
 1803      696F6E5F 
 1804              	.LASF42:
 1805 01f1 45455F68 		.ascii	"EE_hal_ready2stacked\000"
 1805      616C5F72 
 1805      65616479 
 1805      32737461 
 1805      636B6564 
 1806              	.LASF40:
 1807 0206 5461736B 		.ascii	"TaskID\000"
 1807      494400
 1808              	.LASF68:
 1809 020d 45455F73 		.ascii	"EE_sys_ceiling\000"
 1809      79735F63 
 1809      65696C69 
 1809      6E6700
 1810              	.LASF84:
 1811 021c 45455F6F 		.ascii	"EE_oo_ActivateTask\000"
 1811      6F5F4163 
 1811      74697661 
 1811      74655461 
 1811      736B00
 1812              	.LASF9:
 1813 022f 6C6F6E67 		.ascii	"long double\000"
 1813      20646F75 
 1813      626C6500 
 1814              	.LASF77:
 1815 023b 45455F63 		.ascii	"EE_cortex_mx_change_context\000"
 1815      6F727465 
 1815      785F6D78 
 1815      5F636861 
 1815      6E67655F 
 1816              	.LASF20:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 59


 1817 0257 5461736B 		.ascii	"TaskType\000"
 1817      54797065 
 1817      00
 1818              	.LASF1:
 1819 0260 756E7369 		.ascii	"unsigned char\000"
 1819      676E6564 
 1819      20636861 
 1819      7200
 1820              	.LASF51:
 1821 026e 45455F68 		.ascii	"EE_hal_end_nested_primitive\000"
 1821      616C5F65 
 1821      6E645F6E 
 1821      65737465 
 1821      645F7072 
 1822              	.LASF83:
 1823 028a 45455F63 		.ascii	"EE_cortex_mx_suspendIRQ\000"
 1823      6F727465 
 1823      785F6D78 
 1823      5F737573 
 1823      70656E64 
 1824              	.LASF41:
 1825 02a2 45455F68 		.ascii	"EE_hal_stkchange\000"
 1825      616C5F73 
 1825      746B6368 
 1825      616E6765 
 1825      00
 1826              	.LASF0:
 1827 02b3 7369676E 		.ascii	"signed char\000"
 1827      65642063 
 1827      68617200 
 1828              	.LASF7:
 1829 02bf 6C6F6E67 		.ascii	"long long unsigned int\000"
 1829      206C6F6E 
 1829      6720756E 
 1829      7369676E 
 1829      65642069 
 1830              	.LASF46:
 1831 02d6 45455F61 		.ascii	"EE_as_monitoring_the_stack\000"
 1831      735F6D6F 
 1831      6E69746F 
 1831      72696E67 
 1831      5F746865 
 1832              	.LASF39:
 1833 02f1 45455F6F 		.ascii	"EE_oo_set_th_status_ready\000"
 1833      6F5F7365 
 1833      745F7468 
 1833      5F737461 
 1833      7475735F 
 1834              	.LASF48:
 1835 030b 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1835      746B5F71 
 1835      75657279 
 1835      66697273 
 1835      7400
 1836              	.LASF8:
 1837 031d 756E7369 		.ascii	"unsigned int\000"
 1837      676E6564 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 60


 1837      20696E74 
 1837      00
 1838              	.LASF64:
 1839 032a 45455F74 		.ascii	"EE_th_status\000"
 1839      685F7374 
 1839      61747573 
 1839      00
 1840              	.LASF66:
 1841 0337 45455F74 		.ascii	"EE_th_rnact\000"
 1841      685F726E 
 1841      61637400 
 1842              	.LASF13:
 1843 0343 45455F49 		.ascii	"EE_INT32\000"
 1843      4E543332 
 1843      00
 1844              	.LASF44:
 1845 034c 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 1845      6F5F6361 
 1845      6C6C5F50 
 1845      6F737454 
 1845      61736B48 
 1846              	.LASF23:
 1847 0364 5441534B 		.ascii	"TASK_Context\000"
 1847      5F436F6E 
 1847      74657874 
 1847      00
 1848              	.LASF3:
 1849 0371 73686F72 		.ascii	"short unsigned int\000"
 1849      7420756E 
 1849      7369676E 
 1849      65642069 
 1849      6E7400
 1850              	.LASF30:
 1851 0384 53687574 		.ascii	"ShutdownHook_Context\000"
 1851      646F776E 
 1851      486F6F6B 
 1851      5F436F6E 
 1851      74657874 
 1852              	.LASF12:
 1853 0399 45455F55 		.ascii	"EE_UINT16\000"
 1853      494E5431 
 1853      3600
 1854              	.LASF31:
 1855 03a3 416C6172 		.ascii	"AlarmCallback_Context\000"
 1855      6D43616C 
 1855      6C626163 
 1855      6B5F436F 
 1855      6E746578 
 1856              	.LASF45:
 1857 03b9 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 1857      5254495F 
 1857      7365745F 
 1857      74685F65 
 1857      715F6469 
 1858              	.LASF79:
 1859 03d9 45455F72 		.ascii	"EE_rq_queryfirst\000"
 1859      715F7175 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 61


 1859      65727966 
 1859      69727374 
 1859      00
 1860              	.LASF34:
 1861 03ea 45455F63 		.ascii	"EE_cortex_mx_resumeIRQ\000"
 1861      6F727465 
 1861      785F6D78 
 1861      5F726573 
 1861      756D6549 
 1862              	.LASF81:
 1863 0401 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_activate.c\000"
 1863      72617465 
 1863      645F536F 
 1863      75726365 
 1863      5C50536F 
 1864              	.LASF74:
 1865 0430 45455F41 		.ascii	"EE_ApplicationMode\000"
 1865      70706C69 
 1865      63617469 
 1865      6F6E4D6F 
 1865      646500
 1866              	.LASF5:
 1867 0443 6C6F6E67 		.ascii	"long unsigned int\000"
 1867      20756E73 
 1867      69676E65 
 1867      6420696E 
 1867      7400
 1868              	.LASF17:
 1869 0455 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1869      59504542 
 1869      4F4F4C00 
 1870              	.LASF67:
 1871 0461 45455F73 		.ascii	"EE_stkfirst\000"
 1871      746B6669 
 1871      72737400 
 1872              	.LASF26:
 1873 046d 50726F74 		.ascii	"ProtectionHook_Context\000"
 1873      65637469 
 1873      6F6E486F 
 1873      6F6B5F43 
 1873      6F6E7465 
 1874              	.LASF50:
 1875 0484 45455F68 		.ascii	"EE_hal_get_IRQ_nesting_level\000"
 1875      616C5F67 
 1875      65745F49 
 1875      52515F6E 
 1875      65737469 
 1876              	.LASF63:
 1877 04a1 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1877      685F6469 
 1877      73706174 
 1877      63685F70 
 1877      72696F00 
 1878              	.LASF27:
 1879 04b5 50726554 		.ascii	"PreTaskHook_Context\000"
 1879      61736B48 
 1879      6F6F6B5F 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 62


 1879      436F6E74 
 1879      65787400 
 1880              	.LASF54:
 1881 04c9 45455F6F 		.ascii	"EE_oo_preemption_point\000"
 1881      6F5F7072 
 1881      65656D70 
 1881      74696F6E 
 1881      5F706F69 
 1882              	.LASF28:
 1883 04e0 506F7374 		.ascii	"PostTaskHook_Context\000"
 1883      5461736B 
 1883      486F6F6B 
 1883      5F436F6E 
 1883      74657874 
 1884              	.LASF61:
 1885 04f5 73697A65 		.ascii	"sizetype\000"
 1885      74797065 
 1885      00
 1886              	.LASF75:
 1887 04fe 45455F72 		.ascii	"EE_rq_lookup\000"
 1887      715F6C6F 
 1887      6F6B7570 
 1887      00
 1888              	.LASF56:
 1889 050b 63757272 		.ascii	"current\000"
 1889      656E7400 
 1890              	.LASF58:
 1891 0513 666C6167 		.ascii	"flag\000"
 1891      00
 1892              	.LASF65:
 1893 0518 45455F74 		.ascii	"EE_th_next\000"
 1893      685F6E65 
 1893      787400
 1894              	.LASF80:
 1895 0523 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1895      43313120 
 1895      352E342E 
 1895      31203230 
 1895      31363036 
 1896 0556 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1896      20726576 
 1896      6973696F 
 1896      6E203233 
 1896      37373135 
 1897 0589 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1897      66756E63 
 1897      74696F6E 
 1897      2D736563 
 1897      74696F6E 
 1898              	.LASF72:
 1899 05b1 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1899      6F5F4952 
 1899      515F6469 
 1899      7361626C 
 1899      655F636F 
 1900              	.LASF43:
 1901 05c9 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccRxa6HV.s 			page 63


 1901      6F5F6361 
 1901      6C6C5F50 
 1901      72655461 
 1901      736B486F 
 1902              	.LASF29:
 1903 05e0 53746172 		.ascii	"StartupHook_Context\000"
 1903      74757048 
 1903      6F6F6B5F 
 1903      436F6E74 
 1903      65787400 
 1904              	.LASF52:
 1905 05f4 45455F4F 		.ascii	"EE_ORTI_set_service_out\000"
 1905      5254495F 
 1905      7365745F 
 1905      73657276 
 1905      6963655F 
 1906              	.LASF49:
 1907 060c 45455F68 		.ascii	"EE_hal_begin_nested_primitive\000"
 1907      616C5F62 
 1907      6567696E 
 1907      5F6E6573 
 1907      7465645F 
 1908              	.LASF82:
 1909 062a 433A5C55 		.ascii	"C:\\Users\\zakis\\Documents\\EOS_Assignment_Two\\JS"
 1909      73657273 
 1909      5C7A616B 
 1909      69735C44 
 1909      6F63756D 
 1910 0658 4F4E5F50 		.ascii	"ON_Parser\\EOS_Assignment_Two\\JSON_Parser.cydsn\000"
 1910      61727365 
 1910      725C454F 
 1910      535F4173 
 1910      7369676E 
 1911              	.LASF78:
 1912 0687 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 1912      71327374 
 1912      6B5F6578 
 1912      6368616E 
 1912      676500
 1913              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
